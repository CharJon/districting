+ states='
AK
AL
AR
AZ
CA
CO
CT
DE
FL
GA
HI
IA
ID
IL
IN
KS
KY
LA
MA
MD
ME
MI
MN
MO
MS
MT
NC
ND
NE
NH
NJ
NM
NV
NY
OH
OK
OR
PA
RI
SC
SD
TN
TX
UT
VA
VT
WA
WI
WV
WY
'
+ for state in $states
+ echo 'Running AK'
Running AK
+ /home/lykhovyd/progs/districting/districting myconfig.txt AK /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/AK.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/AK/counties/graph/AK.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/AK/counties/graph/AK_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/AK/counties/graph/AK.population
state[2]        = AK
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/AK.ralg_hot
nr_comp = 1
graph: 29 nodes, 51 edges (read)
Model input: L = 706680, U = 713782, k = 1.
Graph is connected.
Model input: total population = 710231
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.08749727405001e+05, norm = 1.41420486238314e-02, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 2.08749731470790e+05, norm = 7.07102431191568e-03, diff = 1.42500000000000e+00
iter = 3, step = 1.14000000000000e+00, func = 2.08749733450727e+05, norm = 3.53551215595784e-03, diff = 5.70000000000000e-01
iter = 4, step = 1.14000000000000e+00, func = 2.08749733486033e+05, norm = 1.76775607797892e-03, diff = 2.85000000000000e-01
iter = 5, step = 1.14000000000000e+00, func = 2.08749734458348e+05, norm = 8.83878038989460e-04, diff = 1.42500000000000e-01
iter = 6, step = 1.08300000000000e+00, func = 2.08749734241747e+05, norm = 4.41939019494730e-04, diff = 3.56249999999999e-02
iter = 7, step = 1.08300000000000e+00, func = 2.08749734470943e+05, norm = 2.20969509747365e-04, diff = 3.38437500000000e-02
iter = 8, step = 1.02885000000000e+00, func = 2.08749734421230e+05, norm = 1.10484754873683e-04, diff = 8.46093750000003e-03
iter = 9, step = 1.02885000000000e+00, func = 2.08749734473934e+05, norm = 5.52423774368419e-05, diff = 8.03789062500013e-03
iter = 10, step = 9.77407500000000e-01, func = 2.08749734463857e+05, norm = 2.76211887184203e-05, diff = 2.00947265624999e-03
iter = 11, step = 9.77407500000000e-01, func = 2.08749734474645e+05, norm = 1.38105943592098e-05, diff = 1.90899902343753e-03
iter = 12, step = 9.28537125000000e-01, func = 2.08749734473982e+05, norm = 6.90529717960600e-06, diff = 4.77249755859413e-04
iter = 13, step = 9.28537125000000e-01, func = 2.08749734474814e+05, norm = 3.45264858980215e-06, diff = 4.53387268066345e-04
iter = 14, step = 9.28537125000000e-01, func = 2.08749734475583e+05, norm = 1.72632429490054e-06, diff = 2.26693634033069e-04
iter = 15, step = 9.28537125000000e-01, func = 2.08749734475615e+05, norm = 8.63162147450639e-07, diff = 1.13346817016521e-04
iter = 16, step = 9.28537125000000e-01, func = 2.08749734475986e+05, norm = 4.31581073725035e-07, diff = 5.66734085082398e-05
iter = 17, step = 8.82110268750000e-01, func = 2.08749734475916e+05, norm = 2.15790536862777e-07, diff = 1.41683521270599e-05
iter = 18, step = 8.82110268750000e-01, func = 2.08749734475990e+05, norm = 1.07895268431446e-07, diff = 1.34599345206698e-05
iter = 19, step = 8.38004755312500e-01, func = 2.08749734475987e+05, norm = 5.39476342156916e-08, diff = 3.36498363023749e-06
iter = 20, step = 8.38004755312500e-01, func = 2.08749734475991e+05, norm = 2.69738171083683e-08, diff = 3.19673444866535e-06
iter = 21, step = 7.96104517546875e-01, func = 2.08749734475995e+05, norm = 7.07067080040315e-03, diff = 7.99183612186616e-07
iter = 22, step = 7.56299291669531e-01, func = 2.08749731661509e+05, norm = 7.07067080040951e-03, diff = 3.98052258773991e-01
iter = 23, step = 9.07559150003437e-01, func = 2.08749733279834e+05, norm = 3.53533540020476e-03, diff = 5.67224468752937e-01
iter = 24, step = 9.07559150003437e-01, func = 2.08749734067903e+05, norm = 1.76766770010238e-03, diff = 2.26889787501175e-01
iter = 25, step = 9.07559150003437e-01, func = 2.08749734081965e+05, norm = 8.83833850051190e-04, diff = 1.13444893750588e-01
iter = 26, step = 9.07559150003437e-01, func = 2.08749734468969e+05, norm = 4.41916925025595e-04, diff = 5.67224468752937e-02
iter = 27, step = 8.62181192503265e-01, func = 2.08749734382764e+05, norm = 2.20958462512797e-04, diff = 1.41806117188234e-02
iter = 28, step = 8.62181192503265e-01, func = 2.08749734473982e+05, norm = 1.10479231256399e-04, diff = 1.34715811328823e-02
iter = 29, step = 8.19072132878102e-01, func = 2.08749734454204e+05, norm = 5.52396156281993e-05, diff = 3.36789528322057e-03
iter = 30, step = 8.19072132878102e-01, func = 2.08749734475174e+05, norm = 2.76198078140997e-05, diff = 3.19950051905954e-03
iter = 31, step = 7.78118526234197e-01, func = 2.08749734471171e+05, norm = 1.38099039070498e-05, diff = 7.99875129764884e-04
iter = 32, step = 7.78118526234197e-01, func = 2.08749734475456e+05, norm = 6.90495195352492e-06, diff = 7.59881373276640e-04
iter = 33, step = 7.39212599922487e-01, func = 2.08749734475201e+05, norm = 3.45247597676246e-06, diff = 1.89970343319160e-04
iter = 34, step = 7.39212599922487e-01, func = 2.08749734475523e+05, norm = 1.72623798838123e-06, diff = 1.80471826153202e-04
iter = 35, step = 7.39212599922487e-01, func = 2.08749734475839e+05, norm = 8.63118994190615e-07, diff = 9.02359130766010e-05
iter = 36, step = 7.39212599922487e-01, func = 2.08749734475842e+05, norm = 4.31559497095307e-07, diff = 4.51179565383005e-05
iter = 37, step = 7.39212599922487e-01, func = 2.08749734475997e+05, norm = 1.08100412332571e-07, diff = 2.25589782691503e-05
iter = 38, step = 7.02251969926362e-01, func = 2.08749734475995e+05, norm = 5.52930052856438e-08, diff = 8.75427116451937e-07
iter = 39, step = 6.67139371430044e-01, func = 2.08749734475986e+05, norm = 5.54425891116224e-08, diff = 2.75544848451651e-06
iter = 40, step = 6.67139371430044e-01, func = 2.08749734475997e+05, norm = 2.77212945558112e-08, diff = 2.61767606029069e-06
iter = 41, step = 6.33782402858542e-01, func = 2.08749734475999e+05, norm = 9.70169679963056e-09, diff = 6.54419015072672e-07
iter = 42, step = 6.02093282715615e-01, func = 2.08749734475997e+05, norm = 9.37745575571146e-09, diff = 5.41105877088725e-07
iter = 43, step = 5.71988618579834e-01, func = 2.08749734475999e+05, norm = 4.84951168224120e-09, diff = 2.89397422495448e-07
iter = 44, step = 5.43389187650842e-01, func = 2.08749734476000e+05, norm = 4.68840472239326e-09, diff = 2.45176110715944e-07
iter = 45, step = 5.16219728268300e-01, func = 2.08749734476001e+05, norm = 3.37832127951187e-09, diff = 1.29931013674526e-07
iter = 46, step = 4.90408741854885e-01, func = 2.08749734476001e+05, norm = 1.89549097175775e-09, diff = 6.17172314954000e-08
iter = 47, step = 4.65888304762141e-01, func = 2.08749734476001e+05, norm = 2.12546495294903e-09, diff = 7.82843243939101e-08
iter = 48, step = 4.42593889524034e-01, func = 2.08749734476001e+05, norm = 1.06273247647452e-09, diff = 3.71850540871073e-08
iter = 49, step = 4.20464195047832e-01, func = 2.08749734476001e+05, norm = 5.31366238237258e-10, diff = 1.76629006913760e-08
iter = 50, step = 4.20464195047832e-01, func = 2.08749734476001e+05, norm = 2.65683119118629e-10, diff = 1.67797556568072e-08
iter = 51, step = 3.99440985295440e-01, func = 2.08749734476001e+05, norm = 6.74703649423744e-10, diff = 4.19493891420180e-09
iter = 52, step = 3.79468936030668e-01, func = 2.08749734476001e+05, norm = 6.78647405274560e-10, diff = 1.91798713599280e-08
iter = 53, step = 3.79468936030668e-01, func = 2.08749734476001e+05, norm = 3.39323702637280e-10, diff = 1.82208777919316e-08
iter = 54, step = 3.60495489229135e-01, func = 2.08749734476000e+05, norm = 1.69661851318640e-10, diff = 4.55521944798289e-09
iter = 55, step = 3.60495489229135e-01, func = 2.08749734476001e+05, norm = 8.48309256593200e-11, diff = 4.32745847558374e-09
iter = 56, step = 3.60495489229135e-01, func = 2.08749734476001e+05, norm = 6.89476094919612e-11, diff = 2.16372923779187e-09
iter = 57, step = 3.42470714767678e-01, func = 2.08749734476001e+05, norm = 7.41421194903911e-11, diff = 1.93082140451733e-09
iter = 58, step = 3.42470714767678e-01, func = 2.08749734476001e+05, norm = 3.70710597451955e-11, diff = 1.83428033429147e-09
iter = 59, step = 3.42470714767678e-01, func = 2.08749734476001e+05, norm = 1.85355298725978e-11, diff = 9.17140167145734e-10
iter = 60, step = 3.25347179029294e-01, func = 2.08749734476000e+05, norm = 1.95505446753080e-11, diff = 2.29285041786433e-10
iter = 61, step = 3.09079820077830e-01, func = 2.08749734476001e+05, norm = 2.02579357773147e-11, diff = 4.70749419767781e-10
iter = 62, step = 2.93625829073938e-01, func = 2.08749734476001e+05, norm = 7.15684801636270e-12, diff = 2.23605974389696e-10
iter = 63, step = 2.78944537620241e-01, func = 2.08749734476001e+05, norm = 6.07826259514770e-12, diff = 1.58695828940215e-10
iter = 64, step = 2.78944537620241e-01, func = 2.08749734476001e+05, norm = 4.77914890531160e-12, diff = 1.91039920885505e-10
iter = 65, step = 2.78944537620241e-01, func = 2.08749734476001e+05, norm = 2.65438713019712e-12, diff = 9.55199604427524e-11
iter = 66, step = 2.64997310739229e-01, func = 2.08749734476001e+05, norm = 2.88226308371719e-12, diff = 6.00495730731845e-11
B(grad) is 0, break
ralg done, iterations : 67, matrix resets : 0
f_optimal = 2.087497e+05
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 29
  UB from restricted IP = 208750 using centers : 4 
In iteration 0 of HessHeuristic, objective value of incumbent is = 208750
  UB from restricted IP = 466687 using centers : 16 
  UB from restricted IP = 208750 using centers : 4 
In iteration 1 of HessHeuristic, objective value of incumbent is = 208750
  UB from restricted IP = 525783 using centers : 2 
  UB from restricted IP = 208750 using centers : 4 
In iteration 2 of HessHeuristic, objective value of incumbent is = 208750
  UB from restricted IP = 696664 using centers : 18 
  UB from restricted IP = 208750 using centers : 4 
In iteration 3 of HessHeuristic, objective value of incumbent is = 208750
  UB from restricted IP = 1.05834e+06 using centers : 0 
  UB from restricted IP = 208750 using centers : 4 
In iteration 4 of HessHeuristic, objective value of incumbent is = 208750
  UB from restricted IP = 245738 using centers : 3 
  UB from restricted IP = 208750 using centers : 4 
In iteration 5 of HessHeuristic, objective value of incumbent is = 208750
  UB from restricted IP = 587472 using centers : 15 
  UB from restricted IP = 208750 using centers : 4 
In iteration 6 of HessHeuristic, objective value of incumbent is = 208750
  UB from restricted IP = 343946 using centers : 26 
  UB from restricted IP = 208750 using centers : 4 
In iteration 7 of HessHeuristic, objective value of incumbent is = 208750
  UB from restricted IP = 1.21331e+06 using centers : 13 
  UB from restricted IP = 208750 using centers : 4 
In iteration 8 of HessHeuristic, objective value of incumbent is = 208750
  UB from restricted IP = 660080 using centers : 9 
  UB from restricted IP = 208750 using centers : 4 
In iteration 9 of HessHeuristic, objective value of incumbent is = 208750
UB at end of HessHeuristic = 208750
UB of heuristicSolution = 208750
Best solution after 10 of HessHeuristic is 208749.73

Beginning LOCAL SEARCH with UB = 208750

Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 29
  checking neighbors of node 4
UB at end of local search heuristic = 208750
UB of heuristicSolution = 208750
Best solution after local search is 208749.73
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 29
Optimize a model with 87 rows, 131 columns and 440 nonzeros
Variable types: 102 continuous, 29 integer (29 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+05]
  Objective range  [1e+02, 7e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

Loaded MIP start with objective 208750

Presolve removed 39 rows and 43 columns
Presolve time: 0.00s
Presolved: 48 rows, 88 columns, 259 nonzeros
Variable types: 88 continuous, 0 integer (0 binary)

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 208750 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.087497344760e+05, best bound 2.087497344760e+05, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 208750 using centers : 4 
UB at end of ContiguityHeuristic = 208750
UB of (contiguous) heuristicSolution = 208750

Number of variables fixed to zero = 812
Number of variables fixed to one  = 0
Number of variables not fixed     = 29
Number of centers left            = 1
Percentage of vars fixed = 0.97
Academic license - for non-commercial use only
Build hess : created 29 variables
Optimize a model with 145 rows, 58 columns and 204 nonzeros
Variable types: 29 continuous, 29 integer (29 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [1e+02, 7e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]

Loaded MIP start with objective 208750

Presolve removed 145 rows and 58 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 1: 208750 

Optimal solution found (tolerance 0.00e+00)
Best objective 2.087497344760e+05, best bound 2.087497344760e+05, gap 0.0000%
IP duration time: 0.000439 seconds
Total time elapsed: 0.032710 seconds
Number of callbacks: 1
Time in callbacks: 0.000006 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running AL'
Running AL
+ /home/lykhovyd/progs/districting/districting myconfig.txt AL /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/AL.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/AL/counties/graph/AL.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/AL/counties/graph/AL_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/AL/counties/graph/AL.population
state[2]        = AL
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/AL.ralg_hot
nr_comp = 1
graph: 67 nodes, 171 edges (read)
Model input: L = 679406, U = 686233, k = 7.
Graph is connected.
Model input: total population = 4779736
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.40219037327555e+04, norm = 1.71601216927033e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.40230885003134e+04, norm = 1.05615228179503e+01, diff = 7.15044691109737e-01
iter = 3, step = 9.02500000000000e-01, func = 1.40234912201469e+04, norm = 8.91303719691953e+00, diff = 1.30980599151713e+00
iter = 4, step = 9.02500000000000e-01, func = 1.40244259884539e+04, norm = 7.85364287142305e+00, diff = 1.39348890095353e+00
iter = 5, step = 8.57375000000000e-01, func = 1.40251536132239e+04, norm = 6.88998252581505e+00, diff = 5.91319999131853e-01
iter = 6, step = 8.14506250000000e-01, func = 1.40243829440973e+04, norm = 8.24806087743198e+00, diff = 6.19102453190807e-01
iter = 7, step = 8.14506250000000e-01, func = 1.40246668120084e+04, norm = 8.83168874608805e+00, diff = 1.12668552730564e+00
iter = 8, step = 7.73780937500000e-01, func = 1.40257887352762e+04, norm = 6.55951088414571e+00, diff = 5.30107983577473e-01
iter = 9, step = 7.35091890625000e-01, func = 1.40258995555249e+04, norm = 7.16578198694971e+00, diff = 5.47323257931278e-01
iter = 10, step = 6.98337296093750e-01, func = 1.40264048401872e+04, norm = 6.14253495750579e+00, diff = 4.73368262830971e-01
iter = 11, step = 6.63420431289062e-01, func = 1.40267197913956e+04, norm = 5.96914695683744e+00, diff = 5.00000478767958e-01
iter = 12, step = 6.30249409724609e-01, func = 1.40267286739253e+04, norm = 6.17546462282769e+00, diff = 4.35957996293964e-01
iter = 13, step = 5.98736939238379e-01, func = 1.40272770346021e+04, norm = 4.28822136706345e+00, diff = 4.23919649647403e-01
iter = 14, step = 5.68800092276460e-01, func = 1.40270756272935e+04, norm = 5.31237933918332e+00, diff = 4.62095881022489e-01
iter = 15, step = 5.40360087662637e-01, func = 1.40272720353625e+04, norm = 4.78583946287576e+00, diff = 3.24501860608638e-01
iter = 16, step = 5.13342083279505e-01, func = 1.40271916007629e+04, norm = 5.90491880339339e+00, diff = 3.58419316038944e-01
iter = 17, step = 4.87674979115529e-01, func = 1.40274309073920e+04, norm = 4.18109757758273e+00, diff = 3.16054522658950e-01
iter = 18, step = 4.63291230159753e-01, func = 1.40276021746693e+04, norm = 3.48148744532116e+00, diff = 3.42853857196038e-01
iter = 19, step = 4.40126668651765e-01, func = 1.40276264629098e+04, norm = 4.17410314365819e+00, diff = 2.89316962124352e-01
iter = 20, step = 4.18120335219177e-01, func = 1.40275325018037e+04, norm = 4.45995214624005e+00, diff = 3.07882093663469e-01
iter = 21, step = 3.97214318458218e-01, func = 1.40276517415884e+04, norm = 3.92276948792971e+00, diff = 2.34976961009150e-01
iter = 22, step = 3.77353602535307e-01, func = 1.40277539246289e+04, norm = 3.51349132350843e+00, diff = 2.59221189655435e-01
iter = 23, step = 3.58485922408542e-01, func = 1.40278048450297e+04, norm = 3.74588735380926e+00, diff = 2.82687770173259e-01
iter = 24, step = 3.40561626288115e-01, func = 1.40276450455079e+04, norm = 4.95652638756487e+00, diff = 2.25619397125662e-01
iter = 25, step = 3.23533544973709e-01, func = 1.40277926813124e+04, norm = 3.78231345045014e+00, diff = 1.98557459996576e-01
iter = 26, step = 3.07356867725023e-01, func = 1.40278503326767e+04, norm = 3.90287660621941e+00, diff = 2.22891482876038e-01
iter = 27, step = 2.91989024338772e-01, func = 1.40279740940109e+04, norm = 3.30797622054792e+00, diff = 2.06171694764495e-01
iter = 28, step = 2.77389573121834e-01, func = 1.40278913189331e+04, norm = 3.70330022073082e+00, diff = 2.07418939516683e-01
iter = 29, step = 2.63520094465742e-01, func = 1.40279186847363e+04, norm = 3.75257002868505e+00, diff = 1.74635401829264e-01
iter = 30, step = 2.50344089742455e-01, func = 1.40280042845758e+04, norm = 3.80843691112010e+00, diff = 1.39854348533849e-01
iter = 31, step = 2.37826885255332e-01, func = 1.40280154071036e+04, norm = 3.42402456320808e+00, diff = 1.65983013278104e-01
iter = 32, step = 2.25935540992565e-01, func = 1.40280691390678e+04, norm = 2.88234519734412e+00, diff = 1.57085349949324e-01
iter = 33, step = 2.14638763942937e-01, func = 1.40279707713629e+04, norm = 3.76147085905834e+00, diff = 1.55461789324834e-01
iter = 34, step = 2.03906825745790e-01, func = 1.40281053509751e+04, norm = 2.95019467431227e+00, diff = 1.25688070849634e-01
iter = 35, step = 1.93711484458501e-01, func = 1.40281525997317e+04, norm = 3.17833718801612e+00, diff = 1.28981713655910e-01
iter = 36, step = 1.84025910235576e-01, func = 1.40280968886656e+04, norm = 2.93582188721411e+00, diff = 1.11128835387939e-01
iter = 37, step = 1.74824614723797e-01, func = 1.40281281626119e+04, norm = 2.72401477019335e+00, diff = 1.14413395714139e-01
iter = 38, step = 1.66083383987607e-01, func = 1.40281839821843e+04, norm = 2.75122115254976e+00, diff = 1.09484759795645e-01
iter = 39, step = 1.57779214788227e-01, func = 1.40281773711069e+04, norm = 2.74880557284263e+00, diff = 1.03848170011172e-01
iter = 40, step = 1.49890254048815e-01, func = 1.40282057790091e+04, norm = 2.92734606217235e+00, diff = 8.88841561387314e-02
iter = 41, step = 1.42395741346375e-01, func = 1.40281738408221e+04, norm = 2.71117307647847e+00, diff = 8.73459733653737e-02
iter = 42, step = 1.35275954279056e-01, func = 1.40282107800868e+04, norm = 2.55061784345370e+00, diff = 8.31600909691081e-02
iter = 43, step = 1.28512156565103e-01, func = 1.40282206004511e+04, norm = 2.71737080672703e+00, diff = 7.44107015896798e-02
iter = 44, step = 1.22086548736848e-01, func = 1.40282588452877e+04, norm = 2.29870912314883e+00, diff = 7.78428615751834e-02
iter = 45, step = 1.15982221300006e-01, func = 1.40282437231690e+04, norm = 3.01935533984503e+00, diff = 7.65160541644506e-02
iter = 46, step = 1.10183110235005e-01, func = 1.40282693122906e+04, norm = 2.37249952325670e+00, diff = 5.94299324917779e-02
iter = 47, step = 1.04673954723255e-01, func = 1.40282427930412e+04, norm = 2.62634962102228e+00, diff = 6.28504534387924e-02
iter = 48, step = 9.94402569870922e-02, func = 1.40282746822026e+04, norm = 2.00656513947033e+00, diff = 6.44958298712225e-02
iter = 49, step = 9.44682441377376e-02, func = 1.40282777643435e+04, norm = 2.16477519803895e+00, diff = 5.98046876898638e-02
iter = 50, step = 8.97448319308507e-02, func = 1.40282677647437e+04, norm = 2.52606824066985e+00, diff = 4.42902998154244e-02
iter = 51, step = 8.52575903343082e-02, func = 1.40282896912438e+04, norm = 2.39592866021247e+00, diff = 5.05264954932401e-02
iter = 52, step = 8.09947108175928e-02, func = 1.40283135378156e+04, norm = 1.73544621253839e+00, diff = 5.47505986961187e-02
iter = 53, step = 7.69449752767131e-02, func = 1.40282847798219e+04, norm = 2.85309625762902e+00, diff = 5.49902664252419e-02
iter = 54, step = 7.30977265128775e-02, func = 1.40283123171746e+04, norm = 2.32909056930222e+00, diff = 3.93551476986976e-02
iter = 55, step = 6.94428401872336e-02, func = 1.40283092485862e+04, norm = 2.68984194819399e+00, diff = 4.10819185227540e-02
iter = 56, step = 6.59706981778719e-02, func = 1.40283170701776e+04, norm = 2.41422768763497e+00, diff = 4.00368427412538e-02
iter = 57, step = 6.26721632689783e-02, func = 1.40282971558356e+04, norm = 2.41615345253347e+00, diff = 4.04743214820521e-02
iter = 58, step = 6.26721632689783e-02, func = 1.40283054068773e+04, norm = 1.90165756876310e+00, diff = 7.54386843495543e-02
iter = 59, step = 5.95385551055294e-02, func = 1.40283156115764e+04, norm = 1.76057859895484e+00, diff = 3.38566995091156e-02
iter = 60, step = 5.65616273502529e-02, func = 1.40283235678217e+04, norm = 1.51601564009195e+00, diff = 3.01131343419110e-02
iter = 61, step = 5.37335459827403e-02, func = 1.40283188941369e+04, norm = 1.98485439132373e+00, diff = 2.91875793983194e-02
iter = 62, step = 5.10468686836033e-02, func = 1.40283473284827e+04, norm = 1.48428646595676e+00, diff = 2.65886417833967e-02
iter = 63, step = 4.84945252494231e-02, func = 1.40283458803645e+04, norm = 1.65796086892047e+00, diff = 2.64688846063482e-02
iter = 64, step = 4.60697989869519e-02, func = 1.40283478934055e+04, norm = 1.58978518067027e+00, diff = 2.60286154852028e-02
iter = 65, step = 4.37663090376043e-02, func = 1.40283522131272e+04, norm = 1.54814566193952e+00, diff = 2.35964351326038e-02
iter = 66, step = 4.15779935857241e-02, func = 1.40283548118517e+04, norm = 1.45088685587451e+00, diff = 2.07719175791282e-02
iter = 67, step = 3.94990939064379e-02, func = 1.40283506462338e+04, norm = 1.68136258041905e+00, diff = 2.07265728539012e-02
iter = 68, step = 3.75241392111160e-02, func = 1.40283457022865e+04, norm = 1.97078810156705e+00, diff = 2.10003676357607e-02
iter = 69, step = 3.75241392111160e-02, func = 1.40283507764018e+04, norm = 1.44465889704807e+00, diff = 3.67988303675809e-02
iter = 70, step = 3.56479322505602e-02, func = 1.40283527761105e+04, norm = 1.84613167620494e+00, diff = 1.83789683673844e-02
iter = 71, step = 3.38655356380322e-02, func = 1.40283554468540e+04, norm = 1.29174137131435e+00, diff = 1.53245032965775e-02
iter = 72, step = 3.21722588561306e-02, func = 1.40283616426002e+04, norm = 1.52621422791401e+00, diff = 1.77155578216858e-02
iter = 73, step = 3.05636459133241e-02, func = 1.40283685504053e+04, norm = 1.22525982087623e+00, diff = 1.34403328138512e-02
iter = 74, step = 2.90354636176579e-02, func = 1.40283714323263e+04, norm = 1.06255429164790e+00, diff = 1.47278317510142e-02
iter = 75, step = 2.75836904367750e-02, func = 1.40283647341313e+04, norm = 1.30421444368142e+00, diff = 1.70302565316152e-02
iter = 76, step = 2.62045059149362e-02, func = 1.40283720239354e+04, norm = 1.47584283779413e+00, diff = 1.19945005538802e-02
iter = 77, step = 2.48942806191894e-02, func = 1.40283634163203e+04, norm = 1.71898766046598e+00, diff = 1.40264214664156e-02
iter = 78, step = 2.48942806191894e-02, func = 1.40283636143756e+04, norm = 1.54760340695682e+00, diff = 2.12861158512905e-02
iter = 79, step = 2.36495665882299e-02, func = 1.40283722829875e+04, norm = 1.07150930353240e+00, diff = 1.08927566736448e-02
iter = 80, step = 2.24670882588184e-02, func = 1.40283735246791e+04, norm = 1.02000735294716e+00, diff = 1.02622543638312e-02
iter = 81, step = 2.13437338458775e-02, func = 1.40283758617160e+04, norm = 8.88344777600987e-01, diff = 1.02852984359176e-02
iter = 82, step = 2.02765471535836e-02, func = 1.40283767765754e+04, norm = 1.40480601457360e+00, diff = 9.52209313440304e-03
iter = 83, step = 1.92627197959044e-02, func = 1.40283784904172e+04, norm = 1.14435011522085e+00, diff = 8.33791346820208e-03
iter = 84, step = 1.82995838061092e-02, func = 1.40283779879924e+04, norm = 1.33860636156935e+00, diff = 8.67769533493924e-03
iter = 85, step = 1.73846046158038e-02, func = 1.40283779651603e+04, norm = 1.29652466021005e+00, diff = 9.86506678352962e-03
iter = 86, step = 1.65153743850136e-02, func = 1.40283774692769e+04, norm = 1.16750906642777e+00, diff = 9.40642712856700e-03
iter = 87, step = 1.65153743850136e-02, func = 1.40283770146456e+04, norm = 1.29223221245016e+00, diff = 1.50480612404084e-02
iter = 88, step = 1.56896056657629e-02, func = 1.40283791979563e+04, norm = 9.58329556755997e-01, diff = 7.14392487451260e-03
iter = 89, step = 1.49051253824747e-02, func = 1.40283802906236e+04, norm = 9.71577534146718e-01, diff = 7.83084793758925e-03
iter = 90, step = 1.49051253824747e-02, func = 1.40283807935946e+04, norm = 9.05839958861758e-01, diff = 1.20283516041977e-02
iter = 91, step = 1.41598691133510e-02, func = 1.40283823821232e+04, norm = 1.00077287137751e+00, diff = 7.02538955055566e-03
iter = 92, step = 1.34518756576835e-02, func = 1.40283830210796e+04, norm = 1.04110180959022e+00, diff = 5.56757484879603e-03
iter = 93, step = 1.27792818747993e-02, func = 1.40283840364104e+04, norm = 1.06869225299530e+00, diff = 6.32685208839557e-03
iter = 94, step = 1.21403177810593e-02, func = 1.40283847552510e+04, norm = 9.31048852763285e-01, diff = 4.39082175878617e-03
iter = 95, step = 1.15333018920064e-02, func = 1.40283856687726e+04, norm = 8.06679495393803e-01, diff = 5.20238545831570e-03
iter = 96, step = 1.09566367974060e-02, func = 1.40283849899779e+04, norm = 9.22695327306818e-01, diff = 5.64345206770128e-03
iter = 97, step = 1.04088049575357e-02, func = 1.40283871562179e+04, norm = 8.73699543677054e-01, diff = 4.58844733724046e-03
iter = 98, step = 9.88836470965895e-03, func = 1.40283868335192e+04, norm = 1.00948890098791e+00, diff = 4.23336975670722e-03
iter = 99, step = 9.39394647417600e-03, func = 1.40283872257062e+04, norm = 9.15413273467297e-01, diff = 5.10547694942055e-03
iter = 100, step = 8.92424915046720e-03, func = 1.40283878504115e+04, norm = 8.93640824534371e-01, diff = 4.77188724682195e-03
iter = 101, step = 8.47803669294384e-03, func = 1.40283878164741e+04, norm = 6.45404066118028e-01, diff = 5.18758115409642e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.402840e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 7, while k = 7 and n = 67
  UB from restricted IP = 117797 using centers : 4 51 11 15 24 35 17 
  UB from restricted IP = 19022.9 using centers : 45 47 29 3 49 18 65 
  UB from restricted IP = 16208.1 using centers : 45 11 1 3 49 58 65 
In iteration 0 of HessHeuristic, objective value of incumbent is = 16208.1
  UB from restricted IP = 68120.9 using centers : 26 28 38 29 50 45 63 
  UB from restricted IP = 22522.9 using centers : 51 55 49 64 15 45 65 
  UB from restricted IP = 16626 using centers : 47 1 49 64 3 45 65 
  UB from restricted IP = 16208.1 using centers : 11 1 49 58 3 45 65 
In iteration 1 of HessHeuristic, objective value of incumbent is = 16208.1
  UB from restricted IP = 82612.1 using centers : 0 10 46 6 54 43 56 
  UB from restricted IP = 20427.8 using centers : 35 58 39 24 45 3 53 
  UB from restricted IP = 19650 using centers : 35 58 39 6 45 3 53 
In iteration 2 of HessHeuristic, objective value of incumbent is = 16208.1
  UB from restricted IP = 111158 using centers : 34 3 33 11 50 7 30 
  UB from restricted IP = 19505 using centers : 20 3 38 14 22 48 45 
  UB from restricted IP = 17132 using centers : 11 3 60 14 18 48 45 
  UB from restricted IP = 17027.8 using centers : 11 3 24 14 18 48 45 
In iteration 3 of HessHeuristic, objective value of incumbent is = 16208.1
  UB from restricted IP = 107078 using centers : 63 34 31 27 19 10 62 
  UB from restricted IP = 25890 using centers : 17 51 52 45 14 64 49 
  UB from restricted IP = 17535.2 using centers : 3 11 52 45 14 58 49 
In iteration 4 of HessHeuristic, objective value of incumbent is = 16208.1
  UB from restricted IP = 83600.3 using centers : 1 26 40 63 8 10 9 
  UB from restricted IP = 21897.9 using centers : 14 51 45 15 48 64 60 
  UB from restricted IP = 17036.8 using centers : 14 11 45 3 48 64 60 
In iteration 5 of HessHeuristic, objective value of incumbent is = 16208.1
  UB from restricted IP = 70239 using centers : 34 55 64 60 50 16 61 
  UB from restricted IP = 21483 using centers : 51 45 64 60 15 14 49 
  UB from restricted IP = 16637.2 using centers : 11 45 64 60 3 14 49 
In iteration 6 of HessHeuristic, objective value of incumbent is = 16208.1
  UB from restricted IP = 59751.1 using centers : 25 33 31 36 32 38 11 
  UB from restricted IP = 16425.8 using centers : 1 53 48 42 6 45 11 
  UB from restricted IP = 15519.5 using centers : 29 53 58 3 6 45 11 
In iteration 7 of HessHeuristic, objective value of incumbent is = 15519.5
  UB from restricted IP = 64428.6 using centers : 62 24 54 30 2 19 55 
  UB from restricted IP = 22794.7 using centers : 48 6 15 45 51 52 14 
  UB from restricted IP = 16899.8 using centers : 58 6 3 45 11 52 1 
  UB from restricted IP = 15816.4 using centers : 58 6 3 45 11 53 1 
  UB from restricted IP = 15519.5 using centers : 58 6 3 45 11 53 29 
In iteration 8 of HessHeuristic, objective value of incumbent is = 15519.5
  UB from restricted IP = 54383.9 using centers : 20 50 10 19 66 49 1 
  UB from restricted IP = 15519.5 using centers : 11 3 58 53 45 6 29 
In iteration 9 of HessHeuristic, objective value of incumbent is = 15519.5
UB at end of HessHeuristic = 15519.5
UB of heuristicSolution = 15519.5
Best solution after 10 of HessHeuristic is 15519.54

Beginning LOCAL SEARCH with UB = 15519.5

Academic license - for non-commercial use only
# centers = 7, while k = 7 and n = 67
  checking neighbors of node 3
  checking neighbors of node 6
  checking neighbors of node 11
  checking neighbors of node 29
  checking neighbors of node 45
  checking neighbors of node 53
  checking neighbors of node 58
UB at end of local search heuristic = 15519.5
UB of heuristicSolution = 15519.5
Best solution after local search is 15519.54
Academic license - for non-commercial use only
# centers = 7, while k = 7 and n = 67
Optimize a model with 1005 rows, 2863 columns and 9396 nonzeros
Variable types: 2394 continuous, 469 integer (469 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [2e+01, 8e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

MIP start did not produce a new incumbent solution

Presolve removed 210 rows and 892 columns
Presolve time: 0.01s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
UB at end of ContiguityHeuristic = 1e+20
UB of (contiguous) heuristicSolution = 15519.5

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 4489
Number of centers left            = 67
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 4489 variables
Optimize a model with 4691 rows, 4556 columns and 18224 nonzeros
Variable types: 67 continuous, 4489 integer (4489 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [9e+00, 1e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+00]

MIP start did not produce a new incumbent solution

Presolve removed 169 rows and 77 columns
Presolve time: 0.05s
Presolved: 4522 rows, 4479 columns, 18804 nonzeros
Variable types: 0 continuous, 4479 integer (4412 binary)

Concurrent LP optimizer: dual simplex and barrier
Showing barrier log only...

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 1.651e+05
 Factor NZ  : 4.450e+05 (roughly 7 MBytes of memory)
 Factor Ops : 4.581e+07 (less than 1 second per iteration)
 Threads    : 3

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   2.62152214e+07 -6.97560831e+05  4.37e+04 0.00e+00  7.91e+03     0s
   1   1.65808148e+06 -2.05941540e+06  2.59e+03 3.96e-13  6.14e+02     0s
   2   3.50910050e+05 -8.13846462e+05  3.98e+02 2.98e-13  1.18e+02     0s
   3   9.92510907e+04 -1.50362385e+05  3.29e+01 9.24e-14  1.94e+01     0s
   4   5.10813607e+04 -3.23827125e+04  4.44e+00 2.84e-14  6.26e+00     0s
   5   3.25191196e+04 -4.04465070e+03  1.44e+00 2.84e-14  2.74e+00     0s
   6   2.40497747e+04  6.43469852e+03  5.77e-01 2.84e-14  1.32e+00     0s
   7   2.03467076e+04  9.74127230e+03  3.05e-01 2.84e-14  7.93e-01     0s
   8   1.86636523e+04  1.18090634e+04  1.99e-01 2.84e-14  5.12e-01     0s
   9   1.77127976e+04  1.23522140e+04  1.49e-01 2.84e-14  4.01e-01     0s

Barrier performed 9 iterations in 0.15 seconds
Barrier solve interrupted - model solved by another algorithm


Solved with dual simplex

Root relaxation: objective 1.415459e+04, 1292 iterations, 0.07 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 14154.5876    0  131          - 14154.5876      -     -    0s
Another try with MIP start
     0     0 14663.7497    0  167          - 14663.7497      -     -    0s
     0     0 14872.9879    0  251          - 14872.9879      -     -    0s
     0     0 14892.3087    0  285          - 14892.3087      -     -    0s
     0     0 14996.1983    0  289          - 14996.1983      -     -    0s
     0     0 15001.7474    0  285          - 15001.7474      -     -    0s
     0     0 15002.5459    0  287          - 15002.5459      -     -    0s
     0     0 15041.8724    0  305          - 15041.8724      -     -    0s
     0     0 15052.8921    0  315          - 15052.8921      -     -    0s
     0     0 15053.1094    0  316          - 15053.1094      -     -    0s
     0     0 15086.0399    0  283          - 15086.0399      -     -    0s
     0     0 15097.6930    0  258          - 15097.6930      -     -    0s
     0     0 15099.0890    0  257          - 15099.0890      -     -    0s
     0     0 15099.2896    0  258          - 15099.2896      -     -    0s
     0     0 15115.5813    0  255          - 15115.5813      -     -    0s
     0     0 15115.7144    0  257          - 15115.7144      -     -    0s
     0     0 15116.1169    0  273          - 15116.1169      -     -    0s
     0     0 15117.3577    0  275          - 15117.3577      -     -    0s
     0     0 15117.9144    0  277          - 15117.9144      -     -    0s
     0     0 15118.5039    0  299          - 15118.5039      -     -    0s
     0     0 15118.5039    0  299          - 15118.5039      -     -    0s
     0     2 15127.9944    0  266          - 15127.9944      -     -    1s
  1057   985 16347.7791   48  234          - 15375.2109      -  46.1    5s
  1123  1031 15963.3871   20  139          - 15375.2109      -  54.8   10s
H 2429   800                    17972.854564 15436.2154  14.1%  61.5   12s
H 2573   771                    17901.772509 15552.4394  13.1%  62.1   13s
H 2626   630                    17166.625679 15607.7823  9.08%  62.4   13s
H 2706   530                    16825.973140 15650.1436  6.99%  62.6   14s
H 2816   448                    16627.248489 15669.7226  5.76%  62.7   14s
  2950   400 15957.2280   24   20 16627.2485 15764.3072  5.19%  62.8   15s

Cutting planes:
  Cover: 65
  MIR: 14
  StrongCG: 1
  Flow cover: 4
  GUB cover: 10
  Inf proof: 4
  Zero half: 3
  Lazy constraints: 326

Explored 5284 nodes (281232 simplex iterations) in 19.02 seconds
Thread count was 8 (of 8 available processors)

Solution count 5: 16627.2 16826 17166.6 ... 17972.9

Optimal solution found (tolerance 0.00e+00)
Best objective 1.662724848900e+04, best bound 1.662724848900e+04, gap 0.0000%
IP duration time: 19.019588 seconds
Total time elapsed: 20.939059 seconds
Number of callbacks: 39
Time in callbacks: 0.005465 seconds
Number of lazy constraints generated: 431
+ for state in $states
+ echo 'Running AR'
Running AR
+ /home/lykhovyd/progs/districting/districting myconfig.txt AR /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/AR.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/AR/counties/graph/AR.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/AR/counties/graph/AR_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/AR/counties/graph/AR.population
state[2]        = AR
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/AR.ralg_hot
nr_comp = 1
graph: 75 nodes, 192 edges (read)
Model input: L = 725335, U = 732624, k = 4.
Graph is connected.
Model input: total population = 2915918
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.60006908718906e+04, norm = 1.15393456353598e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 1.60000971475014e+04, norm = 9.85952990767068e+00, diff = 1.56345818627601e+00
iter = 3, step = 9.02500000000000e-01, func = 1.60005418490001e+04, norm = 8.43839804490517e+00, diff = 6.28053502113933e-01
iter = 4, step = 8.57375000000000e-01, func = 1.60023773225883e+04, norm = 4.86860851171813e+00, diff = 6.52241774289818e-01
iter = 5, step = 8.14506250000000e-01, func = 1.60028579065429e+04, norm = 4.05171935267897e+00, diff = 7.17580990963243e-01
iter = 6, step = 7.73780937500000e-01, func = 1.60025558303254e+04, norm = 4.41217547637039e+00, diff = 6.52776582075531e-01
iter = 7, step = 7.35091890625000e-01, func = 1.60028114487922e+04, norm = 4.63083877090605e+00, diff = 4.55649294279302e-01
iter = 8, step = 7.35091890625000e-01, func = 1.60027944784936e+04, norm = 4.12765179948307e+00, diff = 1.02222115612862e+00
iter = 9, step = 6.98337296093750e-01, func = 1.60030796907779e+04, norm = 3.76891469234875e+00, diff = 4.99617763550841e-01
iter = 10, step = 6.63420431289062e-01, func = 1.60032736104495e+04, norm = 3.28737252234831e+00, diff = 4.59988502173905e-01
iter = 11, step = 6.30249409724609e-01, func = 1.60034148132795e+04, norm = 2.65547281607917e+00, diff = 5.04658980089291e-01
iter = 12, step = 5.98736939238379e-01, func = 1.60032703008363e+04, norm = 3.14034340276510e+00, diff = 4.48292384562620e-01
iter = 13, step = 5.68800092276460e-01, func = 1.60033711160226e+04, norm = 2.70823410385420e+00, diff = 3.63480727796435e-01
iter = 14, step = 5.40360087662637e-01, func = 1.60034700587545e+04, norm = 2.18460343294913e+00, diff = 4.10908819921641e-01
iter = 15, step = 5.13342083279505e-01, func = 1.60036354136503e+04, norm = 2.17788835023947e+00, diff = 3.92631560042215e-01
iter = 16, step = 4.87674979115529e-01, func = 1.60035082579554e+04, norm = 1.97356568408087e+00, diff = 3.51104683715585e-01
iter = 17, step = 4.63291230159753e-01, func = 1.60036310106122e+04, norm = 1.51882405373821e+00, diff = 2.83750813467898e-01
iter = 18, step = 4.40126668651765e-01, func = 1.60035980516441e+04, norm = 1.78230281099378e+00, diff = 2.80178857493524e-01
iter = 19, step = 4.18120335219177e-01, func = 1.60037192093988e+04, norm = 1.65016847039012e+00, diff = 2.49837587976164e-01
iter = 20, step = 3.97214318458218e-01, func = 1.60037878282925e+04, norm = 1.18848676404320e+00, diff = 2.40054611949048e-01
iter = 21, step = 3.77353602535307e-01, func = 1.60036354815087e+04, norm = 1.22207003238770e+00, diff = 2.73439639421957e-01
iter = 22, step = 3.58485922408542e-01, func = 1.60037351272187e+04, norm = 1.21998244971271e+00, diff = 1.90564443919710e-01
iter = 23, step = 3.40561626288115e-01, func = 1.60037256212681e+04, norm = 1.63937424655101e+00, diff = 1.57764293762569e-01
iter = 24, step = 3.23533544973709e-01, func = 1.60037840784584e+04, norm = 1.15057687068665e+00, diff = 1.88045152619765e-01
iter = 25, step = 3.07356867725023e-01, func = 1.60037491638654e+04, norm = 9.66667261741076e-01, diff = 1.49655161764786e-01
iter = 26, step = 2.91989024338772e-01, func = 1.60037797562163e+04, norm = 9.85402383156982e-01, diff = 1.29078127534879e-01
iter = 27, step = 2.91989024338772e-01, func = 1.60037686230933e+04, norm = 1.03678778014293e+00, diff = 3.10792810940891e-01
iter = 28, step = 2.77389573121834e-01, func = 1.60037882888766e+04, norm = 1.25665869007730e+00, diff = 1.91676078676974e-01
iter = 29, step = 2.63520094465742e-01, func = 1.60037960245130e+04, norm = 8.69789513407344e-01, diff = 1.64222972963084e-01
iter = 30, step = 2.50344089742455e-01, func = 1.60037361437443e+04, norm = 1.54235532622993e+00, diff = 1.57912649252427e-01
iter = 31, step = 3.00412907690946e-01, func = 1.60038095643105e+04, norm = 1.19318337615124e+00, diff = 2.81476317006133e-01
iter = 32, step = 2.85392262306399e-01, func = 1.60037986399314e+04, norm = 6.85449865600550e-01, diff = 1.65436883353954e-01
iter = 33, step = 2.85392262306399e-01, func = 1.60037951057127e+04, norm = 7.16515976720695e-01, diff = 2.99912193829446e-01
iter = 34, step = 2.71122649191079e-01, func = 1.60038166774904e+04, norm = 8.21453799115377e-01, diff = 9.32488389987114e-02
iter = 35, step = 2.57566516731525e-01, func = 1.60037013106612e+04, norm = 1.01874926379048e+00, diff = 1.75982702459909e-01
iter = 36, step = 3.09079820077830e-01, func = 1.60037992027249e+04, norm = 1.27928634144787e+00, diff = 2.91277957888486e-01
iter = 37, step = 2.93625829073938e-01, func = 1.60037893622565e+04, norm = 1.91938309070533e+00, diff = 1.63109356858389e-01
iter = 38, step = 2.78944537620241e-01, func = 1.60037278477888e+04, norm = 1.99019075086225e+00, diff = 1.55900438744626e-01
iter = 39, step = 2.64997310739229e-01, func = 1.60037672835460e+04, norm = 1.47945305789176e+00, diff = 1.86411957454754e-01
iter = 40, step = 2.64997310739229e-01, func = 1.60038244877051e+04, norm = 6.32947058836124e-01, diff = 3.66091059185990e-01
iter = 41, step = 2.64997310739229e-01, func = 1.60038301315219e+04, norm = 7.81591026542508e-01, diff = 4.99186353148352e-01
iter = 42, step = 2.64997310739229e-01, func = 1.60038423007616e+04, norm = 5.92741906346282e-01, diff = 1.95685648781529e-01
iter = 43, step = 2.51747445202268e-01, func = 1.60038281915143e+04, norm = 1.09261063908062e+00, diff = 1.31172962597577e-01
iter = 44, step = 2.39160072942154e-01, func = 1.60038468439954e+04, norm = 5.95182133151280e-01, diff = 9.92721749843401e-02
iter = 45, step = 2.27202069295047e-01, func = 1.60038461492596e+04, norm = 6.13682841088977e-01, diff = 1.03172361925649e-01
iter = 46, step = 2.15841965830294e-01, func = 1.60038552938228e+04, norm = 1.31363351411866e+00, diff = 8.69359089182750e-02
iter = 47, step = 2.05049867538779e-01, func = 1.60037819106526e+04, norm = 1.36727509421063e+00, diff = 9.13221102032290e-02
iter = 48, step = 1.94797374161841e-01, func = 1.60038571918323e+04, norm = 6.00799295852028e-01, diff = 9.07022960829247e-02
iter = 49, step = 1.94797374161841e-01, func = 1.60038239038208e+04, norm = 6.34401940997162e-01, diff = 1.49671336478270e-01
iter = 50, step = 1.94797374161841e-01, func = 1.60038300500641e+04, norm = 6.78183211623395e-01, diff = 1.29571922684249e-01
iter = 51, step = 1.85057505453748e-01, func = 1.60038603245994e+04, norm = 6.58846001780180e-01, diff = 9.61033124616854e-02
iter = 52, step = 1.75804630181061e-01, func = 1.60038595045744e+04, norm = 2.95930257495273e-01, diff = 8.98550392815752e-02
iter = 53, step = 1.67014398672008e-01, func = 1.60038579395038e+04, norm = 2.62849021466019e-01, diff = 1.49385148228694e-01
iter = 54, step = 1.58663678738408e-01, func = 1.60038665073588e+04, norm = 2.58169306546460e-01, diff = 6.18608553112980e-02
iter = 55, step = 1.50730494801487e-01, func = 1.60038617401362e+04, norm = 4.01302684267589e-01, diff = 6.43713204903795e-02
iter = 56, step = 1.43193970061413e-01, func = 1.60038676203747e+04, norm = 2.15737462208843e-01, diff = 4.40094530867224e-02
iter = 57, step = 1.36034271558342e-01, func = 1.60038717583092e+04, norm = 3.31123237038628e-01, diff = 1.20198258736368e-01
iter = 58, step = 1.29232557980425e-01, func = 1.60038749519292e+04, norm = 1.84588348308472e-01, diff = 4.96768615073391e-02
iter = 59, step = 1.29232557980425e-01, func = 1.60038779974200e+04, norm = 8.40697336148995e-01, diff = 2.09829762469531e-01
iter = 60, step = 1.22770930081404e-01, func = 1.60038535970164e+04, norm = 9.55569710868127e-01, diff = 6.49581348420678e-02
iter = 61, step = 1.16632383577334e-01, func = 1.60038755075276e+04, norm = 6.88573978729659e-01, diff = 4.11317404509301e-02
iter = 62, step = 1.10800764398467e-01, func = 1.60038804489906e+04, norm = 3.86805244722640e-01, diff = 4.84796151774586e-02
iter = 63, step = 1.10800764398467e-01, func = 1.60038743737242e+04, norm = 3.09919190831451e-01, diff = 1.71143878239683e-01
iter = 64, step = 1.32960917278160e-01, func = 1.60038784490030e+04, norm = 5.43444984151434e-01, diff = 9.84526885228328e-02
iter = 65, step = 1.26312871414252e-01, func = 1.60038838325621e+04, norm = 2.92975869462423e-01, diff = 3.24413174476206e-02
iter = 66, step = 1.19997227843540e-01, func = 1.60038714955429e+04, norm = 3.07953083553185e-01, diff = 1.04721958195990e-01
iter = 67, step = 1.19997227843540e-01, func = 1.60038846333831e+04, norm = 2.07411473569813e-01, diff = 1.01205127460971e-01
iter = 68, step = 1.13997366451363e-01, func = 1.60038836488797e+04, norm = 1.07232216339708e-01, diff = 7.87635908492891e-02
iter = 69, step = 1.13997366451363e-01, func = 1.60038833890935e+04, norm = 7.93133976858869e-01, diff = 1.47873100588285e-01
iter = 70, step = 1.08297498128795e-01, func = 1.60038676806866e+04, norm = 8.02961587415378e-01, diff = 5.32276446111651e-02
iter = 71, step = 1.02882623222355e-01, func = 1.60038904707104e+04, norm = 3.45066223519710e-01, diff = 4.78495847307986e-02
iter = 72, step = 9.77384920612371e-02, func = 1.60038896645032e+04, norm = 1.36431223547066e-01, diff = 5.98521318187996e-02
iter = 73, step = 9.77384920612371e-02, func = 1.60038921512672e+04, norm = 9.97722058442124e-02, diff = 1.22235211219546e-01
iter = 74, step = 9.28515674581752e-02, func = 1.60038945785057e+04, norm = 2.73092382022827e-01, diff = 4.71873847751976e-02
iter = 75, step = 8.82089890852664e-02, func = 1.60038973301615e+04, norm = 1.45694962840647e-01, diff = 2.08042079962882e-02
iter = 76, step = 8.37985396310031e-02, func = 1.60038951840197e+04, norm = 2.51200067979312e-01, diff = 5.86087497114157e-02
iter = 77, step = 7.96086126494529e-02, func = 1.60038973880837e+04, norm = 7.58645259372765e-01, diff = 1.81005625927560e-02
iter = 78, step = 7.56281820169803e-02, func = 1.60038735664175e+04, norm = 8.49593142732105e-01, diff = 3.99474969956782e-02
iter = 79, step = 7.56281820169803e-02, func = 1.60038985198433e+04, norm = 3.28502841328920e-01, diff = 4.66550515953187e-02
iter = 80, step = 7.18467729161313e-02, func = 1.60038942210754e+04, norm = 3.89333424495885e-01, diff = 4.71397573877112e-02
iter = 81, step = 6.82544342703247e-02, func = 1.60038971985930e+04, norm = 5.71988478595313e-01, diff = 1.60792101342683e-02
iter = 82, step = 6.48417125568085e-02, func = 1.60038993507758e+04, norm = 3.08375817080188e-01, diff = 2.89271938059390e-02
iter = 83, step = 6.15996269289680e-02, func = 1.60039000408986e+04, norm = 9.17406127717414e-02, diff = 3.80242933800967e-02
iter = 84, step = 5.85196455825196e-02, func = 1.60039002101379e+04, norm = 5.61360011856911e-02, diff = 2.46233987441732e-02
iter = 85, step = 5.55936633033937e-02, func = 1.60038998210971e+04, norm = 5.01595912951863e-02, diff = 3.31011867516957e-02
iter = 86, step = 5.28139801382240e-02, func = 1.60038992816236e+04, norm = 3.76820684563616e-01, diff = 2.94183540712132e-02
iter = 87, step = 5.28139801382240e-02, func = 1.60039007825261e+04, norm = 3.48388142996025e-01, diff = 2.24038823237961e-02
iter = 88, step = 5.01732811313128e-02, func = 1.60039008611113e+04, norm = 1.60872720053981e-01, diff = 1.28412389364306e-02
iter = 89, step = 4.76646170747471e-02, func = 1.60039016479852e+04, norm = 4.32461810326306e-02, diff = 3.06983547791805e-02
iter = 90, step = 4.52813862210098e-02, func = 1.60039016974420e+04, norm = 9.06649026156544e-02, diff = 1.94880644084241e-02
iter = 91, step = 4.52813862210098e-02, func = 1.60039019949512e+04, norm = 8.03327436216755e-02, diff = 2.82851262468999e-02
iter = 92, step = 4.30173169099593e-02, func = 1.60039017602685e+04, norm = 6.82562126015345e-02, diff = 1.58729895195692e-02
iter = 93, step = 4.30173169099593e-02, func = 1.60039010152241e+04, norm = 4.55451185161534e-01, diff = 3.44599312421664e-02
iter = 94, step = 5.16207802919511e-02, func = 1.60038961543548e+04, norm = 4.31849108773440e-01, diff = 3.70636770976836e-02
iter = 95, step = 5.16207802919511e-02, func = 1.60039021077668e+04, norm = 2.46565810278785e-01, diff = 2.12797359313203e-02
iter = 96, step = 4.90397412773536e-02, func = 1.60039024317786e+04, norm = 1.38945156852581e-01, diff = 1.15994198706516e-02
iter = 97, step = 4.90397412773536e-02, func = 1.60039026671078e+04, norm = 4.55074914314766e-02, diff = 3.30560459001540e-02
iter = 98, step = 4.65877542134859e-02, func = 1.60039031410532e+04, norm = 5.30031811106021e-02, diff = 1.82893399574459e-02
iter = 99, step = 4.42583665028116e-02, func = 1.60039032495888e+04, norm = 3.81841277270173e-02, diff = 1.57020944126374e-02
iter = 100, step = 4.42583665028116e-02, func = 1.60039037020153e+04, norm = 4.25338133653075e-02, diff = 4.53631147052298e-02
iter = 101, step = 4.42583665028116e-02, func = 1.60039046423027e+04, norm = 1.25132953388182e-01, diff = 3.03601525203746e-02
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.600391e+04
Time stats : init 0.0, compute 1.0, total 1.0
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 75
  UB from restricted IP = 101168 using centers : 4 51 11 69 
  UB from restricted IP = 18329.5 using centers : 2 43 71 35 
  UB from restricted IP = 18117.8 using centers : 2 43 25 35 
In iteration 0 of HessHeuristic, objective value of incumbent is = 18117.8
  UB from restricted IP = 41752 using centers : 71 4 56 7 
  UB from restricted IP = 17984.6 using centers : 19 39 35 43 
  UB from restricted IP = 16555.6 using centers : 53 39 14 43 
  UB from restricted IP = 16543.2 using centers : 2 39 14 43 
In iteration 1 of HessHeuristic, objective value of incumbent is = 16543.2
  UB from restricted IP = 34512.4 using centers : 22 37 35 41 
  UB from restricted IP = 19214.6 using centers : 71 2 35 45 
  UB from restricted IP = 18329.5 using centers : 71 2 35 43 
  UB from restricted IP = 18117.8 using centers : 25 2 35 43 
In iteration 2 of HessHeuristic, objective value of incumbent is = 16543.2
  UB from restricted IP = 35968.4 using centers : 32 22 0 37 
  UB from restricted IP = 18197.4 using centers : 35 71 43 54 
In iteration 3 of HessHeuristic, objective value of incumbent is = 16543.2
  UB from restricted IP = 41522.4 using centers : 3 73 42 54 
  UB from restricted IP = 30112 using centers : 71 0 8 23 
  UB from restricted IP = 18364.3 using centers : 25 43 35 23 
  UB from restricted IP = 18117.8 using centers : 25 43 35 2 
In iteration 4 of HessHeuristic, objective value of incumbent is = 16543.2
  UB from restricted IP = 48712.8 using centers : 63 40 71 23 
  UB from restricted IP = 20065.2 using centers : 32 39 53 43 
  UB from restricted IP = 16555.6 using centers : 14 39 53 43 
  UB from restricted IP = 16543.2 using centers : 14 39 2 43 
In iteration 5 of HessHeuristic, objective value of incumbent is = 16543.2
  UB from restricted IP = 39285.9 using centers : 0 63 35 51 
  UB from restricted IP = 17745.4 using centers : 53 46 14 69 
  UB from restricted IP = 16555.6 using centers : 53 39 14 43 
  UB from restricted IP = 16543.2 using centers : 2 39 14 43 
In iteration 6 of HessHeuristic, objective value of incumbent is = 16543.2
  UB from restricted IP = 69151.3 using centers : 63 50 46 19 
  UB from restricted IP = 17096.8 using centers : 14 39 2 68 
  UB from restricted IP = 16543.2 using centers : 14 39 2 43 
In iteration 7 of HessHeuristic, objective value of incumbent is = 16543.2
  UB from restricted IP = 66028.4 using centers : 66 70 19 4 
  UB from restricted IP = 17512.8 using centers : 68 23 14 74 
  UB from restricted IP = 16653.3 using centers : 43 2 14 74 
  UB from restricted IP = 16525.1 using centers : 43 2 14 46 
In iteration 8 of HessHeuristic, objective value of incumbent is = 16525.1
  UB from restricted IP = 175150 using centers : 64 51 33 16 
  UB from restricted IP = 34790.4 using centers : 67 54 53 8 
  UB from restricted IP = 30434.2 using centers : 47 54 53 42 
  UB from restricted IP = 29979.3 using centers : 14 54 53 42 
In iteration 9 of HessHeuristic, objective value of incumbent is = 16525.1
UB at end of HessHeuristic = 16525.1
UB of heuristicSolution = 16525.1
Best solution after 10 of HessHeuristic is 16525.07

Beginning LOCAL SEARCH with UB = 16525.1

Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 75
  checking neighbors of node 2
  checking neighbors of node 14
  checking neighbors of node 43
  checking neighbors of node 46
UB at end of local search heuristic = 16525.1
UB of heuristicSolution = 16525.1
Best solution after local search is 16525.07
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 75
Optimize a model with 675 rows, 1836 columns and 6034 nonzeros
Variable types: 1536 continuous, 300 integer (300 binary)
Coefficient statistics:
  Matrix range     [1e+00, 4e+05]
  Objective range  [2e+01, 2e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

MIP start did not produce a new incumbent solution

Presolve removed 28 rows and 170 columns
Presolve time: 0.00s
Presolved: 647 rows, 1666 columns, 5544 nonzeros
Variable types: 1382 continuous, 284 integer (284 binary)

Root relaxation: objective 1.607173e+04, 123 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 16071.7296    0    6          - 16071.7296      -     -    0s
Another try with MIP start
     0     0 16310.8678    0   13          - 16310.8678      -     -    0s
H    0     0                    17045.946088 16310.8678  4.31%     -    0s
     0     0 16347.1909    0   10 17045.9461 16347.1909  4.10%     -    0s
     0     0 16349.3206    0   15 17045.9461 16349.3206  4.09%     -    0s
     0     0 16407.7017    0   20 17045.9461 16407.7017  3.74%     -    0s
     0     0 16407.7017    0    4 17045.9461 16407.7017  3.74%     -    0s
     0     0 16407.7017    0   14 17045.9461 16407.7017  3.74%     -    0s
     0     0 16407.7017    0   15 17045.9461 16407.7017  3.74%     -    0s
     0     0 16422.2754    0   15 17045.9461 16422.2754  3.66%     -    0s
     0     0 16422.4866    0   13 17045.9461 16422.4866  3.66%     -    0s
     0     0 16446.0789    0   20 17045.9461 16446.0789  3.52%     -    0s
     0     0 16455.0741    0   22 17045.9461 16455.0741  3.47%     -    0s
     0     0 16467.2002    0   20 17045.9461 16467.2002  3.40%     -    0s
     0     0 16467.3584    0   20 17045.9461 16467.3584  3.39%     -    0s
     0     0 16470.8896    0   20 17045.9461 16470.8896  3.37%     -    0s
     0     0 16472.7666    0   20 17045.9461 16472.7666  3.36%     -    0s
     0     0 16473.0506    0   20 17045.9461 16473.0506  3.36%     -    0s
     0     0 16473.0748    0   22 17045.9461 16473.0748  3.36%     -    0s
H    0     0                    16713.223954 16473.0748  1.44%     -    0s
     0     0 16474.9954    0   26 16713.2240 16474.9954  1.43%     -    0s
     0     0 16474.9954    0    4 16713.2240 16474.9954  1.43%     -    0s
     0     0 16474.9954    0   13 16713.2240 16474.9954  1.43%     -    0s
     0     0 16474.9954    0    9 16713.2240 16474.9954  1.43%     -    0s
     0     0 16474.9954    0   15 16713.2240 16474.9954  1.43%     -    0s
     0     0 16475.0360    0   20 16713.2240 16475.0360  1.43%     -    0s
     0     0 16475.4169    0   21 16713.2240 16475.4169  1.42%     -    0s
     0     0 16475.4188    0   23 16713.2240 16475.4188  1.42%     -    0s
     0     0 16477.2980    0   26 16713.2240 16477.2980  1.41%     -    0s
     0     0 16482.1999    0   24 16713.2240 16482.1999  1.38%     -    0s
     0     0 16483.1665    0   25 16713.2240 16483.1665  1.38%     -    0s
     0     0 16483.2986    0   26 16713.2240 16483.2986  1.38%     -    0s
     0     0 16485.3107    0   27 16713.2240 16485.3107  1.36%     -    0s
     0     0 16514.3632    0   28 16713.2240 16514.3632  1.19%     -    0s
     0     0 16535.7144    0   28 16713.2240 16535.7144  1.06%     -    0s
     0     0 16538.9941    0   28 16713.2240 16538.9941  1.04%     -    0s
     0     0 16701.4548    0   36 16713.2240 16701.4548  0.07%     -    0s
     0     0 16710.4099    0   37 16713.2240 16710.4099  0.02%     -    0s
     0     0 16710.4099    0   33 16713.2240 16710.4099  0.02%     -    0s
     0     0 16710.4099    0   35 16713.2240 16710.4099  0.02%     -    0s
     0     0 16710.4099    0   36 16713.2240 16710.4099  0.02%     -    0s
     0     0 16710.4099    0   35 16713.2240 16710.4099  0.02%     -    0s
     0     0 16710.4099    0   30 16713.2240 16710.4099  0.02%     -    0s
     0     0 16710.4099    0   30 16713.2240 16710.4099  0.02%     -    0s
     0     2 16710.4099    0   30 16713.2240 16710.4099  0.02%     -    0s

Cutting planes:
  Gomory: 1
  Cover: 11
  Implied bound: 1
  MIR: 9
  StrongCG: 6
  Flow cover: 12

Explored 63 nodes (1391 simplex iterations) in 0.18 seconds
Thread count was 8 (of 8 available processors)

Solution count 2: 16713.2 17045.9 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.671322395400e+04, best bound 1.671322395400e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 16713.2 using centers : 2 14 43 46 
UB at end of ContiguityHeuristic = 16713.2
UB of (contiguous) heuristicSolution = 16713.2

Number of variables fixed to zero = 4820
Number of variables fixed to one  = 0
Number of variables not fixed     = 805
Number of centers left            = 22
Percentage of vars fixed = 0.86
Academic license - for non-commercial use only
Build hess : created 805 variables
Optimize a model with 1084 rows, 880 columns and 3467 nonzeros
Variable types: 75 continuous, 805 integer (805 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [9e+00, 5e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]

Loaded MIP start with objective 16713.2

Presolve removed 172 rows and 66 columns
Presolve time: 0.01s
Presolved: 912 rows, 814 columns, 3275 nonzeros
Variable types: 0 continuous, 814 integer (792 binary)

Concurrent LP optimizer: dual simplex and barrier
Showing barrier log only...

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 2.006e+04
 Factor NZ  : 6.886e+04 (roughly 1 MByte of memory)
 Factor Ops : 7.095e+06 (less than 1 second per iteration)
 Threads    : 3

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   6.91908319e+05 -1.21635119e+05  1.28e+04 4.44e-16  1.46e+03     0s
   1   1.34436554e+05 -1.10636479e+05  2.13e+03 1.78e-15  2.68e+02     0s
   2   5.13135679e+04 -5.89429685e+04  5.30e+02 9.33e-15  7.93e+01     0s
   3   2.66314480e+04 -1.11105970e+04  7.43e+01 1.78e-15  1.79e+01     0s
   4   2.02118188e+04  8.85531693e+03  4.81e+00 3.55e-15  4.67e+00     0s
   5   1.81717065e+04  1.39000933e+04  1.30e+00 1.33e-15  1.74e+00     0s
   6   1.70654533e+04  1.50552024e+04  3.61e-01 1.78e-15  8.20e-01     0s
   7   1.67203296e+04  1.56448428e+04  2.01e-01 8.88e-16  4.38e-01     0s
   8   1.64270085e+04  1.58059973e+04  1.04e-01 1.78e-15  2.53e-01     0s
   9   1.62136021e+04  1.59092385e+04  5.35e-02 8.88e-16  1.24e-01     0s
  10   1.61561661e+04  1.59491610e+04  3.65e-02 1.78e-15  8.43e-02     0s
  11   1.60735274e+04  1.59766984e+04  1.23e-02 1.78e-15  3.95e-02     0s
  12   1.60518573e+04  1.59839611e+04  7.67e-03 1.78e-15  2.77e-02     0s
  13   1.60316197e+04  1.59887926e+04  4.64e-03 8.88e-16  1.75e-02     0s
  14   1.60223178e+04  1.59988001e+04  3.20e-03 1.78e-15  9.59e-03     0s
  15   1.60133732e+04  1.60003646e+04  1.58e-03 1.78e-15  5.30e-03     0s
  16   1.60068417e+04  1.60034812e+04  4.63e-04 1.54e-15  1.37e-03     0s

Barrier performed 16 iterations in 0.03 seconds
Barrier solve interrupted - model solved by another algorithm


Solved with dual simplex

Root relaxation: objective 1.600391e+04, 646 iterations, 0.02 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 16014.3703    0  124 16713.2240 16014.3703  4.18%     -    0s
     0     0 16294.4579    0   93 16713.2240 16294.4579  2.51%     -    0s
     0     0 16305.6158    0   89 16713.2240 16305.6158  2.44%     -    0s
     0     0 16358.4950    0  113 16713.2240 16358.4950  2.12%     -    0s
     0     0 16365.3631    0  113 16713.2240 16365.3631  2.08%     -    0s
     0     0 16370.9740    0  161 16713.2240 16370.9740  2.05%     -    0s
     0     0 16374.7165    0  116 16713.2240 16374.7165  2.03%     -    0s
     0     0 16382.4122    0  120 16713.2240 16382.4122  1.98%     -    0s
     0     0 16382.4122    0   67 16713.2240 16382.4122  1.98%     -    0s
     0     0 16382.4122    0   75 16713.2240 16382.4122  1.98%     -    0s
     0     0 16382.4122    0  102 16713.2240 16382.4122  1.98%     -    0s
     0     0 16382.4122    0  105 16713.2240 16382.4122  1.98%     -    0s
     0     0 16382.4122    0  105 16713.2240 16382.4122  1.98%     -    0s
     0     0 16383.3319    0  106 16713.2240 16383.3319  1.97%     -    0s
     0     0 16389.4926    0  107 16713.2240 16389.4926  1.94%     -    0s
     0     0 16391.2404    0  109 16713.2240 16391.2404  1.93%     -    0s
     0     0 16391.2626    0  110 16713.2240 16391.2626  1.93%     -    0s
     0     0 16400.3344    0  110 16713.2240 16400.3344  1.87%     -    0s
     0     0 16402.3254    0  114 16713.2240 16402.3254  1.86%     -    0s
     0     0 16402.4311    0  111 16713.2240 16402.4311  1.86%     -    0s
     0     0 16404.4994    0  109 16713.2240 16404.4994  1.85%     -    0s
     0     0 16406.0036    0  116 16713.2240 16406.0036  1.84%     -    0s
     0     0 16409.3264    0  104 16713.2240 16409.3264  1.82%     -    0s
     0     0 16410.3097    0  102 16713.2240 16410.3097  1.81%     -    0s
     0     0 16410.4639    0  103 16713.2240 16410.4639  1.81%     -    0s
     0     0 16424.8241    0  102 16713.2240 16424.8241  1.73%     -    0s
     0     0 16425.1002    0  103 16713.2240 16425.1002  1.72%     -    0s
     0     0 16425.1419    0  103 16713.2240 16425.1419  1.72%     -    0s
     0     0 16425.1888    0  104 16713.2240 16425.1888  1.72%     -    0s
     0     0 16425.1888    0  104 16713.2240 16425.1888  1.72%     -    0s
     0     0 16425.1888    0   83 16713.2240 16425.1888  1.72%     -    0s
     0     0 16425.1888    0   91 16713.2240 16425.1888  1.72%     -    0s
     0     0 16425.1888    0   93 16713.2240 16425.1888  1.72%     -    0s
     0     0 16425.1888    0   98 16713.2240 16425.1888  1.72%     -    0s
     0     0 16425.1888    0   99 16713.2240 16425.1888  1.72%     -    0s
     0     0 16425.1888    0   95 16713.2240 16425.1888  1.72%     -    0s
     0     0 16425.1888    0   97 16713.2240 16425.1888  1.72%     -    0s
     0     0 16425.3145    0  103 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0  103 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0   81 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0   93 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0   91 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0   91 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0   97 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0   95 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0  100 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0  101 16713.2240 16425.3145  1.72%     -    0s
     0     0 16425.3145    0  101 16713.2240 16425.3145  1.72%     -    0s
     0     2 16425.3145    0  101 16713.2240 16425.3145  1.72%     -    0s
H    4     8                    16555.580012 16432.8470  0.74%  17.8    0s
*   13     2               3    16543.153873 16477.8028  0.40%  11.8    0s

Cutting planes:
  Cover: 14
  MIR: 5
  StrongCG: 2
  GUB cover: 4

Explored 19 nodes (2723 simplex iterations) in 0.36 seconds
Thread count was 8 (of 8 available processors)

Solution count 3: 16543.2 16555.6 16713.2 

Optimal solution found (tolerance 0.00e+00)
Best objective 1.654315387300e+04, best bound 1.654315387300e+04, gap 0.0000%
IP duration time: 0.358891 seconds
Total time elapsed: 0.962980 seconds
Number of callbacks: 8
Time in callbacks: 0.000384 seconds
Number of lazy constraints generated: 4
+ for state in $states
+ echo 'Running AZ'
Running AZ
+ /home/lykhovyd/progs/districting/districting myconfig.txt AZ /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/AZ.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/AZ/counties/graph/AZ.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/AZ/counties/graph/AZ_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/AZ/counties/graph/AZ.population
state[2]        = AZ
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/AZ.ralg_hot
nr_comp = 1
graph: 15 nodes, 32 edges (read)
Model input: L = 706674, U = 713775, k = 9.
Graph is connected.
Model input: total population = 6392017
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.65502735587840e+05, norm = 1.86723645396074e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.65506441911854e+05, norm = 1.01132973100658e+01, diff = 6.94329184410200e-01
iter = 3, step = 8.57375000000000e-01, func = 1.65500990463475e+05, norm = 1.99393471168557e+01, diff = 8.62102476671127e-01
iter = 4, step = 8.57375000000000e-01, func = 1.65504433185278e+05, norm = 1.11097373984606e+01, diff = 9.84625618149910e-01
iter = 5, step = 8.14506250000000e-01, func = 1.65503555600421e+05, norm = 1.24660920402709e+01, diff = 7.95300168570636e-01
iter = 6, step = 7.73780937500000e-01, func = 1.65504775936678e+05, norm = 1.30970912975662e+01, diff = 4.80659383207940e-01
iter = 7, step = 7.35091890625000e-01, func = 1.65505308001348e+05, norm = 8.17770432557876e+00, diff = 5.22269476546463e-01
iter = 8, step = 6.98337296093750e-01, func = 1.65502950307920e+05, norm = 1.16071481714902e+01, diff = 6.87257839967881e-01
iter = 9, step = 6.63420431289062e-01, func = 1.65504209433676e+05, norm = 1.16296073759390e+01, diff = 3.86275394256684e-01
iter = 10, step = 6.63420431289062e-01, func = 1.65505143138241e+05, norm = 1.00432745455326e+01, diff = 8.70423515341013e-01
iter = 11, step = 6.30249409724609e-01, func = 1.65503739209202e+05, norm = 1.06325371948648e+01, diff = 5.41918033435808e-01
iter = 12, step = 5.98736939238379e-01, func = 1.65504427303586e+05, norm = 8.70820106705673e+00, diff = 4.26259892504642e-01
iter = 13, step = 5.98736939238379e-01, func = 1.65504320566783e+05, norm = 7.67757221422937e+00, diff = 8.34633847251173e-01
iter = 14, step = 5.98736939238379e-01, func = 1.65504817952481e+05, norm = 7.57934777646041e+00, diff = 8.35284367443467e-01
iter = 15, step = 5.68800092276460e-01, func = 1.65505242829277e+05, norm = 4.47436395398281e+00, diff = 3.20740117886429e-01
iter = 16, step = 5.40360087662637e-01, func = 1.65504759187683e+05, norm = 6.21082453397746e+00, diff = 4.30122139751689e-01
iter = 17, step = 5.13342083279505e-01, func = 1.65505433090800e+05, norm = 7.66192354359423e+00, diff = 3.02803298363167e-01
iter = 18, step = 5.13342083279505e-01, func = 1.65505309121192e+05, norm = 9.04775210992656e+00, diff = 5.78962657097937e-01
iter = 19, step = 5.13342083279505e-01, func = 1.65504723409086e+05, norm = 7.61342231022251e+00, diff = 6.66888265924901e-01
iter = 20, step = 4.87674979115529e-01, func = 1.65505687339892e+05, norm = 2.86178394456802e+00, diff = 3.20377923432014e-01
iter = 21, step = 4.63291230159753e-01, func = 1.65505549691172e+05, norm = 5.18885073363756e+00, diff = 2.73202159031876e-01
iter = 22, step = 4.40126668651765e-01, func = 1.65505909299944e+05, norm = 4.13616115764080e+00, diff = 1.95900018830965e-01
iter = 23, step = 4.18120335219177e-01, func = 1.65505327723155e+05, norm = 7.20298946446643e+00, diff = 2.93681022804372e-01
iter = 24, step = 3.97214318458218e-01, func = 1.65505983756630e+05, norm = 3.83230598910747e+00, diff = 2.23939130915497e-01
iter = 25, step = 3.77353602535307e-01, func = 1.65505875644801e+05, norm = 4.03710704294078e+00, diff = 2.54314215126313e-01
iter = 26, step = 3.58485922408542e-01, func = 1.65505884382816e+05, norm = 2.76950530383503e+00, diff = 1.90853854466311e-01
iter = 27, step = 3.58485922408542e-01, func = 1.65505939864440e+05, norm = 3.07773209785365e+00, diff = 4.59503935164807e-01
iter = 28, step = 3.58485922408542e-01, func = 1.65506134383724e+05, norm = 3.03058010741531e+00, diff = 2.98701116883058e-01
iter = 29, step = 3.40561626288115e-01, func = 1.65506016028712e+05, norm = 3.96207823252731e+00, diff = 2.21956402729009e-01
iter = 30, step = 3.23533544973709e-01, func = 1.65506146520777e+05, norm = 3.15526684008017e+00, diff = 1.29381596922670e-01
iter = 31, step = 3.07356867725023e-01, func = 1.65506296854160e+05, norm = 2.02575292297585e+00, diff = 1.38105695557599e-01
iter = 32, step = 3.07356867725023e-01, func = 1.65506216589090e+05, norm = 3.57817497693246e+00, diff = 3.01493784746849e-01
iter = 33, step = 3.07356867725023e-01, func = 1.65506334438857e+05, norm = 3.96019260358915e+00, diff = 2.25037701872253e-01
iter = 34, step = 2.91989024338772e-01, func = 1.65506460995854e+05, norm = 2.57924912041132e+00, diff = 1.00932801536519e-01
iter = 35, step = 3.50386829206527e-01, func = 1.65506536685780e+05, norm = 1.45369899116865e+00, diff = 5.98876183701131e-01
iter = 36, step = 3.32867487746200e-01, func = 1.65506501700155e+05, norm = 2.22466552563744e+00, diff = 2.06190586724927e-01
iter = 37, step = 3.16224113358890e-01, func = 1.65506494631190e+05, norm = 2.85642423733598e+00, diff = 9.06161067660702e-02
iter = 38, step = 3.00412907690946e-01, func = 1.65506479757457e+05, norm = 2.34031873391886e+00, diff = 8.87246405308450e-02
iter = 39, step = 2.85392262306399e-01, func = 1.65506561886654e+05, norm = 2.13397361709878e+00, diff = 1.37848806640626e-01
iter = 40, step = 2.71122649191079e-01, func = 1.65506606841239e+05, norm = 1.62827772899391e+00, diff = 1.32225685314623e-01
iter = 41, step = 2.57566516731525e-01, func = 1.65506600782288e+05, norm = 1.61735496007453e+00, diff = 1.15163453768025e-01
iter = 42, step = 2.44688190894948e-01, func = 1.65506635924133e+05, norm = 1.04858704785704e+00, diff = 7.15928399521152e-02
iter = 43, step = 2.32453781350201e-01, func = 1.65506620040329e+05, norm = 1.29650491268685e+00, diff = 9.51901334753114e-02
iter = 44, step = 2.20831092282691e-01, func = 1.65506661072934e+05, norm = 1.42956596864425e+00, diff = 5.39681073277242e-02
iter = 45, step = 2.09789537668556e-01, func = 1.65506721499215e+05, norm = 9.11194182533063e-01, diff = 4.62407418555170e-02
iter = 46, step = 1.99300060785129e-01, func = 1.65506703253560e+05, norm = 8.96460428827086e-01, diff = 6.50228778608680e-02
iter = 47, step = 1.89335057745872e-01, func = 1.65506746216979e+05, norm = 9.60978150740133e-01, diff = 4.72420522015865e-02
iter = 48, step = 1.79868304858578e-01, func = 1.65506738530413e+05, norm = 9.55454308321763e-01, diff = 3.41795290364627e-02
iter = 49, step = 1.70874889615650e-01, func = 1.65506724068391e+05, norm = 1.40193113200949e+00, diff = 4.52194652342663e-02
iter = 50, step = 1.62331145134867e-01, func = 1.65506726055248e+05, norm = 1.52657575836094e+00, diff = 3.52418243964447e-02
iter = 51, step = 1.54214587878124e-01, func = 1.65506757851874e+05, norm = 9.18982115777458e-01, diff = 3.13555143995727e-02
iter = 52, step = 1.46503858484217e-01, func = 1.65506773601793e+05, norm = 8.56589070926962e-01, diff = 3.73657090206760e-02
iter = 53, step = 1.39178665560007e-01, func = 1.65506786314451e+05, norm = 5.86509519404134e-01, diff = 4.91208097448199e-02
iter = 54, step = 1.32219732282006e-01, func = 1.65506767103719e+05, norm = 7.95196791941577e-01, diff = 5.72161569514898e-02
iter = 55, step = 1.32219732282006e-01, func = 1.65506775401587e+05, norm = 1.18422279964456e+00, diff = 6.68954975844732e-02
iter = 56, step = 1.25608745667906e-01, func = 1.65506793032356e+05, norm = 7.08996994302659e-01, diff = 1.34412183199123e-02
iter = 57, step = 1.19328308384511e-01, func = 1.65506770638512e+05, norm = 9.16358320650942e-01, diff = 4.97985150459202e-02
iter = 58, step = 1.13361892965285e-01, func = 1.65506787955354e+05, norm = 6.91080262581012e-01, diff = 2.36690897401395e-02
iter = 59, step = 1.07693798317021e-01, func = 1.65506801705460e+05, norm = 4.71931881458526e-01, diff = 3.29830389044119e-02
iter = 60, step = 1.02309108401170e-01, func = 1.65506794840402e+05, norm = 4.44007492070395e-01, diff = 3.10915934828883e-02
iter = 61, step = 9.71936529811113e-02, func = 1.65506796666961e+05, norm = 5.06501987758311e-01, diff = 2.53170929288544e-02
iter = 62, step = 9.23339703320557e-02, func = 1.65506807744169e+05, norm = 6.28657773919508e-01, diff = 2.06948834289941e-02
iter = 63, step = 8.77172718154530e-02, func = 1.65506808068547e+05, norm = 4.13033231789283e-01, diff = 9.74175827916519e-03
iter = 64, step = 8.33314082246803e-02, func = 1.65506810727775e+05, norm = 2.87703522572075e-01, diff = 2.58553958833087e-02
iter = 65, step = 7.91648378134463e-02, func = 1.65506812658632e+05, norm = 4.72843420069843e-01, diff = 2.58332839527964e-02
iter = 66, step = 7.52065959227740e-02, func = 1.65506815830257e+05, norm = 4.21840467425940e-01, diff = 1.36148236250762e-02
iter = 67, step = 7.14462661266353e-02, func = 1.65506813470932e+05, norm = 4.01571296677470e-01, diff = 2.22033303452711e-02
iter = 68, step = 6.78739528203035e-02, func = 1.65506819973409e+05, norm = 2.76611234713336e-01, diff = 1.02661069009236e-02
iter = 69, step = 6.44802551792883e-02, func = 1.65506817776679e+05, norm = 4.58607454475389e-01, diff = 1.73521822564734e-02
iter = 70, step = 6.12562424203239e-02, func = 1.65506818356748e+05, norm = 4.09292350565406e-01, diff = 8.62281748897610e-03
iter = 71, step = 5.81934302993077e-02, func = 1.65506818969437e+05, norm = 3.28493114349559e-01, diff = 1.31730383499254e-02
iter = 72, step = 5.52837587843423e-02, func = 1.65506816905652e+05, norm = 3.59499026288524e-01, diff = 9.83408585801218e-03
iter = 73, step = 5.25195708451252e-02, func = 1.65506822303881e+05, norm = 2.58428570035053e-01, diff = 1.14533415294265e-02
iter = 74, step = 4.98935923028689e-02, func = 1.65506821303818e+05, norm = 2.21578114874527e-01, diff = 1.37677245664279e-02
iter = 75, step = 4.98935923028689e-02, func = 1.65506822791926e+05, norm = 3.13301035767669e-01, diff = 1.54222389635647e-02
iter = 76, step = 4.73989126877255e-02, func = 1.65506824888597e+05, norm = 3.08167040060626e-01, diff = 8.14071194997978e-03
iter = 77, step = 4.50289670533392e-02, func = 1.65506822866777e+05, norm = 2.48351165253525e-01, diff = 6.35699325849657e-03
iter = 78, step = 4.50289670533392e-02, func = 1.65506824798291e+05, norm = 1.64753501627356e-01, diff = 2.22407506008386e-02
iter = 79, step = 4.27775187006722e-02, func = 1.65506825279003e+05, norm = 2.23846527869239e-01, diff = 8.54394301660231e-03
iter = 80, step = 4.06386427656386e-02, func = 1.65506826656194e+05, norm = 1.62192138425102e-01, diff = 6.07210024121394e-03
iter = 81, step = 4.06386427656386e-02, func = 1.65506825581821e+05, norm = 2.03639548083822e-01, diff = 2.04037344904198e-02
iter = 82, step = 4.06386427656386e-02, func = 1.65506826424108e+05, norm = 2.03707640020388e-01, diff = 1.23050449599115e-02
iter = 83, step = 3.86067106273567e-02, func = 1.65506826575496e+05, norm = 3.24835564978019e-01, diff = 7.48485418747989e-03
iter = 84, step = 3.66763750959889e-02, func = 1.65506828538761e+05, norm = 1.62287015590478e-01, diff = 4.46783890677479e-03
iter = 85, step = 3.48425563411894e-02, func = 1.65506828359366e+05, norm = 2.02756867112399e-01, diff = 9.23498727481707e-03
iter = 86, step = 3.31004285241299e-02, func = 1.65506829701705e+05, norm = 1.71374761166020e-01, diff = 7.03068547472045e-03
iter = 87, step = 3.14454070979234e-02, func = 1.65506829468474e+05, norm = 1.90983307065133e-01, diff = 6.32393354970271e-03
iter = 88, step = 2.98731367430273e-02, func = 1.65506825414446e+05, norm = 1.41375253971286e+00, diff = 6.49253158944234e-03
iter = 89, step = 2.83794799058759e-02, func = 1.65506829789403e+05, norm = 7.09125709870889e-01, diff = 1.45336856869258e-02
iter = 90, step = 2.69605059105821e-02, func = 1.65506829832822e+05, norm = 1.26416188855118e-01, diff = 5.88788911690796e-03
iter = 91, step = 2.56124806150530e-02, func = 1.65506829547663e+05, norm = 1.77276446909554e-01, diff = 5.15318543823237e-03
iter = 92, step = 2.43318565843004e-02, func = 1.65506830392867e+05, norm = 2.46216282828808e-01, diff = 4.90266796059443e-03
iter = 93, step = 2.31152637550853e-02, func = 1.65506830574055e+05, norm = 1.38926700036490e-01, diff = 8.85357348032024e-03
iter = 94, step = 2.19595005673311e-02, func = 1.65506830731409e+05, norm = 9.65244119919500e-02, diff = 5.04298880072920e-03
iter = 95, step = 2.08615255389645e-02, func = 1.65506830152008e+05, norm = 1.28037966157710e-01, diff = 6.06848423572782e-03
iter = 96, step = 1.98184492620163e-02, func = 1.65506830931541e+05, norm = 7.96749517331030e-02, diff = 4.54801829599591e-03
iter = 97, step = 1.98184492620163e-02, func = 1.65506831185515e+05, norm = 6.50226710037226e-02, diff = 1.24699097342156e-02
iter = 98, step = 1.88275267989155e-02, func = 1.65506831123348e+05, norm = 1.50307037759184e-01, diff = 7.13861584190780e-03
iter = 99, step = 1.78861504589697e-02, func = 1.65506831042601e+05, norm = 1.73184330747050e-01, diff = 3.05586465939057e-03
iter = 100, step = 1.69918429360212e-02, func = 1.65506831422930e+05, norm = 1.06969980283205e-01, diff = 2.53711963561688e-03
iter = 101, step = 1.61422507892202e-02, func = 1.65506831197406e+05, norm = 1.39256578937232e-01, diff = 4.29364694610109e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.655068e+05
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 9, while k = 9 and n = 15
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 9.63922e-321
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 225
Number of centers left            = 15
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 225 variables
Optimize a model with 271 rows, 240 columns and 960 nonzeros
Variable types: 15 continuous, 225 integer (225 binary)
Coefficient statistics:
  Matrix range     [1e+00, 4e+06]
  Objective range  [4e+01, 5e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 9e+00]
Presolve removed 0 rows and 32 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.000275 seconds
Total time elapsed: 0.007463 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running CA'
Running CA
+ /home/lykhovyd/progs/districting/districting myconfig.txt CA /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/CA.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/CA/counties/graph/CA.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/CA/counties/graph/CA_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/CA/counties/graph/CA.population
state[2]        = CA
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/CA.ralg_hot
nr_comp = 1
WARNING: Failed to open /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/CA.ralg_hot!
graph: 58 nodes, 142 edges (read)
Model input: L = 699391, U = 706419, k = 53.
Graph is connected.
Model input: total population = 37253956
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = -2.19906593129894e-01, norm = 3.05691886742836e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.06264058118655e+01, func = 8.23592646270074e+02, norm = 3.13536817759972e+01, diff = 1.32304244370022e+03
iter = 3, step = 1.67553958748476e+03, func = 1.05290691589021e+04, norm = 2.57652608472730e+01, diff = 1.97538520376680e+04
iter = 4, step = 2.41277700597805e+03, func = 5.00558362167270e+04, norm = 1.91418212163106e+01, diff = 1.41284232772532e+04
iter = 5, step = 7.20451353541835e+03, func = 1.45986311450789e+05, norm = 2.37999151045681e+01, diff = 6.66639739692459e+04
iter = 6, step = 2.15125621445426e+04, func = 3.18628332147833e+05, norm = 2.20772755839530e+01, diff = 1.73335768378119e+05
iter = 7, step = 6.42361663626100e+04, func = 7.07380229518008e+05, norm = 2.43707351155563e+01, diff = 5.18510828606841e+05
iter = 8, step = 1.11000095474590e+05, func = 1.48022791972659e+06, norm = 3.63028170752922e+01, diff = 6.42426913253814e+05
iter = 9, step = 1.33200114569508e+05, func = 2.17186754144534e+06, norm = 2.37823475995504e+01, diff = 3.25677168102057e+05
iter = 10, step = 1.33200114569508e+05, func = 2.37891627035916e+06, norm = 4.45138192943826e+01, diff = 2.49032766067314e+05
iter = 11, step = 1.33200114569508e+05, func = 2.86824582317259e+06, norm = 3.14026320184222e+01, diff = 1.68094195899043e+05
iter = 12, step = 1.33200114569508e+05, func = 3.15833825995141e+06, norm = 2.75510765067350e+01, diff = 2.28255139415788e+05
iter = 13, step = 1.26540108841033e+05, func = 3.42536767497570e+06, norm = 2.97449757715847e+01, diff = 1.12449693539348e+05
iter = 14, step = 1.20213103398981e+05, func = 3.50989978827099e+06, norm = 1.97129598535584e+01, diff = 1.00683036460787e+05
iter = 15, step = 1.14202448229032e+05, func = 3.55806600855454e+06, norm = 3.52888497714642e+01, diff = 1.12238283136870e+05
iter = 16, step = 1.08492325817580e+05, func = 3.84976240850629e+06, norm = 2.79859884199149e+01, diff = 7.10110077750400e+04
iter = 17, step = 1.08492325817580e+05, func = 3.99890569749676e+06, norm = 2.79425762929874e+01, diff = 1.78106587846578e+05
iter = 18, step = 1.30190790981096e+05, func = 4.20990563377777e+06, norm = 3.50612162624178e+01, diff = 3.67314109228612e+05
iter = 19, step = 1.23681251432042e+05, func = 4.42691754442081e+06, norm = 2.94554525415907e+01, diff = 9.65989134802874e+04
iter = 20, step = 1.17497188860439e+05, func = 4.64126801810684e+06, norm = 2.03139486933615e+01, diff = 1.04296347987863e+05
iter = 21, step = 1.11622329417417e+05, func = 4.76254353987114e+06, norm = 2.64812328675427e+01, diff = 1.08182688547082e+05
iter = 22, step = 1.06041212946547e+05, func = 4.93246827325138e+06, norm = 1.72337454625183e+01, diff = 8.07867245883916e+04
iter = 23, step = 1.00739152299219e+05, func = 5.14332944200735e+06, norm = 2.53657070898760e+01, diff = 9.73455858127285e+04
iter = 24, step = 9.57021946842583e+04, func = 5.39007095205123e+06, norm = 2.09442673426148e+01, diff = 6.80053605428948e+04
iter = 25, step = 9.09170849500454e+04, func = 5.47842075191882e+06, norm = 2.31774677955583e+01, diff = 7.84748330871774e+04
iter = 26, step = 8.63712307025431e+04, func = 5.32092942854185e+06, norm = 2.93250964857315e+01, diff = 6.97195811259743e+04
iter = 27, step = 1.03645476843052e+05, func = 5.91268206663981e+06, norm = 2.03382460141505e+01, diff = 2.58342365361153e+05
iter = 28, step = 9.84632030008991e+04, func = 5.90861158110742e+06, norm = 4.01591378545250e+01, diff = 8.82169757487438e+04
iter = 29, step = 9.84632030008991e+04, func = 6.26074085533512e+06, norm = 2.26016890711024e+01, diff = 1.23155791094546e+05
iter = 30, step = 9.35400428508542e+04, func = 6.39310317901618e+06, norm = 2.03642479152841e+01, diff = 9.28689238825109e+04
iter = 31, step = 8.88630407083115e+04, func = 6.41813825065959e+06, norm = 2.60506172391219e+01, diff = 6.96359499606582e+04
iter = 32, step = 8.88630407083115e+04, func = 6.69483132200436e+06, norm = 1.87812286678397e+01, diff = 1.21780588477793e+05
iter = 33, step = 8.44198886728959e+04, func = 6.79984359413463e+06, norm = 2.62548793192964e+01, diff = 7.62853027432645e+04
iter = 34, step = 8.44198886728959e+04, func = 6.85943503549928e+06, norm = 3.20040786790163e+01, diff = 1.17658659402507e+05
iter = 35, step = 8.44198886728959e+04, func = 7.02680629079724e+06, norm = 3.51653197913273e+01, diff = 1.19578808494796e+05
iter = 36, step = 8.01988942392511e+04, func = 7.07615557920880e+06, norm = 2.23026451387481e+01, diff = 6.12021908928255e+04
iter = 37, step = 7.61889495272885e+04, func = 7.05193449637130e+06, norm = 1.85570023393745e+01, diff = 7.46121641486983e+04
iter = 38, step = 7.23795020509241e+04, func = 7.23096550416497e+06, norm = 2.33070066413544e+01, diff = 5.64804513130062e+04
iter = 39, step = 7.23795020509241e+04, func = 7.29407577267380e+06, norm = 3.49380519716136e+01, diff = 1.00810543914079e+05
iter = 40, step = 8.68554024611089e+04, func = 7.50665363505645e+06, norm = 2.09136712495960e+01, diff = 2.00725622113857e+05
iter = 41, step = 8.25126323380535e+04, func = 7.65746547938683e+06, norm = 1.55896406123332e+01, diff = 8.08437422209928e+04
iter = 42, step = 7.83870007211508e+04, func = 7.77099383756272e+06, norm = 2.29671563454785e+01, diff = 6.40178530016545e+04
iter = 43, step = 7.44676506850933e+04, func = 7.91883647337452e+06, norm = 1.43344575567963e+01, diff = 5.13712175013965e+04
iter = 44, step = 7.07442681508386e+04, func = 8.07197430428543e+06, norm = 1.41392374999356e+01, diff = 6.61873585111352e+04
iter = 45, step = 6.72070547432967e+04, func = 8.26538052899793e+06, norm = 1.81257987371436e+01, diff = 5.31680337309691e+04
iter = 46, step = 6.72070547432967e+04, func = 8.34771472601718e+06, norm = 2.20621565632278e+01, diff = 8.94803084184118e+04
iter = 47, step = 6.38467020061318e+04, func = 8.50761008326127e+06, norm = 1.42297477649788e+01, diff = 4.75217676365987e+04
iter = 48, step = 6.06543669058252e+04, func = 8.58888834938172e+06, norm = 2.41061392169068e+01, diff = 5.65901272751253e+04
iter = 49, step = 5.76216485605340e+04, func = 8.61519890235253e+06, norm = 2.73121315841506e+01, diff = 3.66664494852327e+04
iter = 50, step = 5.47405661325073e+04, func = 8.76499212835405e+06, norm = 1.81642105395375e+01, diff = 3.71785914813589e+04
iter = 51, step = 5.20035378258819e+04, func = 8.81197842283064e+06, norm = 1.56885377101122e+01, diff = 4.57493165081016e+04
iter = 52, step = 4.94033609345878e+04, func = 8.87984613144859e+06, norm = 2.01909416024899e+01, diff = 4.08502734435529e+04
iter = 53, step = 4.69331928878584e+04, func = 8.96035690992921e+06, norm = 2.27541288635515e+01, diff = 3.04134798011362e+04
iter = 54, step = 4.69331928878584e+04, func = 8.97349351695122e+06, norm = 2.89805279050676e+01, diff = 6.70466303306431e+04
iter = 55, step = 4.45865332434655e+04, func = 8.95866954635993e+06, norm = 1.76143239622019e+01, diff = 3.18222859115165e+04
iter = 56, step = 4.23572065812922e+04, func = 9.10087569302440e+06, norm = 1.34002733684579e+01, diff = 3.90059941508031e+04
iter = 57, step = 4.23572065812922e+04, func = 9.06533105960738e+06, norm = 2.85144996204248e+01, diff = 5.95354109881706e+04
iter = 58, step = 4.02393462522276e+04, func = 9.24649967592067e+06, norm = 1.68573616386478e+01, diff = 2.44357178867493e+04
iter = 59, step = 4.02393462522276e+04, func = 9.23639824008281e+06, norm = 2.48521082474529e+01, diff = 7.01985335303268e+04
iter = 60, step = 3.82273789396162e+04, func = 9.33624760778825e+06, norm = 1.83004876525545e+01, diff = 2.54108224877836e+04
iter = 61, step = 3.63160099926354e+04, func = 9.34561012480425e+06, norm = 2.11114491910171e+01, diff = 2.70839382500260e+04
iter = 62, step = 3.63160099926354e+04, func = 9.37441561987270e+06, norm = 2.22968019253691e+01, diff = 5.03546285453439e+04
iter = 63, step = 3.45002094930036e+04, func = 9.43057291624930e+06, norm = 2.06593991992658e+01, diff = 2.40960096020986e+04
iter = 64, step = 3.45002094930036e+04, func = 9.52008968244236e+06, norm = 1.75822248959950e+01, diff = 4.72887429014681e+04
iter = 65, step = 3.27751990183535e+04, func = 9.56336713360295e+06, norm = 1.20089753762290e+01, diff = 2.58023959386875e+04
iter = 66, step = 3.11364390674358e+04, func = 9.62555092545620e+06, norm = 1.57782286742500e+01, diff = 2.71233171132172e+04
iter = 67, step = 2.95796171140640e+04, func = 9.68609658682448e+06, norm = 1.86085027995007e+01, diff = 2.13213075581637e+04
iter = 68, step = 2.95796171140640e+04, func = 9.67224398492320e+06, norm = 2.36042858335129e+01, diff = 3.93911379916717e+04
iter = 69, step = 2.95796171140640e+04, func = 9.72840389006094e+06, norm = 1.87732088544554e+01, diff = 3.55229807567655e+04
iter = 70, step = 2.95796171140640e+04, func = 9.79776846670819e+06, norm = 1.22886787169963e+01, diff = 4.32187754593685e+04
iter = 71, step = 2.95796171140640e+04, func = 9.88189838379658e+06, norm = 1.07958235583695e+01, diff = 4.59755763813877e+04
iter = 72, step = 2.95796171140640e+04, func = 9.95428107571533e+06, norm = 1.88370632444002e+01, diff = 4.18914461677437e+04
iter = 73, step = 2.81006362583608e+04, func = 1.00207624042383e+07, norm = 2.51046652235205e+01, diff = 1.66526520813989e+04
iter = 74, step = 2.66956044454427e+04, func = 1.00643199414689e+07, norm = 2.21705259655242e+01, diff = 1.75799369471548e+04
iter = 75, step = 2.53608242231706e+04, func = 1.00799998925795e+07, norm = 1.60923858596401e+01, diff = 1.87152509956697e+04
iter = 76, step = 2.40927830120121e+04, func = 1.01069673590099e+07, norm = 1.21074183048659e+01, diff = 2.02069470226394e+04
iter = 77, step = 2.28881438614115e+04, func = 1.01489748896368e+07, norm = 1.15432949325771e+01, diff = 1.71733671825485e+04
iter = 78, step = 2.28881438614115e+04, func = 1.01922402240174e+07, norm = 1.50207909720514e+01, diff = 3.21770578051465e+04
iter = 79, step = 2.28881438614115e+04, func = 1.02716051074253e+07, norm = 1.09139641995458e+01, diff = 2.68696601784131e+04
iter = 80, step = 2.28881438614115e+04, func = 1.02844854569442e+07, norm = 2.34412217710445e+01, diff = 3.66139011169670e+04
iter = 81, step = 2.28881438614115e+04, func = 1.03386760753889e+07, norm = 1.43168304060956e+01, diff = 2.49129335344283e+04
iter = 82, step = 2.28881438614115e+04, func = 1.03782654425856e+07, norm = 1.61531282861365e+01, diff = 3.49733506710447e+04
iter = 83, step = 2.28881438614115e+04, func = 1.04380658680478e+07, norm = 1.18445324643178e+01, diff = 2.66766284957942e+04
iter = 84, step = 2.74657726336938e+04, func = 1.04973479967945e+07, norm = 2.09633841986875e+01, diff = 5.29590950120183e+04
iter = 85, step = 2.60924840020091e+04, func = 1.05330335352245e+07, norm = 1.67182912351344e+01, diff = 1.38739885445516e+04
iter = 86, step = 2.47878598019086e+04, func = 1.05411227792190e+07, norm = 1.96655888803317e+01, diff = 1.66528763328485e+04
iter = 87, step = 2.35484668118132e+04, func = 1.05842895795509e+07, norm = 1.20917992770937e+01, diff = 1.37196842361235e+04
iter = 88, step = 2.35484668118132e+04, func = 1.06278951269715e+07, norm = 1.18074530137188e+01, diff = 3.73049770465173e+04
iter = 89, step = 2.35484668118132e+04, func = 1.06624145613229e+07, norm = 1.70215923919052e+01, diff = 3.09120965667207e+04
iter = 90, step = 2.35484668118132e+04, func = 1.07121014698595e+07, norm = 2.47580571618999e+01, diff = 2.83167519438365e+04
iter = 91, step = 2.23710434712225e+04, func = 1.07703329559599e+07, norm = 1.43354166643934e+01, diff = 1.30111699124158e+04
iter = 92, step = 2.12524912976614e+04, func = 1.07829883207129e+07, norm = 1.63778430201146e+01, diff = 1.89225117497633e+04
iter = 93, step = 2.12524912976614e+04, func = 1.07938980927794e+07, norm = 1.58889056960391e+01, diff = 2.53405231764974e+04
iter = 94, step = 2.01898667327783e+04, func = 1.08528931774932e+07, norm = 1.08585725854221e+01, diff = 1.27951724214492e+04
iter = 95, step = 2.01898667327783e+04, func = 1.08548586750261e+07, norm = 1.52610662788375e+01, diff = 3.05636883011141e+04
iter = 96, step = 2.01898667327783e+04, func = 1.08618168327618e+07, norm = 1.78636691716105e+01, diff = 2.32534303467420e+04
iter = 97, step = 2.01898667327783e+04, func = 1.09207301061650e+07, norm = 1.41207050049813e+01, diff = 2.21763912050821e+04
iter = 98, step = 1.91803733961394e+04, func = 1.09903141689473e+07, norm = 1.33651805106536e+01, diff = 1.43312488430660e+04
iter = 99, step = 1.91803733961394e+04, func = 1.10092219106870e+07, norm = 1.49867430278917e+01, diff = 2.50069060845952e+04
iter = 100, step = 1.82213547263324e+04, func = 1.10409197685784e+07, norm = 1.25726559563317e+01, diff = 1.14340487811488e+04
iter = 101, step = 1.73102869900158e+04, func = 1.10559194274255e+07, norm = 1.61939744940054e+01, diff = 1.10007786640106e+04
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.105592e+07
Time stats : init 0.0, compute 1.0, total 1.0
Academic license - for non-commercial use only
# centers = 53, while k = 53 and n = 58
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 1.37834e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 3364
Number of centers left            = 58
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 3364 variables
Optimize a model with 3539 rows, 3422 columns and 13688 nonzeros
Variable types: 58 continuous, 3364 integer (3364 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+07]
  Objective range  [5e+00, 9e+06]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 5e+01]
Presolve removed 0 rows and 826 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.002350 seconds
Total time elapsed: 0.115481 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running CO'
Running CO
+ /home/lykhovyd/progs/districting/districting myconfig.txt CO /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/CO.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/CO/counties/graph/CO.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/CO/counties/graph/CO_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/CO/counties/graph/CO.population
state[2]        = CO
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/CO.ralg_hot
nr_comp = 1
graph: 64 nodes, 161 edges (read)
Model input: L = 714865, U = 722048, k = 7.
Graph is connected.
Model input: total population = 5029196
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.26130360977694e+04, norm = 9.67755975772398e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 2.26138938567565e+04, norm = 5.71626746199601e+00, diff = 8.58214707994643e-01
iter = 3, step = 8.57375000000000e-01, func = 2.26120473372837e+04, norm = 7.17409320594630e+00, diff = 7.16328755374118e-01
iter = 4, step = 8.57375000000000e-01, func = 2.26117494287956e+04, norm = 6.18551638309448e+00, diff = 1.10437138785656e+00
iter = 5, step = 8.57375000000000e-01, func = 2.26122860618542e+04, norm = 4.46760799357977e+00, diff = 1.25520638638092e+00
iter = 6, step = 8.14506250000000e-01, func = 2.26131654516982e+04, norm = 4.57753408283755e+00, diff = 5.88751146413087e-01
iter = 7, step = 7.73780937500000e-01, func = 2.26132913318909e+04, norm = 4.28519692842822e+00, diff = 5.12458589423175e-01
iter = 8, step = 7.35091890625000e-01, func = 2.26136834731315e+04, norm = 3.51716219151108e+00, diff = 5.98577246760945e-01
iter = 9, step = 6.98337296093750e-01, func = 2.26138871620131e+04, norm = 3.89742921138117e+00, diff = 5.13271735215712e-01
iter = 10, step = 6.63420431289062e-01, func = 2.26138311969935e+04, norm = 3.19688740947399e+00, diff = 4.87917281303788e-01
iter = 11, step = 6.30249409724609e-01, func = 2.26139641497958e+04, norm = 2.95442851356048e+00, diff = 4.69803159852259e-01
iter = 12, step = 5.98736939238379e-01, func = 2.26139121678035e+04, norm = 3.64976343458057e+00, diff = 4.22042719939814e-01
iter = 13, step = 5.68800092276460e-01, func = 2.26140824029177e+04, norm = 3.70824398728755e+00, diff = 3.77096094329883e-01
iter = 14, step = 5.40360087662637e-01, func = 2.26142696144489e+04, norm = 2.92780522311661e+00, diff = 3.73455124554184e-01
iter = 15, step = 5.13342083279505e-01, func = 2.26143156780392e+04, norm = 3.65122454105853e+00, diff = 3.52165665769056e-01
iter = 16, step = 4.87674979115529e-01, func = 2.26141972550466e+04, norm = 3.71150137907035e+00, diff = 3.26402624653396e-01
iter = 17, step = 4.63291230159753e-01, func = 2.26143013529791e+04, norm = 3.10513306412220e+00, diff = 3.15090674549634e-01
iter = 18, step = 4.40126668651765e-01, func = 2.26143643206141e+04, norm = 2.91365114647057e+00, diff = 3.10561814067291e-01
iter = 19, step = 4.18120335219177e-01, func = 2.26144033304919e+04, norm = 3.07026268490009e+00, diff = 2.83542917032603e-01
iter = 20, step = 3.97214318458218e-01, func = 2.26143725992533e+04, norm = 3.08915187514938e+00, diff = 2.77382795732816e-01
iter = 21, step = 3.77353602535307e-01, func = 2.26144801351273e+04, norm = 2.66940531590603e+00, diff = 2.66251317182087e-01
iter = 22, step = 3.58485922408542e-01, func = 2.26144400396141e+04, norm = 3.10919796895349e+00, diff = 2.54913238163062e-01
iter = 23, step = 3.40561626288115e-01, func = 2.26144653373387e+04, norm = 2.43992137591621e+00, diff = 2.22478903076611e-01
iter = 24, step = 3.23533544973709e-01, func = 2.26145299407708e+04, norm = 1.59729277523963e+00, diff = 2.15981185862714e-01
iter = 25, step = 3.07356867725023e-01, func = 2.26144754185508e+04, norm = 2.16989669778981e+00, diff = 2.35707263724262e-01
iter = 26, step = 2.91989024338772e-01, func = 2.26145697980583e+04, norm = 1.60791859402196e+00, diff = 1.59771454852638e-01
iter = 27, step = 2.77389573121834e-01, func = 2.26146379893521e+04, norm = 1.50411961786304e+00, diff = 1.77093185809436e-01
iter = 28, step = 2.63520094465742e-01, func = 2.26146224717433e+04, norm = 1.43339935546658e+00, diff = 1.73349524875957e-01
iter = 29, step = 2.50344089742455e-01, func = 2.26146153937609e+04, norm = 1.73226404475605e+00, diff = 1.65331293830394e-01
iter = 30, step = 2.37826885255332e-01, func = 2.26146670079139e+04, norm = 1.79083051079452e+00, diff = 1.33218036393494e-01
iter = 31, step = 2.25935540992565e-01, func = 2.26145784479165e+04, norm = 2.08947812682057e+00, diff = 1.48307452332763e-01
iter = 32, step = 2.25935540992565e-01, func = 2.26146715533572e+04, norm = 2.29316969724365e+00, diff = 2.22792055474084e-01
iter = 33, step = 2.14638763942937e-01, func = 2.26146457103737e+04, norm = 2.12786114290242e+00, diff = 1.29244371438161e-01
iter = 34, step = 2.03906825745790e-01, func = 2.26146786369576e+04, norm = 1.73237020461369e+00, diff = 1.37323847186914e-01
iter = 35, step = 1.93711484458501e-01, func = 2.26146515234533e+04, norm = 1.61275967301566e+00, diff = 1.24517421755545e-01
iter = 36, step = 1.84025910235576e-01, func = 2.26147080982404e+04, norm = 1.02125859076609e+00, diff = 1.15492252866589e-01
iter = 37, step = 1.74824614723797e-01, func = 2.26146643235149e+04, norm = 1.36902652714081e+00, diff = 1.28395767752714e-01
iter = 38, step = 1.74824614723797e-01, func = 2.26146606029511e+04, norm = 1.98322527575340e+00, diff = 1.55680146036745e-01
iter = 39, step = 1.66083383987607e-01, func = 2.26146660809947e+04, norm = 1.90235081047433e+00, diff = 9.59392393744656e-02
iter = 40, step = 1.57779214788227e-01, func = 2.26147413789821e+04, norm = 1.71534813694338e+00, diff = 9.17414758446332e-02
iter = 41, step = 1.49890254048815e-01, func = 2.26147368835638e+04, norm = 1.40846883990034e+00, diff = 1.06266128659414e-01
iter = 42, step = 1.42395741346375e-01, func = 2.26147193144198e+04, norm = 1.40555269234387e+00, diff = 1.01847923786818e-01
iter = 43, step = 1.42395741346375e-01, func = 2.26147350971893e+04, norm = 1.50518408128054e+00, diff = 1.24445168137144e-01
iter = 44, step = 1.35275954279056e-01, func = 2.26147720136105e+04, norm = 1.03454983844778e+00, diff = 7.45275281505027e-02
iter = 45, step = 1.28512156565103e-01, func = 2.26147353504320e+04, norm = 2.22287304611093e+00, diff = 7.57675439614028e-02
iter = 46, step = 1.28512156565103e-01, func = 2.26147552810909e+04, norm = 1.73897102698397e+00, diff = 1.27151239395411e-01
iter = 47, step = 1.22086548736848e-01, func = 2.26147615332340e+04, norm = 1.29033342209535e+00, diff = 7.17752535008025e-02
iter = 48, step = 1.15982221300006e-01, func = 2.26147389260540e+04, norm = 1.36486290096486e+00, diff = 7.46090242745854e-02
iter = 49, step = 1.10183110235005e-01, func = 2.26147609583779e+04, norm = 1.25667122483529e+00, diff = 5.15500002764251e-02
iter = 50, step = 1.04673954723255e-01, func = 2.26147639718687e+04, norm = 1.02217652784588e+00, diff = 6.25090624215086e-02
iter = 51, step = 9.94402569870922e-02, func = 2.26147691014616e+04, norm = 1.12468127850455e+00, diff = 6.72059754261236e-02
iter = 52, step = 9.44682441377376e-02, func = 2.26147814139981e+04, norm = 7.51593718857317e-01, diff = 5.05061025494311e-02
iter = 53, step = 8.97448319308507e-02, func = 2.26147637356947e+04, norm = 7.53883879375406e-01, diff = 5.23829253807437e-02
iter = 54, step = 8.52575903343082e-02, func = 2.26147776365117e+04, norm = 1.07716606778241e+00, diff = 4.23824976727770e-02
iter = 55, step = 8.52575903343082e-02, func = 2.26147838340398e+04, norm = 1.05738890117962e+00, diff = 6.58263527051297e-02
iter = 56, step = 8.09947108175928e-02, func = 2.26147835596686e+04, norm = 1.40757521323978e+00, diff = 3.82616936852367e-02
iter = 57, step = 7.69449752767131e-02, func = 2.26147913007359e+04, norm = 1.01562289689296e+00, diff = 3.61969001460843e-02
iter = 58, step = 7.30977265128775e-02, func = 2.26148053106961e+04, norm = 5.33529133820033e-01, diff = 3.58597794048714e-02
iter = 59, step = 6.94428401872336e-02, func = 2.26148049912385e+04, norm = 7.41104566888250e-01, diff = 3.99171448030738e-02
iter = 60, step = 6.59706981778719e-02, func = 2.26148074794464e+04, norm = 5.98984416872281e-01, diff = 2.62153015303246e-02
iter = 61, step = 6.26721632689783e-02, func = 2.26148084529679e+04, norm = 7.30261165102731e-01, diff = 3.38828173882672e-02
iter = 62, step = 5.95385551055294e-02, func = 2.26148080872846e+04, norm = 1.05666814654627e+00, diff = 2.18627965619557e-02
iter = 63, step = 5.65616273502529e-02, func = 2.26148191543388e+04, norm = 7.12343724928041e-01, diff = 2.33827443893117e-02
iter = 64, step = 5.37335459827403e-02, func = 2.26148140324634e+04, norm = 7.24725444606218e-01, diff = 2.46539278928543e-02
iter = 65, step = 5.10468686836033e-02, func = 2.26148150728852e+04, norm = 9.01321201552202e-01, diff = 2.44100981224245e-02
iter = 66, step = 4.84945252494231e-02, func = 2.26148225974282e+04, norm = 9.75179823616303e-01, diff = 1.73165126209946e-02
iter = 67, step = 4.60697989869519e-02, func = 2.26148231260680e+04, norm = 6.92200608038444e-01, diff = 2.14729185110250e-02
iter = 68, step = 4.37663090376043e-02, func = 2.26148263251124e+04, norm = 5.73063894659439e-01, diff = 1.76566846890883e-02
iter = 69, step = 4.15779935857241e-02, func = 2.26148272578045e+04, norm = 5.16293761732275e-01, diff = 1.72546008704518e-02
iter = 70, step = 3.94990939064379e-02, func = 2.26148253223298e+04, norm = 5.19167060750879e-01, diff = 1.13930363937607e-02
iter = 71, step = 3.75241392111160e-02, func = 2.26148280042291e+04, norm = 4.67799378849319e-01, diff = 1.16556726861129e-02
iter = 72, step = 3.56479322505602e-02, func = 2.26148294726124e+04, norm = 4.64030351214475e-01, diff = 1.67395197629727e-02
iter = 73, step = 3.38655356380322e-02, func = 2.26148304600064e+04, norm = 9.51087221494931e-01, diff = 1.47778766184304e-02
iter = 74, step = 3.21722588561306e-02, func = 2.26148322641136e+04, norm = 5.07754041854760e-01, diff = 1.39025797325650e-02
iter = 75, step = 3.05636459133241e-02, func = 2.26148317401359e+04, norm = 4.46349022166025e-01, diff = 1.68132500495299e-02
iter = 76, step = 2.90354636176579e-02, func = 2.26148328647997e+04, norm = 8.65816959072350e-01, diff = 1.07222271621329e-02
iter = 77, step = 2.75836904367750e-02, func = 2.26148278231182e+04, norm = 1.00206569826970e+00, diff = 1.45035217480434e-02
iter = 78, step = 2.75836904367750e-02, func = 2.26148326728901e+04, norm = 1.15681447981706e+00, diff = 2.58362521120782e-02
iter = 79, step = 2.62045059149362e-02, func = 2.26148232840110e+04, norm = 1.17878676554045e+00, diff = 1.70549086977456e-02
iter = 80, step = 2.62045059149362e-02, func = 2.26148345018446e+04, norm = 5.09745838498188e-01, diff = 2.33512834840570e-02
iter = 81, step = 2.48942806191894e-02, func = 2.26148313474878e+04, norm = 6.72980074970655e-01, diff = 1.51588951727108e-02
iter = 82, step = 2.48942806191894e-02, func = 2.26148326981071e+04, norm = 7.13466708160346e-01, diff = 1.60936193486943e-02
iter = 83, step = 2.36495665882299e-02, func = 2.26148354639961e+04, norm = 5.23054119380328e-01, diff = 7.27745021447469e-03
iter = 84, step = 2.24670882588184e-02, func = 2.26148364771115e+04, norm = 4.45286765516277e-01, diff = 8.04694006318961e-03
iter = 85, step = 2.13437338458775e-02, func = 2.26148363866930e+04, norm = 5.35836999203093e-01, diff = 6.84529602154105e-03
iter = 86, step = 2.13437338458775e-02, func = 2.26148380141369e+04, norm = 7.95647622971493e-01, diff = 1.21348738698937e-02
iter = 87, step = 2.02765471535836e-02, func = 2.26148296282035e+04, norm = 9.02972092331415e-01, diff = 1.27181968101410e-02
iter = 88, step = 2.43318565843004e-02, func = 2.26148332727573e+04, norm = 6.75533326564051e-01, diff = 2.69354716103105e-02
iter = 89, step = 2.43318565843004e-02, func = 2.26148374109555e+04, norm = 5.01417288464187e-01, diff = 1.66108748990146e-02
iter = 90, step = 2.43318565843004e-02, func = 2.26148389378333e+04, norm = 4.35334941020405e-01, diff = 1.52585185961819e-02
iter = 91, step = 2.31152637550853e-02, func = 2.26148405063646e+04, norm = 3.80685993079846e-01, diff = 7.62846797981827e-03
iter = 92, step = 2.19595005673311e-02, func = 2.26148395789697e+04, norm = 3.45654805959490e-01, diff = 5.64032428043310e-03
iter = 93, step = 2.08615255389645e-02, func = 2.26148414052948e+04, norm = 2.74121142577594e-01, diff = 7.71333570066036e-03
iter = 94, step = 1.98184492620163e-02, func = 2.26148423389236e+04, norm = 2.59861671763507e-01, diff = 5.55936159776193e-03
iter = 95, step = 1.88275267989155e-02, func = 2.26148403147967e+04, norm = 5.44815230553788e-01, diff = 7.91039550844166e-03
iter = 96, step = 1.78861504589697e-02, func = 2.26148401902945e+04, norm = 6.58376771006637e-01, diff = 5.23842092734865e-03
iter = 97, step = 1.78861504589697e-02, func = 2.26148420143568e+04, norm = 5.93316245148954e-01, diff = 1.21440380678199e-02
iter = 98, step = 1.69918429360212e-02, func = 2.26148425573348e+04, norm = 4.74595045182628e-01, diff = 8.03760799592825e-03
iter = 99, step = 1.61422507892202e-02, func = 2.26148426992075e+04, norm = 2.86836801040343e-01, diff = 5.22661029389788e-03
iter = 100, step = 1.53351382497591e-02, func = 2.26148431733809e+04, norm = 2.26960552913543e-01, diff = 8.68411750861846e-03
iter = 101, step = 1.45683813372712e-02, func = 2.26148437314938e+04, norm = 2.69047769038406e-01, diff = 4.83860150032486e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.261486e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 7, while k = 7 and n = 64
  UB from restricted IP = 180694 using centers : 4 51 11 15 24 35 17 
  UB from restricted IP = 60448.3 using centers : 44 36 28 16 34 33 0 
  UB from restricted IP = 54696.5 using centers : 44 2 28 17 34 33 0 
In iteration 0 of HessHeuristic, objective value of incumbent is = 54696.5
  UB from restricted IP = 175407 using centers : 37 43 11 14 59 50 41 
  UB from restricted IP = 47614.9 using centers : 44 0 33 34 55 16 10 
  UB from restricted IP = 39705.7 using centers : 4 0 33 34 50 16 10 
In iteration 1 of HessHeuristic, objective value of incumbent is = 39705.7
  UB from restricted IP = 81831.7 using centers : 46 51 10 23 19 0 63 
  UB from restricted IP = 39859.5 using centers : 4 16 55 34 19 0 33 
  UB from restricted IP = 39678.8 using centers : 4 16 50 34 19 0 33 
In iteration 2 of HessHeuristic, objective value of incumbent is = 39678.8
  UB from restricted IP = 251673 using centers : 13 5 62 39 26 23 25 
  UB from restricted IP = 48187.3 using centers : 16 0 33 2 1 34 44 
  UB from restricted IP = 38198.8 using centers : 16 0 33 50 1 34 57 
  UB from restricted IP = 36048.5 using centers : 16 0 33 50 28 34 5 
  UB from restricted IP = 35466.6 using centers : 16 0 33 55 28 34 5 
In iteration 3 of HessHeuristic, objective value of incumbent is = 35466.6
  UB from restricted IP = 138669 using centers : 12 61 18 43 16 11 31 
  UB from restricted IP = 38982.2 using centers : 0 39 34 28 16 33 19 
  UB from restricted IP = 35466.6 using centers : 0 55 34 28 16 33 5 
In iteration 4 of HessHeuristic, objective value of incumbent is = 35466.6
  UB from restricted IP = 136960 using centers : 50 46 24 1 40 27 8 
  UB from restricted IP = 36889.6 using centers : 50 57 33 0 16 34 28 
  UB from restricted IP = 36048.5 using centers : 50 5 33 0 16 34 28 
  UB from restricted IP = 35466.6 using centers : 55 5 33 0 16 34 28 
In iteration 5 of HessHeuristic, objective value of incumbent is = 35466.6
  UB from restricted IP = 123481 using centers : 43 0 59 30 44 33 3 
  UB from restricted IP = 41472.9 using centers : 28 0 50 16 1 33 34 
  UB from restricted IP = 36048.5 using centers : 28 0 50 16 5 33 34 
  UB from restricted IP = 35466.6 using centers : 28 0 55 16 5 33 34 
In iteration 6 of HessHeuristic, objective value of incumbent is = 35466.6
  UB from restricted IP = 73771.6 using centers : 60 27 12 63 22 2 33 
  UB from restricted IP = 35992.6 using centers : 16 17 28 0 5 55 33 
  UB from restricted IP = 35466.6 using centers : 16 34 28 0 5 55 33 
In iteration 7 of HessHeuristic, objective value of incumbent is = 35466.6
  UB from restricted IP = 206912 using centers : 58 63 17 53 23 38 9 
  UB from restricted IP = 40843.6 using centers : 33 0 16 55 34 28 43 
  UB from restricted IP = 36048.5 using centers : 33 0 16 50 34 28 5 
  UB from restricted IP = 35466.6 using centers : 33 0 16 55 34 28 5 
In iteration 8 of HessHeuristic, objective value of incumbent is = 35466.6
  UB from restricted IP = 158166 using centers : 43 11 30 13 9 2 18 
  UB from restricted IP = 49938.7 using centers : 28 0 16 33 44 55 34 
  UB from restricted IP = 42049.6 using centers : 28 0 16 33 4 50 34 
In iteration 9 of HessHeuristic, objective value of incumbent is = 35466.6
UB at end of HessHeuristic = 35466.6
UB of heuristicSolution = 35466.6
Best solution after 10 of HessHeuristic is 35466.64

Beginning LOCAL SEARCH with UB = 35466.6

Academic license - for non-commercial use only
# centers = 7, while k = 7 and n = 64
  checking neighbors of node 0
  checking neighbors of node 5
  checking neighbors of node 16
  checking neighbors of node 28
  checking neighbors of node 33
  checking neighbors of node 34
  checking neighbors of node 55
UB at end of local search heuristic = 35466.6
UB of heuristicSolution = 35466.6
Best solution after local search is 35466.64
Academic license - for non-commercial use only
# centers = 7, while k = 7 and n = 64
Optimize a model with 960 rows, 2702 columns and 8847 nonzeros
Variable types: 2254 continuous, 448 integer (448 binary)
Coefficient statistics:
  Matrix range     [1e+00, 6e+05]
  Objective range  [5e+00, 4e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

MIP start did not produce a new incumbent solution

Presolve removed 157 rows and 770 columns
Presolve time: 0.01s
Presolved: 803 rows, 1932 columns, 6510 nonzeros
Variable types: 1558 continuous, 374 integer (374 binary)

Root relaxation: infeasible, 472 iterations, 0.01 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 infeasible    0               - infeasible      -     -    0s

Explored 0 nodes (472 simplex iterations) in 0.03 seconds
Thread count was 8 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
UB at end of ContiguityHeuristic = 1e+20
UB of (contiguous) heuristicSolution = 35466.6

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 4096
Number of centers left            = 64
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 4096 variables
Optimize a model with 4289 rows, 4160 columns and 16640 nonzeros
Variable types: 64 continuous, 4096 integer (4096 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [8e-01, 1e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+00]

MIP start did not produce a new incumbent solution

Presolve removed 339 rows and 68 columns
Presolve time: 0.03s
Presolved: 3950 rows, 4092 columns, 17120 nonzeros
Variable types: 0 continuous, 4092 integer (4028 binary)

Concurrent LP optimizer: dual simplex and barrier
Showing barrier log only...

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 1.334e+05
 Factor NZ  : 3.366e+05 (roughly 6 MBytes of memory)
 Factor Ops : 2.973e+07 (less than 1 second per iteration)
 Threads    : 3

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   3.37124812e+07 -6.34399291e+05  4.12e+04 0.00e+00  1.06e+04     0s
   1   4.13382624e+06 -1.65861054e+06  4.85e+03 2.33e-13  1.37e+03     0s
   2   5.34438199e+05 -9.11316525e+05  3.95e+02 1.93e-13  1.76e+02     0s
   3   2.12589449e+05 -2.33446269e+05  5.84e+01 1.62e-13  4.06e+01     0s
   4   1.08461997e+05 -3.06946404e+04  9.64e+00 7.59e-14  1.16e+01     0s
   5   8.11003097e+04  5.75888287e+03  5.15e+00 4.26e-14  6.24e+00     0s
   6   6.17879699e+04  1.54014469e+04  2.58e+00 3.00e-14  3.83e+00     0s
   7   5.35413052e+04  2.14605675e+04  1.75e+00 2.86e-14  2.65e+00     0s

Barrier performed 7 iterations in 0.12 seconds
Barrier solve interrupted - model solved by another algorithm


Solved with dual simplex

Root relaxation: objective 2.982508e+04, 1338 iterations, 0.06 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 29825.0773    0   31          - 29825.0773      -     -    0s
Another try with MIP start
     0     0 32640.6971    0  132          - 32640.6971      -     -    0s
     0     0 32688.5174    0  129          - 32688.5174      -     -    0s
     0     0 33888.0468    0  100          - 33888.0468      -     -    0s
     0     0 34543.9602    0  143          - 34543.9602      -     -    0s
     0     0 35519.1547    0  145          - 35519.1547      -     -    0s
     0     0 35556.3128    0  143          - 35556.3128      -     -    0s
     0     0 35557.7373    0  144          - 35557.7373      -     -    0s
     0     0 35557.7512    0  146          - 35557.7512      -     -    0s
     0     0 35595.4052    0  159          - 35595.4052      -     -    0s
     0     0 35649.5757    0  155          - 35649.5757      -     -    0s
     0     0 35652.2481    0  156          - 35652.2481      -     -    0s
     0     0 35653.4813    0  160          - 35653.4813      -     -    0s
     0     0 35654.5086    0  160          - 35654.5086      -     -    0s
     0     0 35664.0417    0  153          - 35664.0417      -     -    0s
     0     0 36028.2044    0  153          - 36028.2044      -     -    0s
     0     0 36042.3755    0  163          - 36042.3755      -     -    0s
     0     0 36045.0565    0  164          - 36045.0565      -     -    0s
     0     0 36384.5552    0  209          - 36384.5552      -     -    0s
     0     0 36397.1979    0  212          - 36397.1979      -     -    0s
     0     0 36402.5074    0  212          - 36402.5074      -     -    0s
     0     0 36403.0604    0  212          - 36403.0604      -     -    0s
     0     0 36447.7721    0  183          - 36447.7721      -     -    0s
     0     0 36482.3082    0  154          - 36482.3082      -     -    0s
     0     0 36482.8687    0  153          - 36482.8687      -     -    0s
     0     0 36507.8434    0  217          - 36507.8434      -     -    0s
     0     0 36521.2502    0  230          - 36521.2502      -     -    0s
     0     0 36529.8506    0  235          - 36529.8506      -     -    0s
     0     0 36530.0543    0  236          - 36530.0543      -     -    0s
     0     0 36548.7806    0  222          - 36548.7806      -     -    0s
     0     0 36566.9315    0  231          - 36566.9315      -     -    0s
     0     0 36567.1268    0  231          - 36567.1268      -     -    0s
     0     0 36603.8360    0  200          - 36603.8360      -     -    0s
     0     0 36937.1346    0  180          - 36937.1346      -     -    0s
     0     0 36945.0156    0  181          - 36945.0156      -     -    0s
     0     0 36984.4320    0  187          - 36984.4320      -     -    0s
     0     0 37041.6964    0  169          - 37041.6964      -     -    0s
     0     0 37052.6571    0  157          - 37052.6571      -     -    0s
     0     0 37058.8134    0  172          - 37058.8134      -     -    0s
     0     0 37176.3444    0  183          - 37176.3444      -     -    0s
     0     0 37327.2626    0  216          - 37327.2626      -     -    1s
     0     0 37339.6810    0  213          - 37339.6810      -     -    1s
     0     0 37340.9924    0  212          - 37340.9924      -     -    1s
     0     0 37383.6895    0  198          - 37383.6895      -     -    1s
     0     0 37388.0563    0  204          - 37388.0563      -     -    1s
     0     0 37389.7525    0  203          - 37389.7525      -     -    1s
     0     0 37455.9197    0  186          - 37455.9197      -     -    1s
     0     0 37459.8228    0  182          - 37459.8228      -     -    1s
     0     0 37461.5575    0  190          - 37461.5575      -     -    1s
     0     0 37473.3589    0  185          - 37473.3589      -     -    1s
     0     0 37474.1833    0  183          - 37474.1833      -     -    1s
     0     0 37486.8819    0  197          - 37486.8819      -     -    1s
     0     0 37486.8819    0  197          - 37486.8819      -     -    1s
     0     2 37486.8819    0  197          - 37486.8819      -     -    1s
  1041   885 80396.9738   53  210          - 38521.3869      -  53.2    5s
  1099   925 44721.2623   17   77          - 39530.5291      -  56.1   10s
  1130   949 39855.2850   20  199          - 39604.0308      -  58.2   15s
  1956  1434 61330.7428   48   48          - 40039.2905      -  72.8   21s
  3511  2183 42019.8064   30   57          - 40328.3698      -  76.8   25s
  6518  4333 42304.8304   31   94          - 40844.2620      -  74.5   30s
  8709  5947 61894.0660   40   85          - 40902.2521      -  81.4   35s
  9830  6759 96517.5651   67   80          - 40911.2974      -  86.3   45s
 11543  7957 infeasible   66               - 41081.0905      -  87.8   50s
 14061  9750 infeasible   36               - 41212.2157      -  89.4   55s
 16850 11691 51356.5707   37   83          - 41380.3110      -  89.2   60s
 18840 12952 infeasible   53               - 41544.3631      -  91.9   65s
 22126 15239 62891.5136   62   18          - 41634.6335      -  91.8   71s
 24389 16712 68082.3092   77   23          - 41740.4494      -  91.5   75s
 27173 18754 47076.6770   60  105          - 41810.2039      -  92.5   81s
 29601 20350 44009.8268   27   80          - 41961.2337      -  93.2   85s
 31899 21876 58073.8940   55   86          - 41990.3826      -  93.3   90s
 34566 23630 43393.8857   41  147          - 42096.1691      -  94.6   96s
 36742 25051 57048.8075   52   47          - 42139.8753      -  95.8  101s
 38684 26353 57158.5756   40  110          - 42199.7036      -  97.6  106s
 40767 27732 42965.7714   30  110          - 42236.6323      -  98.7  111s
 42174 28660 45818.7471   37   74          - 42248.4192      -   100  115s
 44923 30492 59007.5318   71   52          - 42316.6211      -   100  120s
 47174 31982 63407.8106   37  125          - 42396.7574      -   101  125s
 49338 33461 93656.4012   72   15          - 42442.9343      -   102  131s
 52050 35317 52616.1235   42   96          - 42500.1452      -   102  136s
 54338 36779 51129.6407   37   69          - 42559.3317      -   103  141s
 55753 37735 47373.4039   35  132          - 42586.2873      -   103  145s
 57694 39017 infeasible   39               - 42626.3518      -   104  150s
 59734 40342 44817.0146   39  108          - 42663.3100      -   105  156s
 62089 41804 65453.2656  104   39          - 42726.9475      -   106  161s
 63629 42863 86283.0374   73   68          - 42754.8331      -   106  165s
 66350 44728 48573.5963   33  146          - 42805.9244      -   107  171s
 67775 45709 59709.4802   43   70          - 42837.2908      -   107  175s
 70491 47501 54969.8957   44   64          - 42869.7129      -   107  181s
 72962 49150 124458.405   72   40          - 42891.2758      -   108  186s
 74886 50432 87354.8511   73   29          - 42934.2698      -   108  190s
 77084 51823 71802.5870   53   53          - 42973.7350      -   108  195s
 79383 53313 52698.3970   35   78          - 43007.7084      -   109  201s
 81814 54960 46845.0773   34  114          - 43039.1159      -   109  207s
 83154 55875 49041.9415   44   66          - 43058.2707      -   109  210s
 85478 57397 51750.5088   32   60          - 43101.1186      -   110  216s
 86702 58269 121506.647   97   35          - 43119.9165      -   110  220s
 88737 59610 92191.2619   40   67          - 43138.9252      -   111  226s
 89936 60399 infeasible   41               - 43163.5838      -   111  230s
 91433 61351 103945.142   49  103          - 43186.6660      -   112  235s
 93456 62675 48711.7230   34   44          - 43216.8210      -   113  242s
 95506 64075 48695.5350   45   66          - 43246.2223      -   112  246s
 96761 64856 110294.619   61   73          - 43255.9882      -   113  250s
 97942 65503 58948.2001   52   80          - 43271.5430      -   114  255s
 99677 66539 55581.6591   56   34          - 43308.4007      -   115  262s
 101148 67391 47001.4913   44   83          - 43355.2004      -   115  266s
 102694 68385 74994.0969   53   97          - 43375.8028      -   116  271s
 104164 69334 57551.2214   42   58          - 43394.2649      -   116  276s
 105694 70297 82909.2116   66   63          - 43415.3696      -   117  281s
 107335 71253 52664.6773   40   61          - 43444.7587      -   117  286s
 108643 72055 59026.3520   50  115          - 43476.6785      -   118  291s
 109951 72869 46940.4693   39  110          - 43503.5913      -   119  296s
 111386 73765 infeasible   43               - 43533.6678      -   119  302s
 112945 74720 58123.1898   52   64          - 43556.4119      -   120  307s
 114617 75844 58557.2915   42   89          - 43579.7381      -   120  312s
 115205 76146 infeasible   66               - 43596.6353      -   120  315s
 116562 76919 51798.3062   42   85          - 43622.1653      -   121  320s
 118129 77958 59799.5479   42   65          - 43640.6779      -   122  326s
 119846 79031 50967.6982   39   85          - 43657.3852      -   122  331s
 121629 80060 47715.3656   46   88          - 43680.6438      -   122  336s
 122787 80670 72055.5516   38  124          - 43695.8967      -   123  342s
 123448 81104 100054.601   77   68          - 43700.5332      -   123  345s
 124729 81848 48442.7814   40   80          - 43723.3888      -   124  350s
 126127 82613 53035.0028   39  135          - 43737.1945      -   125  356s
 127659 83430 65987.7142   40  115          - 43756.6170      -   126  362s
 128334 83883 53380.0862   54  103          - 43763.7538      -   126  365s
 129929 84799 43811.0339   35   62          - 43786.5472      -   126  371s
 131431 85708 48346.6818   40   79          - 43794.2047      -   127  377s
 132179 86203 124929.714   63   39          - 43797.5305      -   128  380s
 133689 87122 47133.4263   38  121          - 43808.4812      -   128  386s
 134677 87631 50080.6450   38   99          - 43819.5559      -   128  390s
 136020 88386 61051.7648   45   70          - 43837.6800      -   129  396s
 137729 89284 92572.4664   56   39          - 43855.2914      -   129  402s
 138496 89689 infeasible   46               - 43866.1890      -   130  405s
 140183 90611 50288.7064   45  127          - 43888.4568      -   130  411s
 141936 91676 48286.3744   34  107          - 43913.0567      -   131  417s
 142784 92209 105552.573   67  115          - 43917.2037      -   131  420s
 144226 92933 60831.7232   37   81          - 43935.3125      -   131  426s
 145829 93911 94699.7850   57   76          - 43948.5367      -   132  433s
 146820 94522 48728.6020   37   78          - 43955.9855      -   132  436s
 148163 95308 65603.7825   47  107          - 43971.6836      -   132  442s
 148876 95732 46933.1596   35   89          - 43981.1319      -   133  445s
 150125 96432 infeasible   52               - 44001.8927      -   133  451s
 151723 97439 100968.178   58   99          - 44016.8019      -   134  457s
 152747 98037 49938.5356   46   70          - 44022.7005      -   134  461s
 154411 99017 56262.0336   41   72          - 44039.4348      -   134  467s
 155186 99411 infeasible   46               - 44049.9305      -   135  470s
 156537 100152 58756.5580   69   76          - 44068.3457      -   135  476s
 157192 100472 49001.6855   48  122          - 44078.1237      -   135  480s
 158969 101510 infeasible   43               - 44095.9858      -   136  486s
 160464 102326 infeasible   60               - 44106.6907      -   136  493s
 161367 102776 62324.5970   50   88          - 44117.1506      -   136  496s
 162843 103585 infeasible   47               - 44124.7300      -   137  502s
 163662 104043 infeasible   46               - 44128.4029      -   137  506s
 165279 104977 59471.5106   55  115          - 44148.8991      -   137  512s
 166185 105445 55367.6349   36  147          - 44157.6770      -   138  516s
 167671 106353 50042.5033   41   61          - 44175.5996      -   138  522s
 168421 106752 45312.6984   35  111          - 44184.3967      -   138  525s
 169207 107177 infeasible   42               - 44189.4456      -   138  530s
 170715 108012 51584.0709   41   94          - 44206.1332      -   139  539s
 171661 108568 54266.2590   43  108          - 44221.2118      -   139  542s
 172396 108909 infeasible   57               - 44232.3638      -   139  546s
 173680 109606 44475.3147   41   91          - 44252.2221      -   140  552s
 174471 110043 68146.0945   53  103          - 44258.1982      -   140  556s
 176149 110983 80095.4875   54   91          - 44293.4804      -   140  563s
 176911 111408 57980.2866   53   64          - 44304.7385      -   141  566s
 177839 111934 74170.8363   40   72          - 44316.7388      -   141  570s
 179491 112847 infeasible   43               - 44334.8470      -   141  576s
 180580 113601 45079.3725   41  138          - 44346.7242      -   141  580s
 182133 114509 54351.1514   58  157          - 44361.1143      -   141  586s
 182813 114846 77551.1111   53   88          - 44368.0023      -   142  590s
 184572 115819 50005.9057   35  109          - 44383.1336      -   142  596s
 185435 116252 86276.3538   55  119          - 44390.1261      -   142  600s
 187176 117256 59381.9983   44  137          - 44408.1430      -   142  606s
 188668 118082 infeasible   77               - 44420.9007      -   143  612s
 189520 118572 48486.1947   40   68          - 44434.1171      -   143  616s
 190854 119260 infeasible   47               - 44440.0135      -   143  622s
 191229 119465 infeasible   38               - 44453.5850      -   143  626s
 192746 120385 77364.7244   56   42          - 44476.5318      -   144  632s
 193402 120718 50727.3283   35   66          - 44490.8110      -   144  636s
 194839 121464 62667.1815   43  102          - 44508.3267      -   144  643s
 195511 121855 49529.1308   37   84          - 44513.9457      -   145  647s
 196193 122238 60118.3418   36  113          - 44526.3994      -   145  650s
 197302 122765 infeasible   50               - 44542.1082      -   145  658s
 198398 123346 63098.1297   51   79          - 44551.8371      -   146  662s
 199244 123867 57246.1699   39   83          - 44561.0141      -   146  665s
 200618 124632 53914.7515   40   83          - 44576.5664      -   146  673s
 201440 125035 infeasible   51               - 44588.3490      -   146  676s
 202330 125501 67476.7106   50   67          - 44597.6332      -   147  680s
 203929 126331 90884.2784   63   53          - 44614.5179      -   147  688s
 204642 126744 infeasible   41               - 44623.0776      -   147  691s
 205197 127033 56349.1902   44   90          - 44628.3938      -   148  695s
 206705 127803 89639.0583   50  131          - 44646.1786      -   148  703s
 207389 128211 56017.9448   43   71          - 44648.7127      -   148  706s
 208344 128766 62136.2459   53   76          - 44660.8702      -   148  710s
 210117 129758 67086.8211   56   90          - 44684.8814      -   149  718s
 210946 130195 53749.6238   37  104          - 44694.3024      -   149  722s
 211722 130610 136740.645   96  100          - 44701.2553      -   149  725s
 213836 131765 59740.1948   40   90          - 44720.8509      -   149  733s
 214950 132444 58813.3670   37   85          - 44725.0774      -   149  736s
 215848 132966 94331.7319   60   44          - 44731.2088      -   149  740s
 217715 134006 infeasible   50               - 44754.0564      -   149  747s
 218682 134536 69424.0695   35  113          - 44765.4031      -   149  750s
 220482 135627 73899.3777   57   80          - 44786.4421      -   149  757s
 221155 135963 50556.7325   42   92          - 44797.3856      -   150  760s
 222793 136881 89124.0992   52   68          - 44811.7576      -   150  767s
 223568 137334 infeasible  116               - 44819.2614      -   150  770s
 225267 138251 46313.4023   54  113          - 44833.8989      -   150  777s
 225950 138609 66703.6419   54  118          - 44835.2414      -   150  780s
 227107 139171 infeasible   50               - 44848.2904      -   150  787s
 227886 139525 56293.1980   37   83          - 44855.6678      -   151  790s
 229363 140287 100160.268   57   82          - 44867.2601      -   151  797s
 230217 140769 65803.4808   48   78          - 44878.8289      -   151  801s
 232072 141778 47345.3559   40  101          - 44893.9245      -   151  808s
 232723 142118 62117.3092   41   84          - 44897.6615      -   151  811s
 233421 142517 49141.4099   48  100          - 44904.8895      -   152  815s
 234911 143208 64642.6995   39   79          - 44920.4726      -   152  822s
 235764 143626 56491.5558   53   70          - 44923.1616      -   152  825s
 237394 144490 46809.0870   35   93          - 44936.0376      -   152  832s
 238067 144869 77388.4569   70  137          - 44940.7225      -   152  836s
 238833 145306 45246.9370   48  138          - 44945.3494      -   153  840s
 240306 146100 88388.5035   58  138          - 44958.7164      -   153  847s
 241008 146465 61074.7262   39   82          - 44963.3652      -   153  851s
 242515 147360 89091.4335   53  115          - 44973.5814      -   153  858s
 243195 147687 51394.7937   48  144          - 44980.6077      -   154  862s
 243949 148157 78464.3414   39   95          - 44984.9183      -   154  865s
 245278 148802 infeasible   42               - 45000.5127      -   154  873s
 246330 149357 96145.6373   50   98          - 45007.2884      -   154  877s
 246996 149733 63361.2119   57   62          - 45014.0885      -   154  880s
 248521 150548 70290.5380   76   80          - 45023.9926      -   155  888s
 249324 150986 76315.3044   58   43          - 45027.9951      -   155  892s
 249986 151295 74324.7872   49   78          - 45036.5995      -   155  895s
 251164 151840 54986.1091   51  151          - 45045.9821      -   156  903s
 251842 152215 89442.8621   66  113          - 45053.5210      -   156  907s
 252754 152702 52695.3039   41   65          - 45059.5042      -   156  911s
 253446 153035 47434.7937   34   86          - 45068.7659      -   156  915s
 255139 153886 66377.2035   41   79          - 45081.4005      -   157  923s
 255788 154188 54542.5590   56   66          - 45090.4515      -   157  927s
 256359 154482 60778.8192   54   82          - 45094.2359      -   157  931s
 257178 154833 58604.8411   65   89          - 45102.1355      -   157  936s
 258016 155263 51921.2702   36  104          - 45107.3627      -   157  940s
 259598 156062 60979.3012   41   67          - 45118.8066      -   158  948s
 260380 156449 56625.1845   42  105          - 45126.8685      -   158  952s
 261202 156948 53825.3238   51   75          - 45132.2311      -   158  956s
 262187 157446 53415.9648   65  125          - 45140.9503      -   158  960s
 263767 158293 94842.7725   70   82          - 45148.7651      -   158  968s
 264412 158575 97120.9950   64   66          - 45150.9577      -   159  973s
 265193 158965 48745.0151   41   85          - 45160.8287      -   159  977s
 265832 159286 64287.0777   54   76          - 45166.8067      -   159  981s
 266583 159637 50655.8751   50  123          - 45171.6243      -   159  985s
 268145 160408 62118.4459   66  103          - 45187.3964      -   160  993s
 268835 160767 79443.3574   45   73          - 45195.1891      -   160  998s
 269673 161205 55263.6172   45   84          - 45201.5394      -   160 1002s
 270665 161750 58662.3362   40   90          - 45206.2273      -   160 1006s
 271385 162135 69758.8826   56   91          - 45208.3617      -   160 1010s
 272991 162906 51508.8964   35   79          - 45220.2544      -   161 1019s
 273677 163250 54572.9078   49  112          - 45227.7442      -   161 1023s
 274465 163659 86089.3520   44   78          - 45229.1019      -   161 1027s
 275231 164020 infeasible   56               - 45234.8921      -   161 1031s
 276113 164390 infeasible   66               - 45240.6533      -   161 1036s
 276786 164714 53077.6603   45  118          - 45245.7590      -   162 1040s
 278845 165918 54120.4784   43  101          - 45257.4067      -   162 1048s
 279487 166276 49815.3656   50   46          - 45260.8787      -   162 1053s
 280400 166765 96785.6727   75  121          - 45263.7999      -   162 1057s
 281477 167344 infeasible   44               - 45272.4010      -   162 1061s
 282167 167708 49087.8693   38   83          - 45279.2763      -   162 1065s
 283630 168450 85770.2195   77   65          - 45288.4983      -   163 1073s
 284573 168918 55053.6461   53   79          - 45297.7485      -   163 1077s
 285362 169272 61600.1684   41  151          - 45303.4397      -   163 1081s
 286107 169674 51173.8585   45  132          - 45304.7891      -   163 1085s
 286743 169954 51480.7699   43   79          - 45304.7891      -   163 1090s
 288135 170657 69813.0433   51   91          - 45312.5732      -   164 1098s
 288828 170986 59766.4320   49   98          - 45315.2901      -   164 1103s
 289542 171366 infeasible   73               - 45321.3666      -   164 1107s
 290237 171712 61995.8331   36   76          - 45327.0927      -   164 1111s
 291287 172328 90001.2942   68   69          - 45334.7407      -   164 1116s
 292468 173020 infeasible   96               - 45339.4177      -   164 1120s
 294300 174046 61476.7681   63   53          - 45347.4902      -   164 1128s
 295012 174463 infeasible   50               - 45351.0707      -   165 1132s
 295659 174810 124286.511   48   55          - 45353.8881      -   165 1136s
 296486 175262 infeasible   53               - 45360.0201      -   165 1140s
 298029 176065 63094.7752   60   94          - 45370.5821      -   165 1148s
 298812 176434 infeasible   39               - 45377.4914      -   165 1153s
 299703 176902 59713.8696   42  132          - 45386.1225      -   165 1157s
 300371 177205 infeasible   68               - 45388.5596      -   166 1161s
 301180 177557 47755.6964   36  144          - 45396.5311      -   166 1165s
 302661 178292 infeasible   67               - 45410.5140      -   166 1174s
 303540 178733 69788.0832   40   62          - 45417.6650      -   166 1178s
 304519 179279 47687.3888   34  129          - 45423.3480      -   166 1182s
 305238 179718 infeasible   36               - 45426.6849      -   166 1186s
 306071 180159 71913.4630   58   83          - 45434.2800      -   166 1190s
 306761 180516 48978.6325   48   96          - 45441.5714      -   167 1195s
 308227 181191 51846.7691   36   81          - 45456.3416      -   167 1203s
 309095 181673 56572.4742   33   81          - 45464.8969      -   167 1207s
 309907 182125 60702.2903   56  106          - 45469.1621      -   167 1211s
 310856 182615 66593.0525   67   98          - 45479.9079      -   167 1216s
 312026 183324 57879.6725   36  107          - 45484.7669      -   167 1220s
 313278 183896 65333.9405   44   74          - 45500.3309      -   168 1228s
 314362 184529 48112.8051   35   93          - 45509.0247      -   168 1232s
 315111 184952 55603.3243   35  105          - 45516.9172      -   168 1236s
 315886 185368 62915.1118   47  109          - 45520.0638      -   168 1240s
 317234 186043 47977.2717   42  123          - 45532.0822      -   168 1248s
 318022 186456 68538.6258   43   78          - 45540.0190      -   168 1253s
 318789 186821 infeasible   42               - 45547.9271      -   168 1257s
 319527 187208 infeasible   53               - 45553.9529      -   168 1261s
 320456 187688 61819.9777   41  117          - 45560.6160      -   169 1265s
 321794 188356 infeasible   43               - 45567.8898      -   169 1273s
 322574 188727 99548.3824   48   78          - 45573.2861      -   169 1278s
 323386 189129 48722.3175   56  123          - 45578.2511      -   169 1282s
 324137 189494 48952.5903   43  107          - 45584.7107      -   169 1286s
 325146 190059 80830.3697   47   85          - 45588.0905      -   169 1290s
 325973 190574 89404.9346   51   78          - 45594.3163      -   169 1295s
 327700 191443 66692.1582   40   61          - 45606.5891      -   170 1303s
 328512 191884 74019.8060   43   91          - 45615.3455      -   170 1307s
 329179 192245 infeasible   70               - 45624.0012      -   170 1312s
 330116 192805 infeasible  109               - 45624.0012      -   170 1316s
 331142 193401 infeasible   51               - 45627.9837      -   170 1320s
 332630 194156 infeasible   52               - 45638.0080      -   170 1328s
 333351 194485 111576.197   50   38          - 45641.2805      -   170 1332s
 334001 194832 58740.4240   55   64          - 45646.4002      -   170 1337s
 335023 195367 infeasible   47               - 45649.2569      -   170 1341s
 335810 195788 65351.2214   72  103          - 45653.8849      -   171 1345s
 337317 196573 69446.5963   48   80          - 45664.5314      -   171 1353s
 338158 196960 56622.5758   46   74          - 45671.3597      -   171 1357s
 338838 197316 infeasible   67               - 45675.2252      -   171 1362s
 339595 197668 58164.0006   56   83          - 45680.9552      -   171 1366s
 340384 198127 59064.3902   36   72          - 45687.5731      -   171 1370s
 341941 198961 infeasible   35               - 45696.9578      -   171 1379s
 342844 199495 60088.8735   64   67          - 45699.4019      -   172 1383s
 343684 200002 80060.6619   50   60          - 45705.7362      -   172 1387s
 344484 200457 52238.5862   38   79          - 45709.1590      -   172 1392s
 345378 200947 67382.1450   61   94          - 45714.2725      -   172 1396s
 346092 201344 infeasible   49               - 45720.2790      -   172 1400s
 347507 202042 77354.8404   58  126          - 45726.7706      -   172 1408s
 348362 202498 infeasible   36               - 45733.6419      -   172 1413s
 349174 202949 infeasible   47               - 45737.5192      -   172 1417s
 349913 203341 115608.337   63   76          - 45741.4467      -   173 1421s
 350807 203862 57151.8588   47   70          - 45743.8736      -   173 1425s
 351396 204142 46738.0177   44  149          - 45749.4959      -   173 1430s
 352831 204866 49480.9354   36   99          - 45760.8178      -   173 1439s
 353546 205241 46205.8179   35  135          - 45764.1688      -   173 1443s
 354359 205660 65539.7246   53  110          - 45770.7896      -   173 1447s
 355290 206152 55036.1215   48   92          - 45775.7946      -   173 1452s
 356072 206491 78923.2581   47   85          - 45779.8171      -   173 1456s
 356642 206732 69720.4841   72   63          - 45785.3255      -   174 1461s
 357538 207187 62280.8343   43  137          - 45794.1370      -   174 1465s
 358144 207515 68053.3700   43   89          - 45796.3137      -   174 1470s
 358865 207855 49426.4132   48  151          - 45804.4643      -   174 1475s
 360534 208698 91346.9360   49   82          - 45809.9223      -   174 1484s
 361332 209080 infeasible   55               - 45816.4444      -   174 1488s
 362111 209540 48037.1496   35  100          - 45822.1149      -   174 1493s
 362954 209942 55771.0492   45   74          - 45825.7444      -   175 1498s
 363810 210382 58555.6857   36   91          - 45829.1650      -   175 1502s
 364493 210740 74869.3896   47  129          - 45832.9459      -   175 1507s
 365380 211186 54812.4048   68   90          - 45840.3727      -   175 1511s
 366209 211674 144518.024   72   54          - 45844.2101      -   175 1516s
 366921 212058 66056.8641   50   86          - 45850.6125      -   175 1520s
 367732 212485 78452.5705   49   61          - 45855.4604      -   175 1525s
 368643 212983 51701.8198   45   73          - 45862.3807      -   175 1530s
 370147 213795 infeasible   59               - 45871.4400      -   176 1539s
 371003 214199 68371.6103   55   92          - 45876.4099      -   176 1544s
 371716 214524 82968.2477   60   59          - 45881.0653      -   176 1549s
 372471 214849 infeasible   59               - 45883.0762      -   176 1553s
 373476 215344 73144.5118   66   69          - 45885.4362      -   176 1560s
 374393 215879 70410.5851   70  132          - 45890.8344      -   176 1566s
 375183 216281 55787.1175   43   64          - 45891.0281      -   176 1572s
 376062 216749 64947.2777   64   60          - 45899.0213      -   176 1579s
 376825 217097 infeasible   41               - 45903.2339      -   176 1585s
 377504 217423 82139.7608   47   67          - 45906.7199      -   176 1592s
 378463 217918 69462.0137   51  201          - 45911.3241      -   177 1596s
 379262 218294 60008.6708   46   67          - 45918.6847      -   177 1601s
 379958 218642 57900.2839   54   89          - 45920.1934      -   177 1605s
 381504 219346 46139.1422   34  148          - 45931.2559      -   177 1614s
 382351 219812 62484.2690   60  110          - 45934.3888      -   177 1619s
 383283 220328 62351.8689   57  103          - 45937.7099      -   177 1623s
 384012 220653 116362.506   69   81          - 45945.0100      -   177 1628s
 384875 221076 59748.4380   54  101          - 45947.8265      -   177 1632s
 385541 221460 50868.0673   32   94          - 45948.0993      -   178 1637s
 386380 221845 infeasible   56               - 45956.1271      -   178 1641s
 387212 222304 63185.4249   59  120          - 45961.0503      -   178 1646s
 388158 222778 infeasible   42               - 45964.7037      -   178 1650s
 388927 223185 infeasible   53               - 45968.4081      -   178 1655s
 390501 223967 70939.7510   53  106          - 45980.7808      -   178 1663s
 391199 224351 81283.5110   48   93          - 45986.8538      -   178 1668s
 391937 224727 70995.6811   74   94          - 45991.1945      -   178 1672s
 392702 225155 75008.8046   61   97          - 45995.4842      -   178 1677s
 393515 225627 52230.6092   43   94          - 45999.2969      -   178 1682s
 394368 226031 55356.7714   37   75          - 46005.2361      -   179 1686s
 395203 226445 65482.1355   38   88          - 46009.2452      -   179 1691s
 395979 226777 61514.9193   40  113          - 46014.5274      -   179 1696s
 396647 227041 66477.0136   50   89          - 46020.9819      -   179 1700s
 397461 227437 64432.3112   45   82          - 46028.1170      -   179 1705s
 398194 227755 86708.1772   50   88          - 46032.9368      -   179 1710s
 399560 228372 infeasible   45               - 46041.5595      -   179 1719s
 400365 228762 59175.2592   44   90          - 46045.4563      -   180 1724s
 401097 229098 51537.6595   45   73          - 46047.1600      -   180 1729s
 401751 229403 75633.6283   44   73          - 46052.9617      -   180 1734s
 402730 229942 63662.9714   54   54          - 46055.5988      -   180 1739s
 403639 230387 infeasible   49               - 46059.6744      -   180 1743s
 404347 230758 63879.9204   35  150          - 46062.4320      -   180 1749s
 405075 231063 148401.970   65   64          - 46065.3475      -   180 1756s
 405859 231401 55500.3366   39   84          - 46072.0213      -   180 1763s
 406502 231711 89100.1326   61  103          - 46077.3122      -   181 1770s
 407249 232101 infeasible   53               - 46082.1625      -   181 1775s
 409093 233150 56197.3223   46   90          - 46090.4446      -   181 1784s
 409853 233520 infeasible   46               - 46093.5440      -   181 1789s
 410499 233833 107354.179   66   72          - 46099.1889      -   181 1794s
 411379 234283 136596.465   61   97          - 46103.0842      -   181 1799s
 412350 234836 79438.0235   55   61          - 46106.6316      -   181 1804s
 413302 235292 infeasible   53               - 46112.8456      -   181 1809s
 414093 235659 57430.4932   53   78          - 46120.0207      -   181 1814s
 414903 236027 50678.6713   43   89          - 46124.8105      -   182 1819s
 415680 236508 57826.1822   36   87          - 46128.5330      -   182 1824s
 416548 236946 52963.8621   42  112          - 46131.3993      -   182 1830s
 417197 237236 infeasible   42               - 46134.9243      -   182 1837s
 418057 237755 65247.0195   55   82          - 46142.3339      -   182 1844s
 418967 238207 68686.2307   67   97          - 46145.4375      -   182 1851s
 419752 238551 57329.4144   41  109          - 46146.4502      -   182 1856s
 420327 238777 57557.0341   34   68          - 46152.5953      -   182 1861s
 421166 239221 92959.9925   56   70          - 46158.0413      -   182 1866s
 421993 239664 47533.8055   39  157          - 46162.6520      -   182 1871s
 422792 240047 103665.655   71   71          - 46166.9170      -   183 1876s
 423607 240446 86363.2430   51   53          - 46170.0983      -   183 1881s
 424338 240824 62592.8776   38   71          - 46174.2605      -   183 1886s
 425109 241253 infeasible   62               - 46176.1583      -   183 1890s
 425863 241615 103405.412   83   87          - 46180.3554      -   183 1895s
 426593 241919 55607.3142   43   99          - 46185.0471      -   183 1900s
 427398 242319 67777.7749   49   71          - 46193.1485      -   183 1905s
 428181 242728 81632.8114   56   85          - 46195.6750      -   183 1910s
 428870 243011 57236.7270   34   74          - 46200.3411      -   183 1915s
 429719 243438 56166.0937   46   83          - 46205.4255      -   184 1920s
 430558 243894 69564.4904   53   91          - 46209.2701      -   184 1925s
 431368 244257 47916.4919   42   65          - 46212.7126      -   184 1930s
 432165 244691 infeasible   37               - 46216.9952      -   184 1935s
 432894 245071 64201.9961   57   87          - 46220.1691      -   184 1940s
 433675 245429 74218.2465   63   89          - 46224.8897      -   184 1945s
 434472 245817 46749.5242   30  130          - 46231.8680      -   184 1950s
 435284 246233 87972.8794   72   73          - 46234.0218      -   184 1955s
 436197 246706 56119.5513   44  114          - 46242.4062      -   184 1960s
 436940 247079 infeasible   43               - 46245.7796      -   184 1965s
 437856 247499 infeasible   65               - 46248.9445      -   185 1970s
 438694 247891 infeasible   43               - 46253.9728      -   185 1975s
 439560 248365 100643.650   84   97          - 46258.5783      -   185 1980s
 440297 248708 61865.4346   50   72          - 46263.4441      -   185 1985s
 441236 249206 77424.4465   65   79          - 46266.9975      -   185 1990s
 442446 249860 56497.8105   50  100          - 46269.2824      -   185 1995s
 443577 250534 49477.9281   35  161          - 46271.0954      -   185 2000s
 445367 251489 77907.0559   54   64          - 46280.2508      -   185 2009s
 446228 251880 infeasible   56               - 46283.5314      -   185 2013s
 446854 252138 52592.6705   35   76          - 46284.4964      -   185 2018s
 447791 252536 83055.3256   49   41          - 46290.4021      -   185 2023s
 448666 252889 infeasible   55               - 46296.4774      -   185 2027s
 449584 253359 50991.0226   50   81          - 46304.1633      -   185 2032s
 450402 253710 65063.9725   43   81          - 46307.8829      -   185 2037s
 451443 254236 55085.4190   42   64          - 46312.9077      -   185 2041s
 452145 254614 61949.2425   39  113          - 46316.4264      -   185 2045s
 452879 254948 74570.4810   50   66          - 46319.8579      -   185 2050s
 454352 255760 46964.6536   32   91          - 46327.4484      -   185 2058s
 455136 256160 64614.8531   42   76          - 46328.3770      -   186 2063s
 455939 256599 100941.006   75   90          - 46333.5484      -   186 2067s
 456745 256931 infeasible   91               - 46338.3275      -   186 2073s
 457546 257277 56238.8999   39  144          - 46343.3796      -   186 2079s
 458225 257578 56068.7648   48   85          - 46348.5522      -   186 2086s
 458914 258006 59298.9322   45   88          - 46351.2990      -   186 2092s
 459617 258335 infeasible   51               - 46354.5189      -   186 2099s
 460473 258741 98885.0406   46   69          - 46356.8747      -   186 2105s
 461169 259058 47700.5122   42   92          - 46362.6547      -   186 2112s
 462055 259448 50385.3882   39  113          - 46368.3756      -   186 2118s
 463088 260011 56339.9592   43   78          - 46371.5107      -   186 2122s
 463855 260352 70021.0684   46   91          - 46376.8614      -   186 2127s
 464621 260758 77121.4943   49  119          - 46379.1780      -   186 2132s
 465583 261329 59982.0309   49   57          - 46382.7385      -   186 2136s
 466333 261726 infeasible   41               - 46386.9496      -   186 2141s
 467272 262214 infeasible   61               - 46391.9780      -   186 2145s
 468172 262702 66517.4477   52   94          - 46396.0255      -   186 2150s
 469820 263597 53933.8060   54   83          - 46404.1208      -   186 2159s
 470588 263977 105245.455   63   71          - 46406.2600      -   186 2163s
 471256 264297 infeasible   45               - 46408.6192      -   187 2168s
 472164 264775 infeasible   51               - 46412.7392      -   187 2172s
 472895 265101 66242.3058   40   87          - 46418.1705      -   187 2177s
 473603 265395 62610.3703   40   68          - 46420.9610      -   187 2181s
 474447 265788 60840.9813   39   81          - 46423.5339      -   187 2186s
 475169 266217 59814.2985   43  109          - 46425.6110      -   187 2190s
 476077 266684 47792.9819   39   74          - 46431.0771      -   187 2195s
 476789 267094 54429.7691   43  100          - 46434.6652      -   187 2202s
 477515 267444 54898.4792   45   66          - 46438.4962      -   187 2208s
 478556 267997 49847.6263   34   89          - 46444.7474      -   187 2214s
 479207 268279 55003.5640   40   94          - 46447.2836      -   187 2221s
 479939 268595 98468.6503   48   98          - 46449.7722      -   187 2227s
 480813 269023 64094.2527   37  117          - 46453.5782      -   187 2234s
 481719 269479 68181.3120   95   62          - 46456.0697      -   187 2238s
 482501 269848 65529.5557   51   67          - 46460.4064      -   187 2243s
 483304 270254 infeasible   43               - 46463.6473      -   187 2248s
 484256 270686 70069.3982   52   76          - 46468.6001      -   187 2252s
 484911 270988 53832.6976   47   75          - 46472.1904      -   187 2256s
 485720 271402 60332.3103   45   88          - 46474.3181      -   187 2261s
 486544 271798 63036.9316   59   52          - 46477.3076      -   188 2266s
 487394 272134 infeasible   57               - 46481.8445      -   188 2271s
 488277 272580 65418.7911   38  130          - 46486.8339      -   188 2275s
 489245 273045 51196.0192   45   82          - 46490.9353      -   188 2280s
 490933 273993 90797.7784   54   93          - 46497.5233      -   188 2288s
 491771 274410 58151.3799   60   89          - 46501.9655      -   188 2293s
 492706 274897 53945.3098   35   77          - 46504.6529      -   188 2297s
 493636 275375 155237.505   61   70          - 46508.0971      -   188 2302s
 494690 275895 47697.9882   38   96          - 46514.1028      -   188 2306s
 495176 276156 74359.8307   56   81          - 46516.2516      -   188 2311s
 496048 276534 63465.0079   55   98          - 46518.2124      -   188 2315s
 498264 277666 133483.937   37   91          - 46532.4521      -   187 2323s
 499254 278185 71960.9053   49   85          - 46533.9701      -   187 2327s
 500033 278563 49103.6519   35   82          - 46536.3073      -   187 2331s
 500838 278903 71439.6186   51  121          - 46539.3656      -   187 2335s
 502890 279948 59371.9354   50   73          - 46553.4042      -   187 2343s
 503875 280500 infeasible   53               - 46557.4795      -   187 2347s
 504472 280798 47148.0752   35   77          - 46560.2633      -   187 2351s
 506167 281780 56677.1184   44   93          - 46566.7376      -   187 2358s
 507115 282244 74142.9235   58   98          - 46570.3523      -   187 2362s
 508102 282814 49931.4136   36   90          - 46575.7970      -   187 2366s
 508839 283232 infeasible   68               - 46577.7209      -   187 2370s
 510509 284144 infeasible   38               - 46586.3332      -   187 2377s
 511390 284556 111498.035   49   56          - 46588.4650      -   187 2380s
 512967 285448 75318.1379   61  110          - 46592.6512      -   187 2387s
 513471 285634 65379.6598   54   79          - 46598.9312      -   187 2391s
 514478 286100 58082.1637   41   87          - 46606.5584      -   187 2395s
 516233 286981 49518.3615   42   99          - 46613.5048      -   186 2402s
 517140 287484 58241.5341   44   79          - 46616.1705      -   186 2406s
 517831 287852 66368.3297   50   85          - 46620.0996      -   186 2410s
 519754 288721 infeasible   41               - 46629.0272      -   186 2417s
 520625 289195 51985.9973   37   69          - 46633.3972      -   186 2420s
 522242 290029 55353.0074   44   59          - 46641.9920      -   186 2428s
 523138 290431 80677.5603   61  145          - 46645.0720      -   186 2431s
 523967 290911 60209.6436   57  150          - 46648.2266      -   186 2435s
 525377 291514 47277.4357   38  101          - 46654.8761      -   186 2442s
 526235 291924 76049.2937   57   73          - 46657.9167      -   186 2446s
 528089 292854 61631.4803   57   80          - 46665.6146      -   186 2454s
 528561 293070 84647.4788   45   94          - 46667.3093      -   186 2457s
 529442 293505 57187.9192   50  128          - 46670.1850      -   186 2461s
 530277 293959 59968.0955   37   73          - 46674.1213      -   186 2465s
 532075 294819 48127.1061   47   99          - 46680.9632      -   186 2472s
 532600 295085 100390.969   92   44          - 46681.1024      -   186 2475s
 534214 295901 infeasible   57               - 46690.5171      -   185 2483s
 535202 296388 71546.3337   46   52          - 46694.0836      -   185 2486s
 536310 296932 48323.7924   41   87          - 46700.6687      -   185 2490s
 537851 297697 infeasible   66               - 46705.4644      -   185 2497s
 538628 298059 60188.8191   47   90          - 46707.5789      -   185 2500s
 540141 298808 85786.1732   58   97          - 46712.6934      -   185 2507s
 540985 299208 87500.0990   71   68          - 46718.8831      -   185 2510s
 542713 300145 60068.9670   53  125          - 46725.9096      -   185 2518s
 543513 300552 56532.0075   41   76          - 46727.9751      -   185 2521s
 544939 301317 46924.9192   40  139          - 46736.5809      -   185 2528s
 545793 301782 55890.0703   34  161          - 46738.7438      -   185 2532s
 546757 302294 51307.6397   46  112          - 46740.6572      -   185 2535s
 548687 303282 54796.1325   46   83          - 46747.3943      -   184 2542s
 549239 303584 infeasible   67               - 46749.7272      -   184 2546s
 550937 304407 55689.2163   52  223          - 46758.3128      -   184 2552s
 551577 304743 68237.8421   42   99          - 46760.0189      -   184 2556s
 553178 305551 54773.8526   44   90          - 46766.4880      -   184 2563s
 554271 306083 52710.6761   33   68          - 46770.8004      -   184 2566s
 555665 306771 91364.7588   54   87          - 46779.3423      -   184 2573s
 556510 307167 67095.4278   55   76          - 46782.6293      -   184 2576s
 558386 308073 infeasible   55               - 46792.3271      -   184 2583s
 559098 308366 68142.9538   58  125          - 46794.4562      -   184 2586s
 560043 308819 51856.3172   40   81          - 46798.0245      -   184 2590s
 561663 309604 50063.1647   37   80          - 46802.4135      -   184 2596s
 562438 309980 infeasible   43               - 46807.8441      -   184 2600s
 563992 310738 58761.6390   37   68          - 46813.9119      -   184 2607s
 564588 311056 74334.2117   51   96          - 46816.9733      -   184 2610s
 566036 311709 78550.9912   94   80          - 46821.6773      -   183 2617s
 566692 312049 57804.1378   47  111          - 46823.2884      -   183 2620s
 568504 312916 49431.7275   44   99          - 46828.6207      -   183 2627s
 569130 313262 85778.1576   45   59          - 46831.4964      -   183 2631s
 570726 314058 58249.2749   51   87          - 46835.8377      -   183 2638s
 571448 314443 infeasible   54               - 46840.0888      -   183 2641s
 572322 314892 48750.9519   46   95          - 46842.4628      -   183 2645s
 573952 315733 52825.6480   56  119          - 46849.1256      -   183 2652s
 574836 316184 62843.9876   49   89          - 46853.6626      -   183 2655s
 576478 317010 62675.2776   62   76          - 46859.1863      -   183 2663s
 577226 317378 52339.2226   49  125          - 46862.0232      -   183 2667s
 578021 317735 52202.7845   52   71          - 46863.3004      -   183 2671s
 579407 318364 infeasible   55               - 46867.7249      -   183 2678s
 580192 318745 64117.5991   52   96          - 46872.3514      -   183 2682s
 580875 319013 55451.6076   52  106          - 46878.1411      -   183 2685s
 582084 319611 66778.6939   47   58          - 46883.1415      -   183 2693s
 582982 320054 66167.0421   47   74          - 46887.0962      -   183 2696s
 583713 320374 47532.5321   73  118          - 46888.4846      -   183 2700s
 585467 321219 71846.2067   45   72          - 46895.2355      -   183 2708s
 586349 321644 infeasible   44               - 46900.1324      -   183 2711s
 587043 321999 59039.9955   47   65          - 46901.7060      -   183 2715s
 588553 322694 91732.4107   66   88          - 46909.5630      -   183 2723s
 589419 323136 68058.9065   48   93          - 46914.1737      -   183 2727s
 590131 323474 60458.5984   46   81          - 46916.3526      -   183 2731s
 591789 324196 infeasible   90               - 46922.3377      -   183 2738s
 592704 324579 62281.6883   41  119          - 46926.9190      -   182 2742s
 593679 325094 73076.8445   47   80          - 46931.3080      -   182 2746s
 594409 325440 57227.1172   49  107          - 46934.9164      -   182 2750s
 596306 326363 58347.9665   42   62          - 46940.4439      -   182 2757s
 597193 326799 infeasible   52               - 46944.1885      -   182 2761s
 598712 327544 132306.857   52   61          - 46949.5589      -   182 2768s
 599675 327993 89677.2164   91   69          - 46953.7101      -   182 2772s
 600821 328577 122385.467   60   62          - 46957.3465      -   182 2776s
 602307 329271 91807.0715   60   77          - 46959.0045      -   182 2783s
 602964 329573 61253.4996   45  132          - 46962.8584      -   182 2786s
 603657 329904 67751.0593   49  100          - 46966.5080      -   182 2790s
 604609 330309 57192.5398   46   74          - 46971.7794      -   182 2798s
 605391 330625 infeasible   43               - 46974.2573      -   182 2802s
 606160 330950 106144.480   69   71          - 46979.2756      -   182 2806s
 607026 331310 118747.743   73   63          - 46981.9059      -   182 2810s
 608735 332206 infeasible   48               - 46986.3650      -   182 2817s
 609405 332592 108058.835   77   55          - 46989.2875      -   182 2821s
 610190 332941 83469.3914   58   82          - 46991.5167      -   182 2825s
 611940 333788 62177.6805   56   89          - 46998.6656      -   182 2832s
 612443 334029 62561.9839   39   68          - 46999.3210      -   182 2836s
 613241 334435 infeasible   45               - 47002.8358      -   182 2840s
 615055 335213 50728.1236   34  105          - 47009.5435      -   182 2848s
 615872 335598 infeasible   48               - 47011.4442      -   182 2852s
 616687 335900 59566.2741   53  102          - 47014.4749      -   182 2856s
 618443 336641 65615.9987   68   86          - 47019.4545      -   182 2863s
 619441 337106 infeasible   44               - 47025.1268      -   182 2867s
 620326 337507 53636.4317   50   52          - 47028.2835      -   181 2870s
 622038 338296 infeasible   63               - 47032.3945      -   181 2878s
 622979 338817 92769.1458   77   75          - 47036.1353      -   181 2881s
 623743 339178 70488.7898   50   71          - 47040.8003      -   181 2885s
 625514 340022 48223.3914   53  117          - 47045.1234      -   181 2893s
 626350 340406 infeasible   58               - 47046.9522      -   181 2896s
 627178 340810 53380.5419   48   91          - 47051.9583      -   181 2900s
 628765 341603 50178.9922   33   76          - 47058.1582      -   181 2907s
 629635 342015 53982.5502   70   67          - 47060.8900      -   181 2911s
 631547 342934 infeasible   57               - 47068.9007      -   181 2918s
 632327 343334 49696.7100   40   92          - 47070.9406      -   181 2921s
 633081 343655 infeasible   46               - 47070.9406      -   181 2925s
 634624 344348 62441.1615   56  116          - 47079.9476      -   181 2932s
 635415 344751 57101.5299   42   65          - 47082.8547      -   181 2935s
 637351 345681 infeasible   58               - 47089.4785      -   181 2943s
 637954 345957 59363.0248   39  122          - 47090.2134      -   181 2946s
 638748 346316 90321.3710   57   99          - 47095.0671      -   181 2950s
 640186 346885 51303.4990   52  119          - 47102.0251      -   181 2957s
 640958 347290 74727.9046   49   85          - 47104.6325      -   181 2961s
 641945 347718 54115.2851   46  110          - 47106.9834      -   181 2965s
 643578 348489 57875.4054   73  115          - 47114.2386      -   180 2972s
 644541 348972 48364.6456   42   95          - 47116.4911      -   180 2975s
 645996 349690 78080.3584   50   84          - 47121.4261      -   180 2982s
 646781 350061 72403.8195   47   78          - 47123.6862      -   180 2986s
 647831 350528 47892.3734   37   94          - 47127.9937      -   180 2990s
 649487 351358 114566.290   69  114          - 47132.3261      -   180 2997s
 650163 351618 87380.0177   38  100          - 47135.4304      -   180 3000s
 650836 351942 infeasible   53               - 47136.9720      -   180 3005s
 651478 352259 86622.9274   58   65          - 47140.0690      -   180 3010s
 652211 352621 53704.1557   36  121          - 47142.9314      -   180 3015s
 652910 352922 65637.7747   49   68          - 47144.4774      -   180 3020s
 653880 353345 59656.8676   33   72          - 47148.5005      -   180 3025s
 654748 353729 87591.9598   55   87          - 47150.8578      -   180 3030s
 655708 354221 61946.8563   40  119          - 47156.1289      -   180 3035s
 656333 354515 65804.5561   52   84          - 47159.3848      -   180 3040s
 657972 355280 infeasible   53               - 47161.5631      -   180 3047s
 658684 355590 120556.485   55   60          - 47165.9366      -   180 3051s
 659407 355949 91420.8001   47  103          - 47169.3223      -   180 3055s
 661335 356884 111190.827   72   58          - 47175.0294      -   180 3062s
 662111 357267 61836.3935   46   93          - 47178.6066      -   180 3065s
 663701 358037 55814.0317   81  141          - 47184.0560      -   180 3073s
 664532 358472 71194.4483   53   49          - 47184.8627      -   180 3076s
 665357 358896 63881.6100   47   89          - 47186.5042      -   180 3081s
 666154 359264 175804.158   82   51          - 47188.7274      -   180 3087s
 666988 359639 58785.1067   49   94          - 47194.5045      -   180 3092s
 667593 359939 59536.7983   44  129          - 47196.0411      -   180 3097s
 668310 360305 52262.7025   38  120          - 47198.4277      -   180 3102s
 669022 360650 55101.0978   51   90          - 47203.3515      -   180 3107s
 669738 361017 59234.6111   43   88          - 47205.0754      -   180 3113s
 670538 361342 71606.2565   48   65          - 47207.3548      -   180 3118s
 671343 361753 178857.082  109   26          - 47210.6692      -   180 3123s
 672092 362086 58504.4631   50   78          - 47213.1433      -   180 3128s
 672930 362470 57276.6083   60  126          - 47214.6705      -   180 3132s
 673896 362951 83505.2746   60   96          - 47216.3749      -   180 3136s
 674838 363418 infeasible   59               - 47219.1333      -   180 3140s
 676293 364113 50762.7463   43   67          - 47225.6359      -   180 3147s
 676996 364458 57226.2656   61   97          - 47228.6215      -   179 3151s
 677756 364716 66993.9289   67  153          - 47229.0614      -   179 3155s
 679483 365495 infeasible   50               - 47238.9722      -   179 3162s
 680311 365899 65179.8595   49   98          - 47241.9900      -   179 3166s
 681033 366288 infeasible   77               - 47243.2145      -   179 3170s
 682505 366961 79819.3970   65   72          - 47249.0809      -   179 3178s
 683040 367206 infeasible   45               - 47251.5860      -   179 3182s
 683870 367626 95141.1369   79   49          - 47253.0543      -   179 3186s
 684747 367996 64935.5112   50   96          - 47255.8430      -   179 3190s
 685777 368437 infeasible   42               - 47259.7795      -   179 3196s
 686636 368858 51937.0862   49   74          - 47260.8670      -   179 3201s
 687453 369232 86913.3997   46   77          - 47265.3347      -   179 3207s
 688375 369653 86885.4669   67   48          - 47267.2377      -   179 3212s
 689220 370037 60261.2511   64   93          - 47268.9185      -   179 3218s
 690053 370394 74102.1630   67  114          - 47273.9238      -   179 3223s
 690946 370835 73537.9156   60  127          - 47276.6940      -   179 3228s
 691735 371210 76491.7194   64   74          - 47276.6940      -   179 3233s
 692650 371642 74341.9105   47   71          - 47280.9992      -   179 3238s
 693245 371947 76959.3125   56  100          - 47283.2106      -   179 3243s
 694137 372376 78149.7205   57   76          - 47284.6706      -   179 3249s
 695023 372786 58645.4013   43   77          - 47288.0648      -   179 3254s
 695779 373127 131275.103   84   80          - 47288.4768      -   179 3259s
 696535 373490 62768.6526   49   73          - 47291.9211      -   179 3263s
 697439 373932 infeasible   55               - 47294.2459      -   179 3267s
 698291 374292 61718.8083   46  112          - 47297.6229      -   179 3271s
 700184 375052 68958.8442   43  109          - 47305.3532      -   179 3278s
 700920 375361 infeasible   65               - 47306.1389      -   179 3282s
 701740 375699 infeasible   53               - 47309.7351      -   179 3285s
 703353 376387 82391.8808   63   92          - 47314.7393      -   179 3293s
 704132 376708 infeasible   42               - 47317.1022      -   179 3298s
 704959 377042 59904.9233   41   93          - 47320.6387      -   179 3303s
 705791 377445 103992.797   88  117          - 47323.4134      -   179 3309s
 706805 377928 70983.5837   50   98          - 47325.9661      -   179 3314s
 707721 378417 53074.5417   53   66          - 47328.9133      -   179 3319s
 708452 378712 70047.6263   75  118          - 47331.0232      -   179 3324s
 709094 379049 104067.831   52   69          - 47333.1315      -   179 3330s
 710611 379717 75118.2156   55   63          - 47338.6939      -   179 3337s
 711392 380020 58512.1740   38   75          - 47339.5249      -   179 3341s
 712194 380416 61010.2123   62  111          - 47345.4673      -   179 3345s
 713768 381148 65353.0821   42  119          - 47348.8019      -   179 3353s
 714626 381521 infeasible   64               - 47352.4138      -   179 3357s
 715332 381840 73861.1585   73   25          - 47354.4597      -   179 3361s
 716153 382246 infeasible   78               - 47356.5962      -   179 3367s
 716967 382606 52390.3108   35  150          - 47359.0749      -   179 3371s
 718045 383144 67927.4868   71  124          - 47361.3195      -   179 3375s
 719760 383907 52820.3351   41   97          - 47366.7387      -   179 3383s
 720722 384450 63745.8591   58   73          - 47369.5144      -   178 3387s
 721475 384786 77402.9130   62   88          - 47370.9772      -   178 3391s
 723098 385421 55604.3293   58   94          - 47376.2203      -   178 3398s
 723794 385769 81891.3551   60   79          - 47378.8227      -   178 3402s
 724678 386201 123365.804   46   83          - 47380.2364      -   178 3406s
 725669 386649 infeasible   45               - 47384.6855      -   178 3410s
 727569 387565 113052.069   59   67          - 47389.2254      -   178 3417s
 728670 388064 56964.4130   38  145          - 47391.8074      -   178 3420s
 730201 388784 49245.6832   50   98          - 47397.5849      -   178 3428s
 730903 389082 69712.3480   58   56          - 47398.9209      -   178 3431s
 731612 389418 71322.6278   47   66          - 47401.0418      -   178 3435s
 733227 390098 53640.0796   50   97          - 47406.1991      -   178 3442s
 734095 390487 49044.3744   37   93          - 47409.2063      -   178 3446s
 734801 390780 67317.3585   52   89          - 47411.7184      -   178 3450s
 736666 391725 68267.4197   53  124          - 47416.4058      -   178 3457s
 737423 392042 infeasible   49               - 47419.1045      -   178 3461s
 738164 392325 93778.9820   63  127          - 47420.9118      -   178 3465s
 739638 392986 117471.546   64   62          - 47425.2678      -   178 3472s
 740262 393303 54155.0197   41  105          - 47425.5274      -   178 3476s
 740913 393542 63586.5434   57  120          - 47428.2027      -   178 3480s
 742610 394317 infeasible   47               - 47433.3880      -   178 3488s
 743390 394704 78735.8398   45   83          - 47436.2828      -   178 3492s
 744177 395081 49859.3673   40   99          - 47438.4971      -   178 3495s
 745945 395918 56089.4019   44   81          - 47444.1396      -   178 3504s
 746898 396333 105094.057   58   99          - 47445.4825      -   178 3507s
 747922 396851 69764.6402   50   66          - 47448.0374      -   178 3512s
 749453 397614 138802.415   57   45          - 47448.8063      -   178 3515s
 750889 398229 48743.4213   43   79          - 47452.0654      -   178 3523s
 751977 398769 infeasible   75               - 47454.6034      -   178 3526s
 752549 399036 64399.5013   51   95          - 47456.6438      -   178 3530s
 754059 399694 61569.2107   53  105          - 47461.3960      -   178 3537s
 755029 400162 126619.778   45   77          - 47465.7979      -   177 3541s
 756507 400803 47657.4330   39   77          - 47469.4767      -   177 3548s
 757135 401112 68056.4959   57   70          - 47470.7944      -   177 3552s
 758068 401530 51038.0428   40  129          - 47472.7840      -   177 3555s
 759882 402370 93358.2498   50   89          - 47477.2351      -   177 3563s
 760522 402704 58780.8329   54   78          - 47480.7933      -   177 3566s
 761243 402998 infeasible   57               - 47482.5384      -   177 3570s
 762988 403758 52840.4211   47   66          - 47487.9926      -   177 3577s
 763780 404147 48134.0376   35   84          - 47490.6237      -   177 3581s
 764605 404511 infeasible   86               - 47491.5546      -   177 3585s
 766326 405302 69631.7168   45   42          - 47497.5640      -   177 3592s
 767102 405670 91462.3902   54   78          - 47499.8380      -   177 3596s
 768256 406287 infeasible   87               - 47501.6953      -   177 3600s

Cutting planes:
  Cover: 57
  MIR: 8
  StrongCG: 4
  Flow cover: 32
  GUB cover: 6
  Zero half: 11
  Lazy constraints: 7211

Explored 769514 nodes (136203739 simplex iterations) in 3600.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 0

Time limit reached
Best objective -, best bound 4.750169528771e+04, gap -
IP duration time: 3600.004528 seconds
Total time elapsed: 3601.946371 seconds
Number of callbacks: 508
Time in callbacks: 0.119366 seconds
Number of lazy constraints generated: 7748
Error code = 10005
Var::get
+ for state in $states
+ echo 'Running CT'
Running CT
+ /home/lykhovyd/progs/districting/districting myconfig.txt CT /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/CT.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/CT/counties/graph/CT.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/CT/counties/graph/CT_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/CT/counties/graph/CT.population
state[2]        = CT
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/CT.ralg_hot
nr_comp = 1
graph: 8 nodes, 13 edges (read)
Model input: L = 711246, U = 718393, k = 5.
Graph is connected.
Model input: total population = 3574097
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.05419832695173e+04, norm = 6.71396948385174e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 1.05423716691970e+04, norm = 4.53979257470191e+00, diff = 1.40620662599262e+00
iter = 3, step = 9.50000000000000e-01, func = 1.05424924535284e+04, norm = 3.45709011958716e+00, diff = 1.55259858828123e+00
iter = 4, step = 9.02500000000000e-01, func = 1.05432699074342e+04, norm = 3.00548125435704e+00, diff = 7.36390767843509e-01
iter = 5, step = 8.57375000000000e-01, func = 1.05428540930340e+04, norm = 3.48615939854525e+00, diff = 6.78813022861822e-01
iter = 6, step = 8.14506250000000e-01, func = 1.05431734168912e+04, norm = 3.10376070996240e+00, diff = 5.15554128131280e-01
iter = 7, step = 7.73780937500000e-01, func = 1.05436106183352e+04, norm = 2.47137206108735e+00, diff = 5.41179688543811e-01
iter = 8, step = 7.35091890625000e-01, func = 1.05435115355153e+04, norm = 2.91355773371970e+00, diff = 5.34517749615765e-01
iter = 9, step = 6.98337296093750e-01, func = 1.05438531834474e+04, norm = 1.89611696154444e+00, diff = 4.40674521455430e-01
iter = 10, step = 6.63420431289062e-01, func = 1.05438510846933e+04, norm = 2.19922327201849e+00, diff = 3.74762923843373e-01
iter = 11, step = 6.30249409724609e-01, func = 1.05439933716449e+04, norm = 1.91446195258486e+00, diff = 3.17655281697537e-01
iter = 12, step = 5.98736939238379e-01, func = 1.05441708398302e+04, norm = 1.83505284739106e+00, diff = 3.89298497178250e-01
iter = 13, step = 5.68800092276460e-01, func = 1.05441264095918e+04, norm = 1.61248328343609e+00, diff = 2.57645374837840e-01
iter = 14, step = 5.40360087662637e-01, func = 1.05441344077582e+04, norm = 1.10572118148665e+00, diff = 2.57176519422590e-01
iter = 15, step = 5.13342083279505e-01, func = 1.05442026199153e+04, norm = 1.95679305743036e+00, diff = 2.44905846655530e-01
iter = 16, step = 5.13342083279505e-01, func = 1.05442914887274e+04, norm = 1.13733393957139e+00, diff = 5.37498668999877e-01
iter = 17, step = 4.87674979115529e-01, func = 1.05441481685092e+04, norm = 1.58054195472081e+00, diff = 1.91195801787756e-01
iter = 18, step = 4.87674979115529e-01, func = 1.05442483418686e+04, norm = 1.02698119333022e+00, diff = 3.40666663928885e-01
iter = 19, step = 4.63291230159753e-01, func = 1.05443198104216e+04, norm = 5.96942970596587e-01, diff = 1.85699736502228e-01
iter = 20, step = 4.40126668651765e-01, func = 1.05443402729760e+04, norm = 4.48152253758031e-01, diff = 1.19786077218059e-01
iter = 21, step = 4.18120335219177e-01, func = 1.05443499186157e+04, norm = 6.73148045122869e-01, diff = 1.39985318017598e-01
iter = 22, step = 3.97214318458218e-01, func = 1.05443596403371e+04, norm = 6.89756381024683e-01, diff = 1.25700473085784e-01
iter = 23, step = 3.77353602535307e-01, func = 1.05443879079575e+04, norm = 4.67465268688202e-01, diff = 1.50454089762559e-01
iter = 24, step = 3.58485922408542e-01, func = 1.05443284561872e+04, norm = 8.69112119160358e-01, diff = 9.24200085061679e-02
iter = 25, step = 3.58485922408542e-01, func = 1.05443754975704e+04, norm = 5.93539269311469e-01, diff = 1.99711909986576e-01
iter = 26, step = 3.40561626288115e-01, func = 1.05443912196490e+04, norm = 4.49185653532214e-01, diff = 6.03896370996787e-02
iter = 27, step = 3.23533544973709e-01, func = 1.05443988564244e+04, norm = 3.38413943739165e-01, diff = 6.04232049788586e-02
iter = 28, step = 3.07356867725023e-01, func = 1.05444174359839e+04, norm = 2.24542282041740e-01, diff = 6.47764822418171e-02
iter = 29, step = 2.91989024338772e-01, func = 1.05444163570714e+04, norm = 2.20221052487910e-01, diff = 5.69732403013165e-02
iter = 30, step = 2.77389573121834e-01, func = 1.05444155167399e+04, norm = 2.88119116740125e-01, diff = 5.21380912532211e-02
iter = 31, step = 2.77389573121834e-01, func = 1.05444079816914e+04, norm = 3.55067805269169e-01, diff = 1.09508674916362e-01
iter = 32, step = 2.77389573121834e-01, func = 1.05444224933571e+04, norm = 2.26072844719153e-01, diff = 6.62211328254336e-02
iter = 33, step = 2.77389573121834e-01, func = 1.05444219679627e+04, norm = 2.14477367138212e-01, diff = 1.36573354158762e-01
iter = 34, step = 2.77389573121834e-01, func = 1.05444290495944e+04, norm = 2.40704995807508e-01, diff = 1.32839964746386e-01
iter = 35, step = 2.63520094465742e-01, func = 1.05444403313118e+04, norm = 1.85219568399587e-01, diff = 4.09217865352518e-02
iter = 36, step = 2.50344089742455e-01, func = 1.05444461805009e+04, norm = 1.10809310593867e-01, diff = 4.78834063277689e-02
iter = 37, step = 2.50344089742455e-01, func = 1.05444561929122e+04, norm = 9.53217858719373e-02, diff = 1.95431215876970e-01
iter = 38, step = 2.37826885255332e-01, func = 1.05444554758036e+04, norm = 1.04520397972164e-01, diff = 7.27302334705779e-02
iter = 39, step = 2.25935540992565e-01, func = 1.05444604401834e+04, norm = 1.04742236723379e-01, diff = 6.79084496551124e-02
iter = 40, step = 2.14638763942937e-01, func = 1.05444447060658e+04, norm = 8.73278758997074e-01, diff = 6.26965938153329e-02
iter = 41, step = 2.03906825745790e-01, func = 1.05444597828996e+04, norm = 4.45673851794993e-01, diff = 1.08136802625237e-01
iter = 42, step = 1.93711484458501e-01, func = 1.05444561078092e+04, norm = 1.87754523185939e-01, diff = 3.56797756978934e-02
iter = 43, step = 1.93711484458501e-01, func = 1.05444407077978e+04, norm = 1.19278397435703e+00, diff = 8.77928510468924e-02
iter = 44, step = 1.84025910235576e-01, func = 1.05444624765401e+04, norm = 6.00246268538156e-01, diff = 9.57468210504772e-02
iter = 45, step = 1.74824614723797e-01, func = 1.05444626496782e+04, norm = 8.27430451697855e-02, diff = 4.07938474821483e-02
iter = 46, step = 1.66083383987607e-01, func = 1.05444614804741e+04, norm = 1.09608723580485e-01, diff = 3.97293657018158e-02
iter = 47, step = 1.57779214788227e-01, func = 1.05444636373878e+04, norm = 9.15442696559895e-02, diff = 3.82519519012022e-02
iter = 48, step = 1.57779214788227e-01, func = 1.05444633833967e+04, norm = 1.11048430160693e+00, diff = 7.86885109870671e-02
iter = 49, step = 1.49890254048815e-01, func = 1.05444664243576e+04, norm = 5.56545842425255e-01, diff = 7.70181866061878e-02
iter = 50, step = 1.42395741346375e-01, func = 1.05444631889790e+04, norm = 8.27066231015588e-02, diff = 2.51558395206242e-02
iter = 51, step = 1.35275954279056e-01, func = 1.05444639985315e+04, norm = 6.94719078999805e-01, diff = 2.52973232616205e-02
iter = 52, step = 1.28512156565103e-01, func = 1.05444674989360e+04, norm = 3.47978357606696e-01, diff = 5.96088218659036e-02
iter = 53, step = 1.22086548736848e-01, func = 1.05444663257648e+04, norm = 7.65363234543240e-02, diff = 1.36666586872091e-02
iter = 54, step = 1.22086548736848e-01, func = 1.05444673670550e+04, norm = 6.12472869053468e-02, diff = 3.12393147823964e-02
iter = 55, step = 1.22086548736848e-01, func = 1.05444689130149e+04, norm = 3.91991162730074e-02, diff = 4.82976555163056e-02
iter = 56, step = 1.15982221300006e-01, func = 1.05444688651744e+04, norm = 5.41983589186766e-02, diff = 2.50767912681288e-02
iter = 57, step = 1.10183110235005e-01, func = 1.05444704340137e+04, norm = 4.41502954443073e-02, diff = 1.85053822066113e-02
iter = 58, step = 1.04673954723255e-01, func = 1.05444710304037e+04, norm = 2.95153439451673e-02, diff = 1.73837967586680e-02
iter = 59, step = 9.94402569870922e-02, func = 1.05444709935488e+04, norm = 3.48904757379369e-02, diff = 3.30895990878996e-02
iter = 60, step = 9.44682441377376e-02, func = 1.05444708509472e+04, norm = 3.80727617442640e-02, diff = 2.37528787984605e-02
iter = 61, step = 8.97448319308507e-02, func = 1.05444719981436e+04, norm = 2.90005664704438e-02, diff = 2.00436315172638e-02
iter = 62, step = 8.52575903343082e-02, func = 1.05444703318362e+04, norm = 1.60361656242685e+00, diff = 2.41680055289730e-02
iter = 63, step = 8.09947108175928e-02, func = 1.05444716380014e+04, norm = 8.01994228931486e-01, diff = 3.08320302042797e-02
iter = 64, step = 7.69449752767131e-02, func = 1.05444720194509e+04, norm = 2.74930606447884e-02, diff = 1.06119986439264e-02
iter = 65, step = 7.30977265128775e-02, func = 1.05444715287597e+04, norm = 3.84165599088341e-02, diff = 9.67795936782191e-03
iter = 66, step = 7.30977265128775e-02, func = 1.05444723091352e+04, norm = 2.90315843805743e-02, diff = 1.84082335193365e-02
iter = 67, step = 7.30977265128775e-02, func = 1.05444725349544e+04, norm = 1.84948483572900e-02, diff = 2.45314520366034e-02
iter = 68, step = 6.94428401872336e-02, func = 1.05444685591531e+04, norm = 4.46576944527451e-01, diff = 1.45279985051556e-02
iter = 69, step = 6.59706981778719e-02, func = 1.05444725729651e+04, norm = 2.23477941246760e-01, diff = 3.08689787698951e-02
iter = 70, step = 6.26721632689783e-02, func = 1.05444727965670e+04, norm = 1.71593241134644e-02, diff = 5.53941916917577e-03
iter = 71, step = 5.95385551055294e-02, func = 1.05444729924271e+04, norm = 1.38389799472345e-02, diff = 7.08250341582693e-03
iter = 72, step = 5.65616273502529e-02, func = 1.05444710530097e+04, norm = 2.99443436764006e-01, diff = 6.68268218444092e-03
iter = 73, step = 5.37335459827403e-02, func = 1.05444731353486e+04, norm = 1.49981457144658e-01, diff = 7.04567024148749e-03
iter = 74, step = 5.10468686836033e-02, func = 1.05444731622553e+04, norm = 1.51113979809211e-02, diff = 4.25525873324764e-03
iter = 75, step = 4.84945252494231e-02, func = 1.05444730756361e+04, norm = 2.77831474528996e-01, diff = 7.00004337435008e-03
iter = 76, step = 4.60697989869519e-02, func = 1.05444732363824e+04, norm = 1.39018173069798e-01, diff = 5.94542408123408e-03
iter = 77, step = 4.37663090376043e-02, func = 1.05444733865682e+04, norm = 9.08720244916404e-03, diff = 3.59312397366341e-03
iter = 78, step = 4.15779935857241e-02, func = 1.05444729723532e+04, norm = 1.73955359045640e-01, diff = 5.16186825977362e-03
iter = 79, step = 3.94990939064379e-02, func = 1.05444733817098e+04, norm = 8.72026224555954e-02, diff = 4.61985194115441e-03
iter = 80, step = 3.75241392111160e-02, func = 1.05444734435445e+04, norm = 1.24770374432872e-02, diff = 1.94271451814895e-03
iter = 81, step = 4.50289670533392e-02, func = 1.05444735506206e+04, norm = 6.23851872164357e-03, diff = 1.26259126657768e-02
iter = 82, step = 4.27775187006722e-02, func = 1.05444643836383e+04, norm = 4.50993041939482e-01, diff = 5.73976659526930e-03
iter = 83, step = 4.27775187006722e-02, func = 1.05444734709201e+04, norm = 2.25636522788432e-01, diff = 1.07083798305187e-02
iter = 84, step = 4.06386427656386e-02, func = 1.05444734805937e+04, norm = 1.30099564431431e-02, diff = 6.57541481294830e-04
iter = 85, step = 3.86067106273567e-02, func = 1.05444734961160e+04, norm = 8.95713871944941e-03, diff = 9.71381265567858e-04
iter = 86, step = 3.66763750959889e-02, func = 1.05444734282520e+04, norm = 1.77510324511400e-01, diff = 8.07746865870583e-04
iter = 87, step = 3.48425563411894e-02, func = 1.05444735732441e+04, norm = 8.89584162594721e-02, diff = 8.44065151774498e-03
iter = 88, step = 3.31004285241299e-02, func = 1.05444735895779e+04, norm = 1.05736645903288e-02, diff = 1.01306048716614e-03
iter = 89, step = 3.14454070979234e-02, func = 1.05444734921738e+04, norm = 1.18676092734014e-02, diff = 1.22269314201832e-03
iter = 90, step = 3.14454070979234e-02, func = 1.05444736288207e+04, norm = 7.94586613023600e-03, diff = 1.09087740620989e-03
iter = 91, step = 2.98731367430273e-02, func = 1.05444736301338e+04, norm = 5.22180157829250e-03, diff = 1.05400009986422e-03
iter = 92, step = 2.98731367430273e-02, func = 1.05444736909095e+04, norm = 4.51071813917285e-03, diff = 3.36636716308334e-03
iter = 93, step = 2.83794799058759e-02, func = 1.05444733896155e+04, norm = 1.34015308040157e-01, diff = 1.66765510153452e-03
iter = 94, step = 2.69605059105821e-02, func = 1.05444736999917e+04, norm = 6.71508970181323e-02, diff = 3.17830646085357e-03
iter = 95, step = 2.56124806150530e-02, func = 1.05444736997838e+04, norm = 6.17328263021251e-03, diff = 3.79269433863024e-04
iter = 96, step = 2.43318565843004e-02, func = 1.05444737424002e+04, norm = 4.19326306960238e-03, diff = 5.60069677334611e-04
iter = 97, step = 2.31152637550853e-02, func = 1.05444736847957e+04, norm = 4.37099602599735e-02, diff = 4.75268469546687e-04
iter = 98, step = 2.19595005673311e-02, func = 1.05444737493826e+04, norm = 2.21834602351721e-02, diff = 6.54679632143367e-04
iter = 99, step = 2.08615255389645e-02, func = 1.05444737032771e+04, norm = 6.97087991776291e-02, diff = 3.27588453964427e-04
iter = 100, step = 1.98184492620163e-02, func = 1.05444737374459e+04, norm = 3.50252130276744e-02, diff = 6.50096889506843e-04
iter = 101, step = 1.88275267989155e-02, func = 1.05444737376436e+04, norm = 4.22629900541314e-03, diff = 1.69194269226158e-04
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.054447e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 5, while k = 5 and n = 8
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 3.20155e-321
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 64
Number of centers left            = 8
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 64 variables
Optimize a model with 89 rows, 72 columns and 288 nonzeros
Variable types: 8 continuous, 64 integer (64 binary)
Coefficient statistics:
  Matrix range     [1e+00, 9e+05]
  Objective range  [1e+02, 2e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 5e+00]
Presolve removed 0 rows and 27 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.000177 seconds
Total time elapsed: 0.025929 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running DE'
Running DE
+ /home/lykhovyd/progs/districting/districting myconfig.txt DE /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/DE.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/DE/counties/graph/DE.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/DE/counties/graph/DE_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/DE/counties/graph/DE.population
state[2]        = DE
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/DE.ralg_hot
nr_comp = 1
graph: 3 nodes, 2 edges (read)
Model input: L = 893445, U = 902423, k = 1.
Graph is connected.
Model input: total population = 897934
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.08311398472236e+03, norm = 1.41405552770528e-02, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 2.08311805013201e+03, norm = 7.07027763852642e-03, diff = 1.42500000000000e+00
iter = 3, step = 1.14000000000000e+00, func = 2.08312002980974e+03, norm = 3.53513881926321e-03, diff = 5.70000000000000e-01
iter = 4, step = 1.14000000000000e+00, func = 2.08312006516113e+03, norm = 1.76756940963160e-03, diff = 2.85000000000000e-01
iter = 5, step = 1.14000000000000e+00, func = 2.08312103732431e+03, norm = 8.83784704815803e-04, diff = 1.42500000000000e-01
iter = 6, step = 1.08300000000000e+00, func = 2.08312082079705e+03, norm = 4.41892352407902e-04, diff = 3.56250000000000e-02
iter = 7, step = 1.08300000000000e+00, func = 2.08312104991824e+03, norm = 2.20946176203950e-04, diff = 3.38437500000000e-02
iter = 8, step = 1.02885000000000e+00, func = 2.08312100026059e+03, norm = 1.10473088101976e-04, diff = 8.46093750000000e-03
iter = 9, step = 1.02885000000000e+00, func = 2.08312105290930e+03, norm = 5.52365440509868e-05, diff = 8.03789062500001e-03
iter = 10, step = 9.77407500000000e-01, func = 2.08312104288317e+03, norm = 2.76182720254934e-05, diff = 2.00947265624995e-03
iter = 11, step = 9.77407500000000e-01, func = 2.08312105361967e+03, norm = 1.38091360127462e-05, diff = 1.90899902343740e-03
iter = 12, step = 9.28537125000000e-01, func = 2.08312105300604e+03, norm = 6.90456800637284e-06, diff = 4.77249755859401e-04
iter = 13, step = 9.28537125000000e-01, func = 2.08312105378839e+03, norm = 3.45228400318686e-06, diff = 4.53387268066389e-04
iter = 14, step = 9.28537125000000e-01, func = 2.08312105460883e+03, norm = 1.72614200159308e-06, diff = 2.26693634033166e-04
iter = 15, step = 8.82110268750000e-01, func = 2.08312105499048e+03, norm = 8.63071000797243e-07, diff = 5.66734085083453e-05
iter = 16, step = 8.38004755312500e-01, func = 2.08312105481919e+03, norm = 4.31535500398490e-07, diff = 2.69198690414381e-05
iter = 17, step = 8.38004755312500e-01, func = 2.08312105500000e+03, norm = 2.15767750199079e-07, diff = 2.55738755894286e-05
iter = 18, step = 7.96104517546875e-01, func = 2.08312105495480e+03, norm = 1.07883875099340e-07, diff = 6.39346889730857e-06
iter = 19, step = 9.55325421056250e-01, func = 2.08312105498078e+03, norm = 5.39419375498102e-08, diff = 9.11069317881564e-06
iter = 20, step = 9.55325421056250e-01, func = 2.08312105499345e+03, norm = 2.69709687750416e-08, diff = 3.64427727156388e-06
iter = 21, step = 9.55325421056250e-01, func = 2.08312105499367e+03, norm = 1.34854843877018e-08, diff = 1.82213863756865e-06
iter = 22, step = 9.55325421056250e-01, func = 2.08312105499989e+03, norm = 6.74274219419919e-09, diff = 9.11069329807800e-07
iter = 23, step = 9.07559150003437e-01, func = 2.08312105499850e+03, norm = 3.37137109714230e-09, diff = 2.27767329471626e-07
iter = 24, step = 9.07559150003437e-01, func = 2.08312105499997e+03, norm = 1.68568554838770e-09, diff = 2.16384175588624e-07
iter = 25, step = 8.62181192503265e-01, func = 2.08312105499964e+03, norm = 8.42842773929091e-10, diff = 5.40949208869727e-08
iter = 26, step = 8.62181192503265e-01, func = 2.08312105499999e+03, norm = 4.21421387497241e-10, diff = 5.14412206378548e-08
iter = 27, step = 8.19072132878102e-01, func = 2.08312105499992e+03, norm = 2.10710694198080e-10, diff = 1.36457221717880e-08
iter = 28, step = 8.19072132878102e-01, func = 2.08312105499996e+03, norm = 7.06992423897975e-03, diff = 1.22118009871633e-08
iter = 29, step = 7.78118526234197e-01, func = 2.08311815961108e+03, norm = 7.06992423897976e-03, diff = 4.09536066439051e-01
iter = 30, step = 9.33742231481036e-01, func = 2.08311982445965e+03, norm = 3.53496211948988e-03, diff = 5.83588894675648e-01
iter = 31, step = 9.33742231481036e-01, func = 2.08312063516864e+03, norm = 1.76748105974494e-03, diff = 2.33435557870259e-01
iter = 32, step = 9.33742231481036e-01, func = 2.08312064964551e+03, norm = 8.83740529872469e-04, diff = 1.16717778935130e-01
iter = 33, step = 9.33742231481036e-01, func = 2.08312104776157e+03, norm = 4.41870264936235e-04, diff = 5.83588894675647e-02
iter = 34, step = 8.87055119906984e-01, func = 2.08312095909020e+03, norm = 2.20935132468117e-04, diff = 1.45897223668912e-02
iter = 35, step = 8.87055119906984e-01, func = 2.08312105291898e+03, norm = 1.10467566234059e-04, diff = 1.38602362485466e-02
iter = 36, step = 8.42702363911635e-01, func = 2.08312103258332e+03, norm = 5.52337831170293e-05, diff = 3.46505906213666e-03
iter = 37, step = 8.42702363911635e-01, func = 2.08312105414386e+03, norm = 2.76168915585147e-05, diff = 3.29180610902982e-03
iter = 38, step = 8.00567245716053e-01, func = 2.08312105003793e+03, norm = 1.38084457792573e-05, diff = 8.22951527257456e-04
iter = 39, step = 8.00567245716053e-01, func = 2.08312105443478e+03, norm = 6.90422288962867e-06, diff = 7.81803950894584e-04
iter = 40, step = 7.60538883430251e-01, func = 2.08312105418340e+03, norm = 3.45211144481433e-06, diff = 1.95450987723646e-04
iter = 41, step = 7.60538883430251e-01, func = 2.08312105450387e+03, norm = 1.72605572240717e-06, diff = 1.85678438337463e-04
iter = 42, step = 7.60538883430251e-01, func = 2.08312105483977e+03, norm = 8.63027861203583e-07, diff = 9.28392191687317e-05
iter = 43, step = 7.22511939258738e-01, func = 2.08312105499614e+03, norm = 4.31513930601791e-07, diff = 2.32098047921829e-05
iter = 44, step = 6.86386342295801e-01, func = 2.08312105492592e+03, norm = 2.15756965300896e-07, diff = 1.10246572762869e-05
iter = 45, step = 8.23663610754961e-01, func = 2.08312105496302e+03, norm = 1.07878482650448e-07, diff = 1.57101366187088e-05
iter = 46, step = 8.23663610754961e-01, func = 2.08312105499256e+03, norm = 5.39392413252239e-08, diff = 6.28405464748353e-06
iter = 47, step = 7.82480430217213e-01, func = 2.08312105499634e+03, norm = 2.69696206626120e-08, diff = 1.57101366187088e-06
iter = 48, step = 7.43356408706353e-01, func = 2.08312105499839e+03, norm = 1.34848103313060e-08, diff = 7.46231489388669e-07
iter = 49, step = 7.06188588271035e-01, func = 2.08312105499911e+03, norm = 6.74240516565299e-09, diff = 3.54459957459618e-07
iter = 50, step = 6.70879158857483e-01, func = 2.08312105499970e+03, norm = 3.37120258282650e-09, diff = 1.68368479793318e-07
iter = 51, step = 6.37335200914609e-01, func = 2.08312105499973e+03, norm = 1.68560129141325e-09, diff = 7.99750279018262e-08
iter = 52, step = 6.37335200914609e-01, func = 2.08312105499973e+03, norm = 8.42800645706624e-10, diff = 7.59762765067349e-08
iter = 53, step = 6.37335200914609e-01, func = 2.08312105500000e+03, norm = 2.17185393949920e-10, diff = 3.79881382533675e-08
iter = 54, step = 6.05468440868878e-01, func = 2.08312105499997e+03, norm = 1.03004894902057e-10, diff = 5.74388566049664e-09
iter = 55, step = 7.26562129042654e-01, func = 2.08312105499998e+03, norm = 5.15024474510285e-11, diff = 8.18503706620771e-09
iter = 56, step = 7.26562129042654e-01, func = 2.08312105500000e+03, norm = 1.10054380726240e-10, diff = 3.27401482648308e-09
iter = 57, step = 6.90234022590521e-01, func = 2.08312105499997e+03, norm = 1.10354474450241e-10, diff = 5.67450414963976e-09
iter = 58, step = 6.90234022590521e-01, func = 2.08312105500000e+03, norm = 5.51772372251206e-11, diff = 5.39077894215777e-09
iter = 59, step = 6.55722321460995e-01, func = 2.08312105499999e+03, norm = 2.75886186125603e-11, diff = 1.34769473553944e-09
iter = 60, step = 6.55722321460995e-01, func = 2.08312105500000e+03, norm = 1.37943093062801e-11, diff = 1.28030999876247e-09
iter = 61, step = 6.22936205387945e-01, func = 2.08312105500000e+03, norm = 1.30635075251803e-11, diff = 3.20077499690618e-10
iter = 62, step = 5.91789395118548e-01, func = 2.08312105500000e+03, norm = 1.38244483782078e-11, diff = 6.16863424075954e-10
iter = 63, step = 5.91789395118548e-01, func = 2.08312105500000e+03, norm = 6.91222418910389e-12, diff = 5.86020252872157e-10
iter = 64, step = 5.62199925362621e-01, func = 2.08312105500000e+03, norm = 3.73244967131479e-12, diff = 1.46505063218039e-10
iter = 65, step = 5.34089929094490e-01, func = 2.08312105500000e+03, norm = 4.03089346441222e-12, diff = 1.70758665583952e-10
iter = 66, step = 5.07385432639765e-01, func = 2.08312105500000e+03, norm = 1.91832215214561e-12, diff = 8.11103661523771e-11
B(grad) is 0, break
ralg done, iterations : 67, matrix resets : 0
f_optimal = 2.083121e+03
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 3
  UB from restricted IP = 6086.69 using centers : 0 
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 0 of HessHeuristic, objective value of incumbent is = 2083.12
  UB from restricted IP = 6086.69 using centers : 0 
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 1 of HessHeuristic, objective value of incumbent is = 2083.12
  UB from restricted IP = 6086.69 using centers : 0 
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 2 of HessHeuristic, objective value of incumbent is = 2083.12
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 3 of HessHeuristic, objective value of incumbent is = 2083.12
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 4 of HessHeuristic, objective value of incumbent is = 2083.12
  UB from restricted IP = 2582.5 using centers : 2 
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 5 of HessHeuristic, objective value of incumbent is = 2083.12
  UB from restricted IP = 6086.69 using centers : 0 
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 6 of HessHeuristic, objective value of incumbent is = 2083.12
  UB from restricted IP = 6086.69 using centers : 0 
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 7 of HessHeuristic, objective value of incumbent is = 2083.12
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 8 of HessHeuristic, objective value of incumbent is = 2083.12
  UB from restricted IP = 6086.69 using centers : 0 
  UB from restricted IP = 2083.12 using centers : 1 
In iteration 9 of HessHeuristic, objective value of incumbent is = 2083.12
UB at end of HessHeuristic = 2083.12
UB of heuristicSolution = 2083.12
Best solution after 10 of HessHeuristic is 2083.12

Beginning LOCAL SEARCH with UB = 2083.12

Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 3
  checking neighbors of node 1
UB at end of local search heuristic = 2083.12
UB of heuristicSolution = 2083.12
Best solution after local search is 2083.12
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 3
Optimize a model with 9 rows, 7 columns and 19 nonzeros
Variable types: 4 continuous, 3 integer (3 binary)
Coefficient statistics:
  Matrix range     [1e+00, 5e+05]
  Objective range  [5e+02, 2e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 9e+05]

Loaded MIP start with objective 2083.12

Presolve removed 9 rows and 7 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 1: 2083.12 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.083121055000e+03, best bound 2.083121055000e+03, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 2083.12 using centers : 1 
UB at end of ContiguityHeuristic = 2083.12
UB of (contiguous) heuristicSolution = 2083.12

Number of variables fixed to zero = 6
Number of variables fixed to one  = 0
Number of variables not fixed     = 3
Number of centers left            = 1
Percentage of vars fixed = 0.67
Academic license - for non-commercial use only
Build hess : created 3 variables
Optimize a model with 15 rows, 6 columns and 22 nonzeros
Variable types: 3 continuous, 3 integer (3 binary)
Coefficient statistics:
  Matrix range     [1e+00, 9e+05]
  Objective range  [5e+02, 2e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]

Loaded MIP start with objective 2083.12

Presolve removed 15 rows and 6 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 1: 2083.12 

Optimal solution found (tolerance 0.00e+00)
Best objective 2.083121055000e+03, best bound 2.083121055000e+03, gap 0.0000%
IP duration time: 0.000205 seconds
Total time elapsed: 0.007320 seconds
Number of callbacks: 1
Time in callbacks: 0.000002 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running FL'
Running FL
+ /home/lykhovyd/progs/districting/districting myconfig.txt FL /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/FL.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/FL/counties/graph/FL.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/FL/counties/graph/FL_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/FL/counties/graph/FL.population
state[2]        = FL
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/FL.ralg_hot
nr_comp = 1
graph: 67 nodes, 142 edges (read)
Model input: L = 692864, U = 699826, k = 27.
Graph is connected.
Model input: total population = 18801310
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.14484976329708e+05, norm = 2.38041371847833e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.14487998878685e+05, norm = 1.35182468912935e+01, diff = 7.26305051955663e-01
iter = 3, step = 8.57375000000000e-01, func = 1.14486839524539e+05, norm = 1.58492155926019e+01, diff = 7.50665978802617e-01
iter = 4, step = 8.14506250000000e-01, func = 1.14489141914141e+05, norm = 1.12709384887979e+01, diff = 6.11720053792509e-01
iter = 5, step = 7.73780937500000e-01, func = 1.14488930910928e+05, norm = 1.35884136192168e+01, diff = 6.96248544904328e-01
iter = 6, step = 7.35091890625000e-01, func = 1.14489654484176e+05, norm = 1.12036597559143e+01, diff = 5.68363996213364e-01
iter = 7, step = 6.98337296093750e-01, func = 1.14489429722913e+05, norm = 1.08297155836087e+01, diff = 5.67826568048713e-01
iter = 8, step = 6.63420431289062e-01, func = 1.14489787299279e+05, norm = 1.17627484077006e+01, diff = 5.34909682584363e-01
iter = 9, step = 6.30249409724609e-01, func = 1.14489701997188e+05, norm = 1.22089370148904e+01, diff = 4.60792042535095e-01
iter = 10, step = 5.98736939238379e-01, func = 1.14490822292487e+05, norm = 1.01590638613541e+01, diff = 4.54501610694429e-01
iter = 11, step = 5.68800092276460e-01, func = 1.14490455591031e+05, norm = 1.18464610075267e+01, diff = 4.56678784799101e-01
iter = 12, step = 5.40360087662637e-01, func = 1.14490218652263e+05, norm = 1.18312489306459e+01, diff = 4.12277390295432e-01
iter = 13, step = 5.13342083279505e-01, func = 1.14490789505883e+05, norm = 8.04194763331089e+00, diff = 3.89912403086198e-01
iter = 14, step = 4.87674979115529e-01, func = 1.14490646897233e+05, norm = 9.80154229422977e+00, diff = 3.96179770124578e-01
iter = 15, step = 4.63291230159753e-01, func = 1.14490923331138e+05, norm = 9.54900238305347e+00, diff = 3.08371381989145e-01
iter = 16, step = 4.40126668651765e-01, func = 1.14491039168997e+05, norm = 1.09928773566469e+01, diff = 3.31833270169804e-01
iter = 17, step = 4.18120335219177e-01, func = 1.14491213047820e+05, norm = 1.01446151787336e+01, diff = 3.04745817210934e-01
iter = 18, step = 3.97214318458218e-01, func = 1.14491063015391e+05, norm = 8.63577409983023e+00, diff = 2.96152842181365e-01
iter = 19, step = 3.77353602535307e-01, func = 1.14490923822169e+05, norm = 9.27111584170834e+00, diff = 2.92502691584634e-01
iter = 20, step = 3.58485922408542e-01, func = 1.14491495762505e+05, norm = 7.12314937606128e+00, diff = 2.55888073611455e-01
iter = 21, step = 3.40561626288115e-01, func = 1.14491480431327e+05, norm = 8.36305519831773e+00, diff = 2.63072831685980e-01
iter = 22, step = 3.23533544973709e-01, func = 1.14491067962421e+05, norm = 1.06061897175235e+01, diff = 2.45028343406137e-01
iter = 23, step = 3.07356867725023e-01, func = 1.14491493376560e+05, norm = 7.96357626893393e+00, diff = 2.06342907612961e-01
iter = 24, step = 2.91989024338772e-01, func = 1.14491643795015e+05, norm = 8.30897084509377e+00, diff = 2.31940592654806e-01
iter = 25, step = 2.77389573121834e-01, func = 1.14491764722490e+05, norm = 7.38206442046334e+00, diff = 2.04922565541930e-01
iter = 26, step = 2.63520094465742e-01, func = 1.14491860507499e+05, norm = 7.23916293192618e+00, diff = 2.00278321152226e-01
iter = 27, step = 2.50344089742455e-01, func = 1.14491799492433e+05, norm = 7.49970359056738e+00, diff = 1.82290386171569e-01
iter = 28, step = 2.37826885255332e-01, func = 1.14491596621642e+05, norm = 9.26978416557891e+00, diff = 1.68681958859808e-01
iter = 29, step = 2.25935540992565e-01, func = 1.14491991898120e+05, norm = 8.61576267977750e+00, diff = 1.55882038016512e-01
iter = 30, step = 2.14638763942937e-01, func = 1.14491894203516e+05, norm = 8.88528262169181e+00, diff = 1.54875854777539e-01
iter = 31, step = 2.03906825745790e-01, func = 1.14492083200330e+05, norm = 7.54552145266043e+00, diff = 1.40080013838558e-01
iter = 32, step = 1.93711484458501e-01, func = 1.14491983903782e+05, norm = 8.16402361381657e+00, diff = 1.42837629527262e-01
iter = 33, step = 1.84025910235576e-01, func = 1.14492131485851e+05, norm = 6.97381636785109e+00, diff = 1.18674093712360e-01
iter = 34, step = 1.74824614723797e-01, func = 1.14491981634671e+05, norm = 7.46974512829130e+00, diff = 1.25011164651621e-01
iter = 35, step = 1.66083383987607e-01, func = 1.14492129725848e+05, norm = 6.61717370586643e+00, diff = 1.15713730475789e-01
iter = 36, step = 1.57779214788227e-01, func = 1.14492146424907e+05, norm = 6.94565581400921e+00, diff = 1.08557002316559e-01
iter = 37, step = 1.49890254048815e-01, func = 1.14492270925756e+05, norm = 6.06547769698274e+00, diff = 1.04839827468036e-01
iter = 38, step = 1.42395741346375e-01, func = 1.14492176272814e+05, norm = 7.16199057828931e+00, diff = 1.05410951593065e-01
iter = 39, step = 1.35275954279056e-01, func = 1.14492288433599e+05, norm = 6.28687727618436e+00, diff = 8.61313741836912e-02
iter = 40, step = 1.28512156565103e-01, func = 1.14492220201761e+05, norm = 6.59350861760506e+00, diff = 9.03716638373556e-02
iter = 41, step = 1.22086548736848e-01, func = 1.14492355634632e+05, norm = 5.08590265029958e+00, diff = 7.99698133183568e-02
iter = 42, step = 1.15982221300006e-01, func = 1.14492409777154e+05, norm = 5.75256656945042e+00, diff = 7.62922237954420e-02
iter = 43, step = 1.10183110235005e-01, func = 1.14492352279164e+05, norm = 7.08295145889542e+00, diff = 7.15768188427163e-02
iter = 44, step = 1.04673954723255e-01, func = 1.14492423157575e+05, norm = 5.65666022992008e+00, diff = 6.39931234067064e-02
iter = 45, step = 9.94402569870922e-02, func = 1.14492415559033e+05, norm = 6.08551881918227e+00, diff = 6.79122993995507e-02
iter = 46, step = 9.44682441377376e-02, func = 1.14492402407970e+05, norm = 6.32190901419047e+00, diff = 6.00063621757911e-02
iter = 47, step = 8.97448319308507e-02, func = 1.14492475235819e+05, norm = 4.46585667362004e+00, diff = 4.97163245185885e-02
iter = 48, step = 8.52575903343082e-02, func = 1.14492440205534e+05, norm = 5.30748759402109e+00, diff = 5.96209639584499e-02
iter = 49, step = 8.09947108175928e-02, func = 1.14492470690433e+05, norm = 5.23023338828677e+00, diff = 4.78489327233255e-02
iter = 50, step = 7.69449752767131e-02, func = 1.14492508416280e+05, norm = 4.50277384187697e+00, diff = 4.77958162620673e-02
iter = 51, step = 7.30977265128775e-02, func = 1.14492463565303e+05, norm = 6.07328663422893e+00, diff = 5.12549123346762e-02
iter = 52, step = 6.94428401872336e-02, func = 1.14492533464080e+05, norm = 5.20209617809782e+00, diff = 3.96765600454278e-02
iter = 53, step = 6.59706981778719e-02, func = 1.14492526054453e+05, norm = 6.21427880184947e+00, diff = 4.02581131662635e-02
iter = 54, step = 6.26721632689783e-02, func = 1.14492570458334e+05, norm = 4.66521465322525e+00, diff = 3.78938985958111e-02
iter = 55, step = 5.95385551055294e-02, func = 1.14492562682818e+05, norm = 4.52804347375466e+00, diff = 3.72872483338779e-02
iter = 56, step = 5.65616273502529e-02, func = 1.14492536511146e+05, norm = 5.49527472521765e+00, diff = 3.55395069046017e-02
iter = 57, step = 5.37335459827403e-02, func = 1.14492573750128e+05, norm = 4.38360951413433e+00, diff = 2.94620241545267e-02
iter = 58, step = 5.10468686836033e-02, func = 1.14492570991628e+05, norm = 4.92080337605124e+00, diff = 2.97682923847994e-02
iter = 59, step = 4.84945252494231e-02, func = 1.14492569963821e+05, norm = 4.59444071166306e+00, diff = 2.94750564047890e-02
iter = 60, step = 4.60697989869519e-02, func = 1.14492564272386e+05, norm = 4.32581657315577e+00, diff = 2.67661100126798e-02
iter = 61, step = 4.37663090376043e-02, func = 1.14492556369917e+05, norm = 5.04085484818664e+00, diff = 2.72100113059156e-02
iter = 62, step = 4.15779935857241e-02, func = 1.14492598983139e+05, norm = 3.48159539628899e+00, diff = 2.35894680065703e-02
iter = 63, step = 3.94990939064379e-02, func = 1.14492614187672e+05, norm = 4.32499491327316e+00, diff = 2.57145969541244e-02
iter = 64, step = 3.75241392111160e-02, func = 1.14492606030129e+05, norm = 5.21326276642179e+00, diff = 2.15024825024448e-02
iter = 65, step = 3.56479322505602e-02, func = 1.14492608621475e+05, norm = 4.75944243897987e+00, diff = 1.95857281833610e-02
iter = 66, step = 3.38655356380322e-02, func = 1.14492603404886e+05, norm = 3.85472291365770e+00, diff = 2.12859076274500e-02
iter = 67, step = 3.21722588561306e-02, func = 1.14492606191301e+05, norm = 4.01717038619975e+00, diff = 1.82778900400390e-02
iter = 68, step = 3.05636459133241e-02, func = 1.14492614657815e+05, norm = 3.87772958184621e+00, diff = 1.77538900142791e-02
iter = 69, step = 2.90354636176579e-02, func = 1.14492624142544e+05, norm = 3.67573057292245e+00, diff = 1.50772610492556e-02
iter = 70, step = 2.75836904367750e-02, func = 1.14492629961436e+05, norm = 3.03735598073911e+00, diff = 1.56709176200045e-02
iter = 71, step = 2.62045059149362e-02, func = 1.14492631867083e+05, norm = 3.69101856400339e+00, diff = 1.33819810535622e-02
iter = 72, step = 2.48942806191894e-02, func = 1.14492640187966e+05, norm = 3.71130785087120e+00, diff = 1.04686193346607e-02
iter = 73, step = 2.36495665882299e-02, func = 1.14492637735382e+05, norm = 3.69225636963755e+00, diff = 1.36874509719043e-02
iter = 74, step = 2.24670882588184e-02, func = 1.14492640608111e+05, norm = 3.50093964474269e+00, diff = 1.00856206268946e-02
iter = 75, step = 2.13437338458775e-02, func = 1.14492642417162e+05, norm = 2.82797460493682e+00, diff = 1.18791862532967e-02
iter = 76, step = 2.02765471535836e-02, func = 1.14492643652727e+05, norm = 3.21287073624842e+00, diff = 1.12047641408478e-02
iter = 77, step = 1.92627197959044e-02, func = 1.14492648295747e+05, norm = 2.61604683042921e+00, diff = 8.69595340586407e-03
iter = 78, step = 1.82995838061092e-02, func = 1.14492643472450e+05, norm = 3.50798827226979e+00, diff = 1.05196228397128e-02
iter = 79, step = 1.73846046158038e-02, func = 1.14492648255017e+05, norm = 2.86686587891703e+00, diff = 8.03947170568619e-03
iter = 80, step = 1.65153743850136e-02, func = 1.14492651141026e+05, norm = 2.35003463196548e+00, diff = 8.21476211209810e-03
iter = 81, step = 1.56896056657629e-02, func = 1.14492655793107e+05, norm = 2.71745849646034e+00, diff = 7.89060698007178e-03
iter = 82, step = 1.49051253824747e-02, func = 1.14492652687507e+05, norm = 2.65129719333744e+00, diff = 6.86438359399714e-03
iter = 83, step = 1.41598691133510e-02, func = 1.14492659648554e+05, norm = 2.69557831499261e+00, diff = 6.08229218672880e-03
iter = 84, step = 1.34518756576835e-02, func = 1.14492659420678e+05, norm = 2.31304365736520e+00, diff = 6.44145806196973e-03
iter = 85, step = 1.27792818747993e-02, func = 1.14492660224946e+05, norm = 3.20764383933250e+00, diff = 6.21560914950715e-03
iter = 86, step = 1.21403177810593e-02, func = 1.14492660560379e+05, norm = 2.23028838828774e+00, diff = 4.87962131474386e-03
iter = 87, step = 1.15333018920064e-02, func = 1.14492659626186e+05, norm = 2.40868106053180e+00, diff = 5.30696318753784e-03
iter = 88, step = 1.09566367974060e-02, func = 1.14492662798528e+05, norm = 1.87261720376936e+00, diff = 4.54206002111449e-03
iter = 89, step = 1.04088049575357e-02, func = 1.14492662689041e+05, norm = 2.02005033015045e+00, diff = 4.01964038839500e-03
iter = 90, step = 9.88836470965895e-03, func = 1.14492664986911e+05, norm = 2.06871466775872e+00, diff = 4.04737815265666e-03
iter = 91, step = 9.39394647417600e-03, func = 1.14492661644112e+05, norm = 3.32690792618524e+00, diff = 4.41580097508597e-03
iter = 92, step = 8.92424915046720e-03, func = 1.14492667277746e+05, norm = 2.28298308620627e+00, diff = 4.22310042142715e-03
iter = 93, step = 8.47803669294384e-03, func = 1.14492664019813e+05, norm = 2.42126547670386e+00, diff = 4.90714451347801e-03
iter = 94, step = 8.05413485829665e-03, func = 1.14492666953285e+05, norm = 2.32145083161759e+00, diff = 3.54836029110138e-03
iter = 95, step = 7.65142811538181e-03, func = 1.14492668775705e+05, norm = 1.98284376218572e+00, diff = 3.05350110954868e-03
iter = 96, step = 7.26885670961272e-03, func = 1.14492667877753e+05, norm = 2.09914911179289e+00, diff = 3.39593209380338e-03
iter = 97, step = 6.90541387413209e-03, func = 1.14492669396800e+05, norm = 1.47693455257252e+00, diff = 2.74415570627137e-03
iter = 98, step = 6.56014318042548e-03, func = 1.14492668703205e+05, norm = 2.35397927758402e+00, diff = 2.72788715480771e-03
iter = 99, step = 6.23213602140421e-03, func = 1.14492669214022e+05, norm = 2.50763287064840e+00, diff = 2.62643119970340e-03
iter = 100, step = 5.92052922033400e-03, func = 1.14492669822650e+05, norm = 2.35584031239548e+00, diff = 2.62272608220907e-03
iter = 101, step = 5.62450275931730e-03, func = 1.14492670352341e+05, norm = 2.02682497211172e+00, diff = 2.53945345869064e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.144927e+05
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 27, while k = 27 and n = 67
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 1.80408e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 4489
Number of centers left            = 67
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 4489 variables
Optimize a model with 4691 rows, 4556 columns and 18224 nonzeros
Variable types: 67 continuous, 4489 integer (4489 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+06]
  Objective range  [8e+00, 2e+06]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 3e+01]
Presolve removed 0 rows and 476 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.003011 seconds
Total time elapsed: 0.067290 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running GA'
Running GA
+ /home/lykhovyd/progs/districting/districting myconfig.txt GA /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/GA.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/GA/counties/graph/GA.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/GA/counties/graph/GA_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/GA/counties/graph/GA.population
state[2]        = GA
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/GA.ralg_hot
nr_comp = 1
graph: 159 nodes, 418 edges (read)
Model input: L = 688516, U = 695435, k = 14.
Graph is connected.
Model input: total population = 9687653
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.71035097612922e+04, norm = 1.76842355550616e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.71028061188311e+04, norm = 1.45433052269226e+01, diff = 7.24602558284150e-01
iter = 3, step = 8.57375000000000e-01, func = 1.71053695418699e+04, norm = 1.07424128115758e+01, diff = 6.70466283170346e-01
iter = 4, step = 8.14506250000000e-01, func = 1.71037200648082e+04, norm = 1.42750510856918e+01, diff = 6.85732894046111e-01
iter = 5, step = 7.73780937500000e-01, func = 1.71056583304574e+04, norm = 9.58617200766731e+00, diff = 5.46730044875842e-01
iter = 6, step = 7.35091890625000e-01, func = 1.71053563989202e+04, norm = 1.18119194461826e+01, diff = 5.70466708774034e-01
iter = 7, step = 6.98337296093750e-01, func = 1.71061160455337e+04, norm = 8.59350156348808e+00, diff = 5.15371092706059e-01
iter = 8, step = 6.63420431289062e-01, func = 1.71062176913264e+04, norm = 1.18252891443340e+01, diff = 5.31467424152835e-01
iter = 9, step = 6.30249409724609e-01, func = 1.71058388682446e+04, norm = 1.09451779219302e+01, diff = 4.37058315662154e-01
iter = 10, step = 5.98736939238379e-01, func = 1.71070704911708e+04, norm = 7.93240679945973e+00, diff = 4.59953174547162e-01
iter = 11, step = 5.68800092276460e-01, func = 1.71068247085090e+04, norm = 8.71745846609008e+00, diff = 4.06798193572386e-01
iter = 12, step = 5.40360087662637e-01, func = 1.71075560784165e+04, norm = 7.96785177925900e+00, diff = 3.93075025955338e-01
iter = 13, step = 5.13342083279505e-01, func = 1.71073510726739e+04, norm = 7.49159684298551e+00, diff = 3.52585607658437e-01
iter = 14, step = 4.87674979115529e-01, func = 1.71073717981596e+04, norm = 6.55027011457567e+00, diff = 3.44234019661381e-01
iter = 15, step = 4.63291230159753e-01, func = 1.71074777752148e+04, norm = 6.65876905883637e+00, diff = 3.21327673663016e-01
iter = 16, step = 4.40126668651765e-01, func = 1.71075160255434e+04, norm = 9.44271626006679e+00, diff = 3.28539013199424e-01
iter = 17, step = 4.18120335219177e-01, func = 1.71079225204158e+04, norm = 7.17612049005065e+00, diff = 2.56199368750684e-01
iter = 18, step = 3.97214318458218e-01, func = 1.71079101580996e+04, norm = 7.29091401133805e+00, diff = 2.95959455648979e-01
iter = 19, step = 3.77353602535307e-01, func = 1.71075824826013e+04, norm = 7.67807741289760e+00, diff = 2.75780355597817e-01
iter = 20, step = 3.58485922408542e-01, func = 1.71080362668128e+04, norm = 5.79657943292885e+00, diff = 2.50963605677926e-01
iter = 21, step = 3.40561626288115e-01, func = 1.71078740911131e+04, norm = 7.24835988718061e+00, diff = 2.50305811638074e-01
iter = 22, step = 3.23533544973709e-01, func = 1.71082108088908e+04, norm = 6.69285197678394e+00, diff = 2.26282927293264e-01
iter = 23, step = 3.07356867725023e-01, func = 1.71079880580873e+04, norm = 6.66449871134449e+00, diff = 2.31064690644898e-01
iter = 24, step = 2.91989024338772e-01, func = 1.71081384151131e+04, norm = 5.67252777391661e+00, diff = 1.94288797980198e-01
iter = 25, step = 2.77389573121834e-01, func = 1.71081657307921e+04, norm = 5.45019505999986e+00, diff = 1.96631250019230e-01
iter = 26, step = 2.63520094465742e-01, func = 1.71081631435572e+04, norm = 6.02574960478643e+00, diff = 1.90342316531253e-01
iter = 27, step = 2.50344089742455e-01, func = 1.71082665544643e+04, norm = 6.71096716224943e+00, diff = 1.54885510727599e-01
iter = 28, step = 2.37826885255332e-01, func = 1.71083743796549e+04, norm = 5.67556176552905e+00, diff = 1.61860937993909e-01
iter = 29, step = 2.25935540992565e-01, func = 1.71083873633835e+04, norm = 6.03356742308601e+00, diff = 1.57043033995042e-01
iter = 30, step = 2.14638763942937e-01, func = 1.71083731734255e+04, norm = 5.22214831724742e+00, diff = 1.40217359624231e-01
iter = 31, step = 2.03906825745790e-01, func = 1.71083844778367e+04, norm = 5.67321217916295e+00, diff = 1.37226056358194e-01
iter = 32, step = 1.93711484458501e-01, func = 1.71083784712105e+04, norm = 4.70610205159799e+00, diff = 1.25518690085919e-01
iter = 33, step = 1.84025910235576e-01, func = 1.71084969721497e+04, norm = 4.24825368992709e+00, diff = 1.15413596290358e-01
iter = 34, step = 1.74824614723797e-01, func = 1.71084512804674e+04, norm = 4.89032704642125e+00, diff = 1.10870208194056e-01
iter = 35, step = 1.66083383987607e-01, func = 1.71085002418848e+04, norm = 5.02283662764886e+00, diff = 1.11650967636442e-01
iter = 36, step = 1.57779214788227e-01, func = 1.71084934625894e+04, norm = 4.79265762670944e+00, diff = 1.06320157927401e-01
iter = 37, step = 1.49890254048815e-01, func = 1.71085249268653e+04, norm = 4.46093810904099e+00, diff = 9.66219467542361e-02
iter = 38, step = 1.42395741346375e-01, func = 1.71085388113698e+04, norm = 4.40312867554715e+00, diff = 1.02529034564505e-01
iter = 39, step = 1.35275954279056e-01, func = 1.71085359896301e+04, norm = 4.60849192792188e+00, diff = 8.62272376854168e-02
iter = 40, step = 1.28512156565103e-01, func = 1.71086242811689e+04, norm = 4.21078263012293e+00, diff = 7.47753337311653e-02
iter = 41, step = 1.22086548736848e-01, func = 1.71085760528247e+04, norm = 4.63049349619704e+00, diff = 7.94281268678314e-02
iter = 42, step = 1.15982221300006e-01, func = 1.71086037620224e+04, norm = 3.82981896188478e+00, diff = 8.07846291600011e-02
iter = 43, step = 1.10183110235005e-01, func = 1.71085702615243e+04, norm = 4.55743655994184e+00, diff = 7.61168160122623e-02
iter = 44, step = 1.04673954723255e-01, func = 1.71086453849569e+04, norm = 3.36832811301440e+00, diff = 6.75225801381090e-02
iter = 45, step = 9.94402569870922e-02, func = 1.71086206860738e+04, norm = 3.83858654222051e+00, diff = 7.04027478682686e-02
iter = 46, step = 9.44682441377376e-02, func = 1.71086704151747e+04, norm = 3.03499227688079e+00, diff = 5.72164420103859e-02
iter = 47, step = 8.97448319308507e-02, func = 1.71086800410906e+04, norm = 3.89103343960105e+00, diff = 6.07577277004439e-02
iter = 48, step = 8.52575903343082e-02, func = 1.71086775828975e+04, norm = 4.18029005245531e+00, diff = 5.17290614313973e-02
iter = 49, step = 8.09947108175928e-02, func = 1.71086743007037e+04, norm = 3.64645971754331e+00, diff = 4.81437144731212e-02
iter = 50, step = 7.69449752767131e-02, func = 1.71086891341451e+04, norm = 3.62031420584879e+00, diff = 4.67175332988220e-02
iter = 51, step = 7.30977265128775e-02, func = 1.71086779643755e+04, norm = 4.00931582718289e+00, diff = 4.43489163790844e-02
iter = 52, step = 6.94428401872336e-02, func = 1.71087057611000e+04, norm = 3.87482026604037e+00, diff = 4.46569415981899e-02
iter = 53, step = 6.59706981778719e-02, func = 1.71087138745212e+04, norm = 3.60866204262521e+00, diff = 4.28372121506754e-02
iter = 54, step = 6.26721632689783e-02, func = 1.71087206766048e+04, norm = 3.40016990694671e+00, diff = 3.73127784770676e-02
iter = 55, step = 5.95385551055294e-02, func = 1.71087315032011e+04, norm = 3.12913057452086e+00, diff = 3.81523723964686e-02
iter = 56, step = 5.65616273502529e-02, func = 1.71087224753375e+04, norm = 3.15483444369695e+00, diff = 3.26474988203703e-02
iter = 57, step = 5.37335459827403e-02, func = 1.71087184852417e+04, norm = 3.40622689237666e+00, diff = 3.30686419348712e-02
iter = 58, step = 5.10468686836033e-02, func = 1.71087369534854e+04, norm = 2.76688463863005e+00, diff = 3.06039569015406e-02
iter = 59, step = 4.84945252494231e-02, func = 1.71087527150501e+04, norm = 2.98107035548039e+00, diff = 2.84696527826193e-02
iter = 60, step = 4.60697989869519e-02, func = 1.71087385618226e+04, norm = 3.41092030675460e+00, diff = 3.09547436443257e-02
iter = 61, step = 4.37663090376043e-02, func = 1.71087554715977e+04, norm = 3.07980541166821e+00, diff = 2.34202516411896e-02
iter = 62, step = 4.15779935857241e-02, func = 1.71087541106106e+04, norm = 2.83468743294259e+00, diff = 2.53016174816281e-02
iter = 63, step = 3.94990939064379e-02, func = 1.71087665986067e+04, norm = 2.71986686934005e+00, diff = 2.23763497655547e-02
iter = 64, step = 3.75241392111160e-02, func = 1.71087645758852e+04, norm = 2.76961101187583e+00, diff = 2.25871360456157e-02
iter = 65, step = 3.56479322505602e-02, func = 1.71087523436428e+04, norm = 2.62730418155303e+00, diff = 2.01511464698152e-02
iter = 66, step = 3.38655356380322e-02, func = 1.71087638101285e+04, norm = 2.27266598858300e+00, diff = 2.05748021780499e-02
iter = 67, step = 3.21722588561306e-02, func = 1.71087616190881e+04, norm = 2.38003272070798e+00, diff = 1.97464076009716e-02
iter = 68, step = 3.05636459133241e-02, func = 1.71087707187221e+04, norm = 2.67391865350836e+00, diff = 1.79335082829755e-02
iter = 69, step = 2.90354636176579e-02, func = 1.71087767054431e+04, norm = 2.27221110448758e+00, diff = 1.59447975377926e-02
iter = 70, step = 2.75836904367750e-02, func = 1.71087728130640e+04, norm = 2.20866203789457e+00, diff = 1.91631741770123e-02
iter = 71, step = 2.62045059149362e-02, func = 1.71087688463423e+04, norm = 2.06109325153508e+00, diff = 1.57073280974856e-02
iter = 72, step = 2.48942806191894e-02, func = 1.71087748189744e+04, norm = 2.14241001801235e+00, diff = 1.30547014756981e-02
iter = 73, step = 2.36495665882299e-02, func = 1.71087763560132e+04, norm = 1.95900508230865e+00, diff = 1.39443040668689e-02
iter = 74, step = 2.24670882588184e-02, func = 1.71087847095920e+04, norm = 1.45464062968680e+00, diff = 1.31149993016593e-02
iter = 75, step = 2.13437338458775e-02, func = 1.71087782646292e+04, norm = 2.06842709794442e+00, diff = 1.25522508014137e-02
iter = 76, step = 2.02765471535836e-02, func = 1.71087799979794e+04, norm = 2.03033514817542e+00, diff = 9.93892976432209e-03
iter = 77, step = 1.92627197959044e-02, func = 1.71087841857903e+04, norm = 1.41929458237360e+00, diff = 9.68563111818423e-03
iter = 78, step = 1.82995838061092e-02, func = 1.71087842944232e+04, norm = 1.51395476062915e+00, diff = 1.07447198021767e-02
iter = 79, step = 1.73846046158038e-02, func = 1.71087797019131e+04, norm = 1.95871146256128e+00, diff = 9.27224120073366e-03
iter = 80, step = 1.73846046158038e-02, func = 1.71087833203076e+04, norm = 1.98444973359612e+00, diff = 1.66992083076675e-02
iter = 81, step = 1.65153743850136e-02, func = 1.71087868990051e+04, norm = 1.78701215068330e+00, diff = 9.85845081722054e-03
iter = 82, step = 1.56896056657629e-02, func = 1.71087868832223e+04, norm = 1.79572058393578e+00, diff = 8.81027110361197e-03
iter = 83, step = 1.49051253824747e-02, func = 1.71087895317423e+04, norm = 1.47202664258373e+00, diff = 8.62465630494024e-03
iter = 84, step = 1.41598691133510e-02, func = 1.71087855717352e+04, norm = 1.75374712662946e+00, diff = 7.60380559576426e-03
iter = 85, step = 1.34518756576835e-02, func = 1.71087880432346e+04, norm = 1.18829306603130e+00, diff = 6.80795118051415e-03
iter = 86, step = 1.27792818747993e-02, func = 1.71087891543289e+04, norm = 1.67249136646164e+00, diff = 7.87520897509750e-03
iter = 87, step = 1.21403177810593e-02, func = 1.71087876220591e+04, norm = 1.66606728953460e+00, diff = 5.71431241925764e-03
iter = 88, step = 1.15333018920064e-02, func = 1.71087912726728e+04, norm = 9.50356114211075e-01, diff = 5.95365748157447e-03
iter = 89, step = 1.09566367974060e-02, func = 1.71087900899604e+04, norm = 1.43396193259588e+00, diff = 7.19184934751577e-03
iter = 90, step = 1.04088049575357e-02, func = 1.71087921383665e+04, norm = 1.31649426395847e+00, diff = 4.91189345275444e-03
iter = 91, step = 9.88836470965895e-03, func = 1.71087900650707e+04, norm = 1.50954017591602e+00, diff = 5.10101272559029e-03
iter = 92, step = 9.39394647417600e-03, func = 1.71087917517344e+04, norm = 8.62826356557219e-01, diff = 4.70138968748931e-03
iter = 93, step = 8.92424915046720e-03, func = 1.71087925133449e+04, norm = 1.00158178859857e+00, diff = 4.80252323763339e-03
iter = 94, step = 8.47803669294384e-03, func = 1.71087936842249e+04, norm = 5.74921899584238e-01, diff = 4.06095836530680e-03
iter = 95, step = 8.05413485829665e-03, func = 1.71087936834272e+04, norm = 7.47932613484989e-01, diff = 5.20434430236155e-03
iter = 96, step = 7.65142811538181e-03, func = 1.71087937446980e+04, norm = 8.01708848418428e-01, diff = 3.70202381889697e-03
iter = 97, step = 7.26885670961272e-03, func = 1.71087952496464e+04, norm = 8.27697371337260e-01, diff = 3.28239024023138e-03
iter = 98, step = 6.90541387413209e-03, func = 1.71087948552191e+04, norm = 9.59757379567179e-01, diff = 3.26962701608703e-03
iter = 99, step = 6.56014318042548e-03, func = 1.71087947389992e+04, norm = 8.06479908365163e-01, diff = 2.62692958472987e-03
iter = 100, step = 6.23213602140421e-03, func = 1.71087957718193e+04, norm = 6.81339458958306e-01, diff = 3.05400519219612e-03
iter = 101, step = 5.92052922033400e-03, func = 1.71087962534892e+04, norm = 6.63470633475545e-01, diff = 2.31691428711255e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.710883e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 14, while k = 14 and n = 159
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 1.00631e-318
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 25281
Number of centers left            = 159
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 25281 variables
Optimize a model with 25759 rows, 25440 columns and 101760 nonzeros
Variable types: 159 continuous, 25281 integer (25281 binary)
Coefficient statistics:
  Matrix range     [1e+00, 9e+05]
  Objective range  [1e+00, 2e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+01]
Presolve removed 0 rows and 320 columns
Presolve time: 0.01s

Explored 0 nodes (0 simplex iterations) in 0.02 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.015863 seconds
Total time elapsed: 0.326310 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running HI'
Running HI
+ /home/lykhovyd/progs/districting/districting myconfig.txt HI /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/HI.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/HI/counties/graph/HI.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/HI/counties/graph/HI_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/HI/counties/graph/HI.population
state[2]        = HI
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/HI.ralg_hot
nr_comp = 4
graph: 5 nodes, 1 edges (read)
Model input: L = 676750, U = 683551, k = 2.
Input graph is disconnected; adding these edges to make it connected: { 0, 2 } { 4, 3 } { 1, 3 }
Model input: total population = 1360301
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 4.26139591483991e+05, norm = 3.17237341907945e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 4.26139652911225e+05, norm = 1.84428577488145e+00, diff = 7.47450319810813e-01
iter = 3, step = 1.08300000000000e+00, func = 4.26140155879596e+05, norm = 1.38515361399366e+00, diff = 1.92226850364000e+00
iter = 4, step = 1.02885000000000e+00, func = 4.26139574940358e+05, norm = 1.87174314137573e+00, diff = 7.31414115059282e-01
iter = 5, step = 1.02885000000000e+00, func = 4.26140332231277e+05, norm = 1.25278680499239e+00, diff = 9.50865432487401e-01
iter = 6, step = 1.02885000000000e+00, func = 4.26140382687816e+05, norm = 6.19444551579938e-01, diff = 4.91674705336432e-01
iter = 7, step = 9.77407500000000e-01, func = 4.26140333567142e+05, norm = 4.85418501096576e-01, diff = 2.56716367954707e-01
iter = 8, step = 1.17288900000000e+00, func = 4.26140414289873e+05, norm = 1.91812838305408e+00, diff = 3.95053318404600e-01
iter = 9, step = 1.11424455000000e+00, func = 4.26140427866312e+05, norm = 9.95737055669762e-01, diff = 6.07450966108773e-01
iter = 10, step = 1.05853232250000e+00, func = 4.26140504350305e+05, norm = 2.39375781940250e-01, diff = 1.72802272366643e-01
iter = 11, step = 1.05853232250000e+00, func = 4.26140497482677e+05, norm = 3.25933382517593e-01, diff = 2.58160299807485e-01
iter = 12, step = 1.05853232250000e+00, func = 4.26140568289312e+05, norm = 1.74290689092164e-01, diff = 2.62665148151375e-01
iter = 13, step = 1.05853232250000e+00, func = 4.26140615249193e+05, norm = 1.03407044383352e-01, diff = 3.84438812082886e-01
iter = 14, step = 1.00560570637500e+00, func = 4.26140618041475e+05, norm = 8.54968108591025e-02, diff = 1.89624694549685e-01
iter = 15, step = 9.55325421056250e-01, func = 4.26140614184622e+05, norm = 7.13930885328723e-01, diff = 1.78491272129948e-01
iter = 16, step = 9.07559150003437e-01, func = 4.26140651102923e+05, norm = 3.59687683758336e-01, diff = 4.55744802847653e-01
iter = 17, step = 8.62181192503265e-01, func = 4.26140649743800e+05, norm = 6.47498586982207e-02, diff = 7.80610865944588e-02
iter = 18, step = 8.19072132878102e-01, func = 4.26140649851615e+05, norm = 3.87958420019795e-02, diff = 1.04016689279688e-01
iter = 19, step = 8.19072132878102e-01, func = 4.26140651861044e+05, norm = 4.16876847138554e-02, diff = 2.61012189923618e-01
iter = 20, step = 7.78118526234197e-01, func = 4.26140633538436e+05, norm = 4.24075690045311e-01, diff = 1.43753411936003e-01
iter = 21, step = 7.39212599922487e-01, func = 4.26140661707159e+05, norm = 2.12412912926504e-01, diff = 2.17058225336596e-01
iter = 22, step = 7.02251969926363e-01, func = 4.26140660913303e+05, norm = 2.69395645807542e-02, diff = 2.21661825383117e-02
iter = 23, step = 6.67139371430044e-01, func = 4.26140665746702e+05, norm = 1.14900168999760e-02, diff = 4.56641776105960e-02
iter = 24, step = 6.33782402858542e-01, func = 4.26140664373058e+05, norm = 1.44538583998305e-02, diff = 5.78771934523075e-02
iter = 25, step = 6.33782402858542e-01, func = 4.26140667553232e+05, norm = 7.22692919991523e-03, diff = 1.14810960379706e-01
iter = 26, step = 6.02093282715615e-01, func = 4.26140639961944e+05, norm = 1.79324887764412e-01, diff = 1.20758262346508e-01
iter = 27, step = 5.71988618579834e-01, func = 4.26140668549458e+05, norm = 8.97764906643459e-02, diff = 7.08983092697050e-02
iter = 28, step = 5.43389187650842e-01, func = 4.26140668070492e+05, norm = 9.61131656290809e-03, diff = 1.93427621061605e-02
iter = 29, step = 5.43389187650842e-01, func = 4.26140660212773e+05, norm = 1.06150212213865e-01, diff = 5.86326439678881e-02
iter = 30, step = 5.16219728268300e-01, func = 4.26140668660534e+05, norm = 5.31628990945947e-02, diff = 3.78188045168402e-02
iter = 31, step = 4.90408741854885e-01, func = 4.26140669288439e+05, norm = 2.83609498586824e-03, diff = 1.12092947920646e-02
iter = 32, step = 4.90408741854885e-01, func = 4.26140664249955e+05, norm = 4.49804711127730e-02, diff = 1.70942555682242e-02
iter = 33, step = 4.65888304762141e-01, func = 4.26140668823389e+05, norm = 2.26500883213609e-02, diff = 1.45066181792296e-02
iter = 34, step = 4.42593889524034e-01, func = 4.26140669522477e+05, norm = 3.00887744745046e-03, diff = 2.46100264060906e-03
iter = 35, step = 4.20464195047832e-01, func = 4.26140669701367e+05, norm = 1.50443872372519e-03, diff = 5.46616278806427e-03
iter = 36, step = 3.99440985295441e-01, func = 4.26140669827465e+05, norm = 1.61420391960651e-03, diff = 5.25774767955589e-03
iter = 37, step = 3.79468936030669e-01, func = 4.26140668143292e+05, norm = 2.65829573220167e-02, diff = 6.61650778491011e-03
iter = 38, step = 3.60495489229135e-01, func = 4.26140669865274e+05, norm = 1.33083071093450e-02, diff = 6.61267969897744e-03
iter = 39, step = 3.42470714767678e-01, func = 4.26140669793454e+05, norm = 1.37288064025987e-03, diff = 1.22817264271843e-03
iter = 40, step = 3.42470714767678e-01, func = 4.26140669911964e+05, norm = 6.86440320129944e-04, diff = 2.81293616048653e-03
iter = 41, step = 3.25347179029294e-01, func = 4.26140668084957e+05, norm = 1.13044085253661e-02, diff = 3.50811724034295e-03
iter = 42, step = 3.25347179029294e-01, func = 4.26140669938700e+05, norm = 5.65220426268304e-03, diff = 4.82647214735664e-03
iter = 43, step = 3.25347179029294e-01, func = 4.26140669355516e+05, norm = 6.67145292451348e-03, diff = 2.73148893647132e-03
iter = 44, step = 3.09079820077830e-01, func = 4.26140669938517e+05, norm = 3.34707775015227e-03, diff = 1.41884450522868e-03
iter = 45, step = 3.09079820077830e-01, func = 4.26140669949242e+05, norm = 3.42132790091856e-04, diff = 3.75289611692694e-04
iter = 46, step = 3.09079820077830e-01, func = 4.26140669974367e+05, norm = 3.88406110079314e-04, diff = 1.01509588869960e-03
iter = 47, step = 2.93625829073938e-01, func = 4.26140669980946e+05, norm = 4.09252285320194e-04, diff = 1.46443280453079e-04
iter = 48, step = 2.78944537620241e-01, func = 4.26140669993814e+05, norm = 1.40924397042241e-04, diff = 3.17033237208953e-04
iter = 49, step = 2.64997310739229e-01, func = 4.26140669675785e+05, norm = 3.28473516362781e-03, diff = 5.66580653528644e-04
iter = 50, step = 2.51747445202268e-01, func = 4.26140670001880e+05, norm = 1.64495990367523e-03, diff = 4.67761234053467e-04
iter = 51, step = 2.39160072942154e-01, func = 4.26140669998231e+05, norm = 1.16601387702695e-04, diff = 2.47970959737641e-05
iter = 52, step = 2.27202069295047e-01, func = 4.26140670000139e+05, norm = 7.00894231974316e-05, diff = 5.13801221171568e-05
iter = 53, step = 2.15841965830294e-01, func = 4.26140669993355e+05, norm = 1.45527830118427e-03, diff = 5.49000038121266e-05
iter = 54, step = 2.05049867538780e-01, func = 4.26140669868863e+05, norm = 1.61511024582561e-03, diff = 2.61671330305238e-04
iter = 55, step = 2.05049867538780e-01, func = 4.26140670005142e+05, norm = 6.15022304113180e-04, diff = 3.29182099396456e-04
iter = 56, step = 1.94797374161841e-01, func = 4.26140670003792e+05, norm = 6.69916790775033e-05, diff = 2.67291016885589e-05
iter = 57, step = 1.85057505453749e-01, func = 4.26140670006597e+05, norm = 3.92331439393472e-05, diff = 2.98318004223395e-05
iter = 58, step = 1.75804630181061e-01, func = 4.26140670006969e+05, norm = 3.86590390495249e-05, diff = 3.06496559382463e-05
iter = 59, step = 1.75804630181061e-01, func = 4.26140670005606e+05, norm = 4.82089063889676e-04, diff = 1.03096201138909e-04
iter = 60, step = 1.67014398672008e-01, func = 4.26140670007479e+05, norm = 2.41326974845074e-04, diff = 5.53352657274277e-05
iter = 61, step = 1.58663678738408e-01, func = 4.26140670007995e+05, norm = 1.78566204619685e-05, diff = 2.04395150290677e-05
iter = 62, step = 1.58663678738408e-01, func = 4.26140670008603e+05, norm = 1.56668204480991e-05, diff = 5.21209200701229e-05
iter = 63, step = 1.50730494801487e-01, func = 4.26140669992318e+05, norm = 3.07262750008754e-04, diff = 3.32595916415324e-05
iter = 64, step = 1.43193970061413e-01, func = 4.26140670009335e+05, norm = 1.53987630437864e-04, diff = 3.03815628301124e-05
iter = 65, step = 1.36034271558342e-01, func = 4.26140670008819e+05, norm = 1.67184257068586e-05, diff = 4.30461827513121e-06
iter = 66, step = 1.63241125870011e-01, func = 4.26140670009047e+05, norm = 7.78996458250133e-05, diff = 1.72209716441491e-05
iter = 67, step = 1.55079069576510e-01, func = 4.26140670009101e+05, norm = 3.91978376702006e-05, diff = 8.29127066813371e-06
iter = 68, step = 1.47325116097685e-01, func = 4.26140670009544e+05, norm = 5.94456442767627e-06, diff = 9.14796921007584e-06
iter = 69, step = 1.39958860292800e-01, func = 4.26140670008371e+05, norm = 1.20643916282752e-04, diff = 9.65914260401868e-06
iter = 70, step = 1.32960917278160e-01, func = 4.26140670009660e+05, norm = 6.03660826070829e-05, diff = 1.10715244215827e-05
iter = 71, step = 1.26312871414252e-01, func = 4.26140670009719e+05, norm = 5.25541741740592e-06, diff = 7.75184134783566e-07
iter = 72, step = 1.19997227843540e-01, func = 4.26140670009778e+05, norm = 3.92768129991850e-06, diff = 8.81993801308814e-07
iter = 73, step = 1.13997366451363e-01, func = 4.26140670009856e+05, norm = 2.27164362985407e-06, diff = 1.34921094318518e-06
iter = 74, step = 1.08297498128795e-01, func = 4.26140670009838e+05, norm = 2.48352450269917e-06, diff = 1.58011647808237e-06
iter = 75, step = 1.08297498128795e-01, func = 4.26140670009908e+05, norm = 1.24176225134212e-06, diff = 3.35405531759897e-06
iter = 76, step = 1.02882623222355e-01, func = 4.26140670009358e+05, norm = 3.01776027892800e-05, diff = 3.47013221802359e-06
iter = 77, step = 9.77384920612371e-02, func = 4.26140670009939e+05, norm = 1.50888013946400e-05, diff = 2.03151493998748e-06
iter = 78, step = 9.77384920612371e-02, func = 4.26140670009822e+05, norm = 1.95526974272465e-05, diff = 3.30243860684372e-06
iter = 79, step = 9.28515674581752e-02, func = 4.26140670009961e+05, norm = 9.81472568152699e-06, diff = 1.25536435941114e-06
iter = 80, step = 8.82089890852665e-02, func = 4.26140670009940e+05, norm = 1.58005293372761e-06, diff = 7.95758706299625e-08
iter = 81, step = 8.82089890852665e-02, func = 4.26140670009975e+05, norm = 7.90026466893221e-07, diff = 4.06274770507812e-07
iter = 82, step = 8.37985396310031e-02, func = 4.26140670009977e+05, norm = 3.71119978409300e-07, diff = 3.08668016514298e-07
iter = 83, step = 7.96086126494530e-02, func = 4.26140670009788e+05, norm = 7.54439493891350e-06, diff = 3.99970554279324e-07
iter = 84, step = 7.56281820169803e-02, func = 4.26140670009990e+05, norm = 3.77219746945675e-06, diff = 3.93093680909348e-07
iter = 85, step = 7.18467729161313e-02, func = 4.26140670009984e+05, norm = 3.35883707054593e-07, diff = 1.56666908177851e-07
iter = 86, step = 7.18467729161313e-02, func = 4.26140670009992e+05, norm = 2.33204993630024e-07, diff = 3.62695446846252e-07
iter = 87, step = 6.82544342703247e-02, func = 4.26140670009891e+05, norm = 4.90265652669413e-06, diff = 2.61592733345232e-07
iter = 88, step = 6.48417125568085e-02, func = 4.26140670009997e+05, norm = 2.45132826336639e-06, diff = 2.19904953846945e-07
iter = 89, step = 6.15996269289681e-02, func = 4.26140670009976e+05, norm = 1.89165438839569e-06, diff = 4.48537135538094e-08
iter = 90, step = 5.85196455825197e-02, func = 4.26140670009996e+05, norm = 9.51318275716248e-07, diff = 7.63761873400293e-08
iter = 91, step = 5.55936633033937e-02, func = 4.26140670009996e+05, norm = 2.59170675925004e-07, diff = 1.93236769497574e-08
iter = 92, step = 5.28139801382240e-02, func = 4.26140670009999e+05, norm = 1.29585337958744e-07, diff = 1.09741714341824e-08
iter = 93, step = 5.01732811313128e-02, func = 4.26140670009996e+05, norm = 1.22734902979709e-06, diff = 4.11806195928308e-08
iter = 94, step = 4.76646170747471e-02, func = 4.26140670009999e+05, norm = 6.16396586812527e-07, diff = 4.04499654584362e-08
iter = 95, step = 4.52813862210098e-02, func = 4.26140670009997e+05, norm = 1.15991530470344e-07, diff = 4.66401393978201e-09
iter = 96, step = 4.52813862210098e-02, func = 4.26140670009999e+05, norm = 4.35618730057762e-08, diff = 9.09632731064152e-09
iter = 97, step = 4.30173169099593e-02, func = 4.26140670009999e+05, norm = 4.31379435926121e-08, diff = 7.42262528835691e-09
iter = 98, step = 4.30173169099593e-02, func = 4.26140670010000e+05, norm = 3.02130244921050e-08, diff = 1.79333351255285e-08
iter = 99, step = 4.08664510644613e-02, func = 4.26140670009995e+05, norm = 4.75087020922005e-07, diff = 1.37526968763668e-08
iter = 100, step = 3.88231285112383e-02, func = 4.26140670010000e+05, norm = 2.37917147473103e-07, diff = 1.27116893678060e-08
iter = 101, step = 3.68819720856763e-02, func = 4.26140670009999e+05, norm = 3.10124214682934e-08, diff = 3.96163527684281e-09
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 4.261407e+05
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 5
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 1.21046e-321
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 25
Number of centers left            = 5
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 25 variables
Optimize a model with 41 rows, 30 columns and 120 nonzeros
Variable types: 5 continuous, 25 integer (25 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+06]
  Objective range  [2e-01, 1e+06]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 2e+00]
Presolve removed 0 rows and 10 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.000160 seconds
Total time elapsed: 0.003808 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running IA'
Running IA
+ /home/lykhovyd/progs/districting/districting myconfig.txt IA /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/IA.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/IA/counties/graph/IA.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/IA/counties/graph/IA_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/IA/counties/graph/IA.population
state[2]        = IA
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/IA.ralg_hot
nr_comp = 1
graph: 99 nodes, 222 edges (read)
Model input: L = 757781, U = 765396, k = 4.
Graph is connected.
Model input: total population = 3046355
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.74306705468354e+04, norm = 1.60702608731062e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 1.74368231448236e+04, norm = 5.94675794030306e+00, diff = 1.06413580818917e+00
iter = 3, step = 9.02500000000000e-01, func = 1.74364172528204e+04, norm = 5.69843484494172e+00, diff = 7.85045316588667e-01
iter = 4, step = 8.57375000000000e-01, func = 1.74373464870063e+04, norm = 6.78938710200312e+00, diff = 4.71329653896752e-01
iter = 5, step = 8.14506250000000e-01, func = 1.74371680618795e+04, norm = 4.77865570967590e+00, diff = 5.45053688058069e-01
iter = 6, step = 7.73780937500000e-01, func = 1.74373327280723e+04, norm = 5.08361685816286e+00, diff = 5.72186047844204e-01
iter = 7, step = 7.35091890625000e-01, func = 1.74375107314053e+04, norm = 4.14926871191721e+00, diff = 5.43577683362618e-01
iter = 8, step = 6.98337296093750e-01, func = 1.74375178116768e+04, norm = 3.76946197293373e+00, diff = 5.16692065726267e-01
iter = 9, step = 6.63420431289062e-01, func = 1.74376949094986e+04, norm = 4.19930144497352e+00, diff = 4.72512268617646e-01
iter = 10, step = 6.30249409724609e-01, func = 1.74375643633371e+04, norm = 4.52029625585034e+00, diff = 4.08284019745037e-01
iter = 11, step = 5.98736939238379e-01, func = 1.74379795820944e+04, norm = 3.74807957175204e+00, diff = 4.56079619992156e-01
iter = 12, step = 5.68800092276460e-01, func = 1.74377129935365e+04, norm = 3.49220377977429e+00, diff = 3.55083556121972e-01
iter = 13, step = 5.40360087662637e-01, func = 1.74379992745728e+04, norm = 2.56132879157168e+00, diff = 3.77730186036525e-01
iter = 14, step = 5.13342083279505e-01, func = 1.74379180734534e+04, norm = 3.22601251603101e+00, diff = 3.77269734578450e-01
iter = 15, step = 4.87674979115529e-01, func = 1.74381728535728e+04, norm = 3.47436254706494e+00, diff = 3.32910373052692e-01
iter = 16, step = 4.63291230159753e-01, func = 1.74380311217349e+04, norm = 3.08654282091349e+00, diff = 2.68845146201409e-01
iter = 17, step = 4.40126668651765e-01, func = 1.74381357967359e+04, norm = 2.33393775515735e+00, diff = 3.12342569697164e-01
iter = 18, step = 4.18120335219177e-01, func = 1.74381339636637e+04, norm = 2.68165183423882e+00, diff = 2.42506074032477e-01
iter = 19, step = 3.97214318458218e-01, func = 1.74381822715132e+04, norm = 2.60165353684662e+00, diff = 2.41733005036410e-01
iter = 20, step = 3.77353602535307e-01, func = 1.74381227407097e+04, norm = 2.75887511940095e+00, diff = 2.58613181967929e-01
iter = 21, step = 3.58485922408542e-01, func = 1.74382348766171e+04, norm = 2.38215608744050e+00, diff = 2.00481906605119e-01
iter = 22, step = 3.40561626288115e-01, func = 1.74383200001854e+04, norm = 2.14099720059646e+00, diff = 2.14733144532081e-01
iter = 23, step = 3.23533544973709e-01, func = 1.74382300079657e+04, norm = 2.04268921004621e+00, diff = 2.16815385668211e-01
iter = 24, step = 3.07356867725023e-01, func = 1.74382917423152e+04, norm = 1.90764562504410e+00, diff = 1.66156569546483e-01
iter = 25, step = 2.91989024338772e-01, func = 1.74383190355323e+04, norm = 1.83977265951662e+00, diff = 1.90312004590189e-01
iter = 26, step = 2.77389573121834e-01, func = 1.74382782533381e+04, norm = 1.93176279570852e+00, diff = 1.91601292682639e-01
iter = 27, step = 2.63520094465742e-01, func = 1.74383327853016e+04, norm = 1.53925725640239e+00, diff = 1.42388608318182e-01
iter = 28, step = 2.50344089742455e-01, func = 1.74384175241162e+04, norm = 1.12136912645007e+00, diff = 1.29403708672531e-01
iter = 29, step = 2.37826885255332e-01, func = 1.74383573870652e+04, norm = 1.63799209477653e+00, diff = 1.18810832769640e-01
iter = 30, step = 2.25935540992565e-01, func = 1.74384055196179e+04, norm = 1.40643836784232e+00, diff = 9.40631311214767e-02
iter = 31, step = 2.14638763942937e-01, func = 1.74384225448336e+04, norm = 1.38193082437958e+00, diff = 8.81102011348986e-02
iter = 32, step = 2.03906825745790e-01, func = 1.74384057110463e+04, norm = 1.28335866062417e+00, diff = 8.77474920062315e-02
iter = 33, step = 1.93711484458501e-01, func = 1.74384218408367e+04, norm = 1.41376684333961e+00, diff = 1.01830597574254e-01
iter = 34, step = 1.84025910235576e-01, func = 1.74384552491322e+04, norm = 1.04764873798956e+00, diff = 6.77369306398396e-02
iter = 35, step = 1.74824614723797e-01, func = 1.74384452401223e+04, norm = 1.18634176073415e+00, diff = 9.10068587421076e-02
iter = 36, step = 1.66083383987607e-01, func = 1.74383959264239e+04, norm = 1.56274886110442e+00, diff = 1.03677175696337e-01
iter = 37, step = 1.57779214788227e-01, func = 1.74384326966695e+04, norm = 1.28441686309304e+00, diff = 5.11896175992432e-02
iter = 38, step = 1.49890254048815e-01, func = 1.74384799237317e+04, norm = 8.05268073675528e-01, diff = 6.71046974926117e-02
iter = 39, step = 1.42395741346375e-01, func = 1.74384734785982e+04, norm = 1.16164717806535e+00, diff = 6.91453920071221e-02
iter = 40, step = 1.35275954279056e-01, func = 1.74384746716059e+04, norm = 1.08598174994918e+00, diff = 6.04060135850672e-02
iter = 41, step = 1.28512156565103e-01, func = 1.74384987020438e+04, norm = 7.88669408464383e-01, diff = 4.08005610763881e-02
iter = 42, step = 1.22086548736848e-01, func = 1.74384822936754e+04, norm = 1.08582172004829e+00, diff = 4.31367277261864e-02
iter = 43, step = 1.15982221300006e-01, func = 1.74384966751316e+04, norm = 7.60678337617032e-01, diff = 3.06373913473678e-02
iter = 44, step = 1.10183110235005e-01, func = 1.74384837803831e+04, norm = 1.03564700271341e+00, diff = 3.52366016266729e-02
iter = 45, step = 1.04673954723255e-01, func = 1.74384907679613e+04, norm = 8.31644685957428e-01, diff = 4.15326869460494e-02
iter = 46, step = 9.94402569870922e-02, func = 1.74385033254193e+04, norm = 7.41890011176662e-01, diff = 4.02188002258987e-02
iter = 47, step = 9.44682441377376e-02, func = 1.74385086006113e+04, norm = 7.30711986249184e-01, diff = 2.80095023701217e-02
iter = 48, step = 8.97448319308507e-02, func = 1.74385135069240e+04, norm = 6.62313208109766e-01, diff = 3.07164181819405e-02
iter = 49, step = 8.52575903343082e-02, func = 1.74385099156843e+04, norm = 6.66066788587717e-01, diff = 3.08121147995373e-02
iter = 50, step = 8.09947108175928e-02, func = 1.74385114502672e+04, norm = 6.42136963613574e-01, diff = 2.28113900378428e-02
iter = 51, step = 7.69449752767131e-02, func = 1.74385189292105e+04, norm = 4.71712714323565e-01, diff = 2.54482618432737e-02
iter = 52, step = 7.30977265128775e-02, func = 1.74385169541515e+04, norm = 6.16202216692824e-01, diff = 3.31832744480325e-02
iter = 53, step = 6.94428401872336e-02, func = 1.74385249744068e+04, norm = 4.55673616926905e-01, diff = 2.62113281651938e-02
iter = 54, step = 6.59706981778719e-02, func = 1.74385217467862e+04, norm = 6.03349505292904e-01, diff = 1.72295273285454e-02
iter = 55, step = 6.26721632689783e-02, func = 1.74385247269740e+04, norm = 4.33214302550099e-01, diff = 1.41818724570590e-02
iter = 56, step = 5.95385551055294e-02, func = 1.74385249129286e+04, norm = 4.71189805971132e-01, diff = 1.95357919285425e-02
iter = 57, step = 5.65616273502529e-02, func = 1.74385295363704e+04, norm = 3.71565153923126e-01, diff = 1.45099586817906e-02
iter = 58, step = 5.37335459827403e-02, func = 1.74385305271004e+04, norm = 4.51296221681737e-01, diff = 2.37567887367114e-02
iter = 59, step = 5.10468686836033e-02, func = 1.74385287625275e+04, norm = 4.94904040055248e-01, diff = 1.92332270885553e-02
iter = 60, step = 4.84945252494231e-02, func = 1.74385297436891e+04, norm = 4.85953808261787e-01, diff = 1.28496809099994e-02
iter = 61, step = 4.60697989869519e-02, func = 1.74385311604204e+04, norm = 5.04956301590132e-01, diff = 1.02241807127839e-02
iter = 62, step = 4.37663090376043e-02, func = 1.74385349009948e+04, norm = 3.78506848949103e-01, diff = 1.46265568710186e-02
iter = 63, step = 4.15779935857241e-02, func = 1.74385311693476e+04, norm = 5.04364907298081e-01, diff = 1.05925167723085e-02
iter = 64, step = 3.94990939064379e-02, func = 1.74385315895838e+04, norm = 4.87029304846762e-01, diff = 9.60008293380356e-03
iter = 65, step = 3.75241392111160e-02, func = 1.74385353598487e+04, norm = 3.13022987021572e-01, diff = 9.29449057958004e-03
iter = 66, step = 3.56479322505602e-02, func = 1.74385326710363e+04, norm = 4.00627097637179e-01, diff = 1.91566731345456e-02
iter = 67, step = 3.38655356380322e-02, func = 1.74385347615285e+04, norm = 3.04464580341117e-01, diff = 6.50959547680018e-03
iter = 68, step = 3.21722588561306e-02, func = 1.74385367838672e+04, norm = 2.59302363488446e-01, diff = 6.67460441288221e-03
iter = 69, step = 3.05636459133241e-02, func = 1.74385361704658e+04, norm = 3.71153498918119e-01, diff = 7.27115304292999e-03
iter = 70, step = 2.90354636176579e-02, func = 1.74385375338038e+04, norm = 2.63937685369146e-01, diff = 1.04656436256223e-02
iter = 71, step = 2.75836904367750e-02, func = 1.74385364066832e+04, norm = 2.87649154421890e-01, diff = 5.51195778575131e-03
iter = 72, step = 2.62045059149362e-02, func = 1.74385372378289e+04, norm = 2.33395826288896e-01, diff = 5.37875444447257e-03
iter = 73, step = 2.48942806191894e-02, func = 1.74385370230532e+04, norm = 3.62285523594261e-01, diff = 4.37999754605372e-03
iter = 74, step = 2.36495665882299e-02, func = 1.74385372079444e+04, norm = 2.82602399602220e-01, diff = 4.96470565866349e-03
iter = 75, step = 2.24670882588184e-02, func = 1.74385370040091e+04, norm = 2.80913267943744e-01, diff = 4.56713878513795e-03
iter = 76, step = 2.13437338458775e-02, func = 1.74385381758737e+04, norm = 2.18428520270214e-01, diff = 5.24432505974494e-03
iter = 77, step = 2.02765471535836e-02, func = 1.74385383218588e+04, norm = 2.39800453496326e-01, diff = 4.77400295689103e-03
iter = 78, step = 1.92627197959044e-02, func = 1.74385385033740e+04, norm = 2.23952011960765e-01, diff = 5.06004194792751e-03
iter = 79, step = 1.82995838061092e-02, func = 1.74385390414458e+04, norm = 1.80992948859094e-01, diff = 4.53461797219190e-03
iter = 80, step = 1.73846046158038e-02, func = 1.74385385716435e+04, norm = 2.15020025620214e-01, diff = 5.73277781651025e-03
iter = 81, step = 1.65153743850136e-02, func = 1.74385391672101e+04, norm = 1.73967713564391e-01, diff = 3.16844297969325e-03
iter = 82, step = 1.56896056657629e-02, func = 1.74385390752670e+04, norm = 1.94935802997819e-01, diff = 5.13148952398868e-03
iter = 83, step = 1.49051253824747e-02, func = 1.74385389122088e+04, norm = 1.88850963085183e-01, diff = 3.34575384734054e-03
iter = 84, step = 1.49051253824747e-02, func = 1.74385392501755e+04, norm = 1.80551590443054e-01, diff = 7.77713946449804e-03
iter = 85, step = 1.41598691133510e-02, func = 1.74385392251752e+04, norm = 1.98808129992088e-01, diff = 4.37458790006080e-03
iter = 86, step = 1.34518756576835e-02, func = 1.74385397129009e+04, norm = 1.30232051941483e-01, diff = 3.98773287754622e-03
iter = 87, step = 1.27792818747993e-02, func = 1.74385397848663e+04, norm = 1.46529930070275e-01, diff = 3.42823386600179e-03
iter = 88, step = 1.21403177810593e-02, func = 1.74385395542569e+04, norm = 2.37449833350749e-01, diff = 4.73202131709434e-03
iter = 89, step = 1.15333018920064e-02, func = 1.74385401405113e+04, norm = 1.69651863850009e-01, diff = 2.58917580494003e-03
iter = 90, step = 1.09566367974060e-02, func = 1.74385400791074e+04, norm = 1.38789357791578e-01, diff = 3.17903093467810e-03
iter = 91, step = 1.04088049575357e-02, func = 1.74385400676492e+04, norm = 1.46700925766667e-01, diff = 2.79018296651743e-03
iter = 92, step = 9.88836470965895e-03, func = 1.74385401994228e+04, norm = 1.33634465356278e-01, diff = 3.48130323417711e-03
iter = 93, step = 9.39394647417600e-03, func = 1.74385401653241e+04, norm = 1.39843605790437e-01, diff = 1.78520340056724e-03
iter = 94, step = 8.92424915046720e-03, func = 1.74385403670753e+04, norm = 1.22554253127801e-01, diff = 2.36515077204445e-03
iter = 95, step = 8.47803669294384e-03, func = 1.74385403658971e+04, norm = 1.20038483847047e-01, diff = 2.33311446473177e-03
iter = 96, step = 8.05413485829665e-03, func = 1.74385403717400e+04, norm = 1.10977225239359e-01, diff = 2.52567995293870e-03
iter = 97, step = 7.65142811538181e-03, func = 1.74385404706951e+04, norm = 8.85964269180504e-02, diff = 2.01183693567459e-03
iter = 98, step = 7.26885670961272e-03, func = 1.74385403610464e+04, norm = 1.37772905906240e-01, diff = 4.24112964371556e-03
iter = 99, step = 6.90541387413209e-03, func = 1.74385404893879e+04, norm = 1.14058820628916e-01, diff = 1.27244107574712e-03
iter = 100, step = 6.56014318042548e-03, func = 1.74385405714127e+04, norm = 1.06702344691586e-01, diff = 1.51013295573955e-03
iter = 101, step = 6.23213602140421e-03, func = 1.74385405231929e+04, norm = 9.75254158356982e-02, diff = 1.93634637107876e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.743854e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 99
  UB from restricted IP = 50474.1 using centers : 92 51 11 69 
  UB from restricted IP = 21786 using centers : 65 64 16 85 
  UB from restricted IP = 19888.8 using centers : 91 64 48 85 
In iteration 0 of HessHeuristic, objective value of incumbent is = 19888.8
  UB from restricted IP = 44045.8 using centers : 20 63 35 54 
  UB from restricted IP = 20803.5 using centers : 58 64 91 96 
  UB from restricted IP = 18203.2 using centers : 12 34 91 22 
  UB from restricted IP = 17770.2 using centers : 12 34 91 48 
In iteration 1 of HessHeuristic, objective value of incumbent is = 17770.2
  UB from restricted IP = 45434.1 using centers : 54 3 0 71 
  UB from restricted IP = 20365.6 using centers : 35 34 29 20 
  UB from restricted IP = 17792.2 using centers : 32 34 48 12 
In iteration 2 of HessHeuristic, objective value of incumbent is = 17770.2
  UB from restricted IP = 87123.8 using centers : 25 69 39 17 
  UB from restricted IP = 17748 using centers : 48 82 91 12 
In iteration 3 of HessHeuristic, objective value of incumbent is = 17748
  UB from restricted IP = 57046.6 using centers : 14 82 86 78 
  UB from restricted IP = 19402 using centers : 35 90 70 49 
  UB from restricted IP = 18513.5 using centers : 32 90 48 49 
  UB from restricted IP = 18323.9 using centers : 91 90 48 49 
In iteration 4 of HessHeuristic, objective value of incumbent is = 17748
  UB from restricted IP = 36024.8 using centers : 34 66 53 0 
  UB from restricted IP = 18365.7 using centers : 98 32 12 48 
  UB from restricted IP = 17750.4 using centers : 82 32 12 48 
In iteration 5 of HessHeuristic, objective value of incumbent is = 17748
  UB from restricted IP = 54687.9 using centers : 38 9 96 76 
  UB from restricted IP = 28147.6 using centers : 12 26 96 91 
  UB from restricted IP = 18323.9 using centers : 49 90 48 91 
In iteration 6 of HessHeuristic, objective value of incumbent is = 17748
  UB from restricted IP = 61770.7 using centers : 39 71 44 34 
  UB from restricted IP = 20612.5 using centers : 25 75 54 34 
  UB from restricted IP = 18203.2 using centers : 91 12 22 34 
  UB from restricted IP = 17770.2 using centers : 91 12 48 34 
In iteration 7 of HessHeuristic, objective value of incumbent is = 17748
  UB from restricted IP = 67221.2 using centers : 19 8 33 70 
  UB from restricted IP = 24549 using centers : 96 49 35 75 
  UB from restricted IP = 18321.7 using centers : 48 49 32 98 
  UB from restricted IP = 18070.1 using centers : 48 49 91 82 
In iteration 8 of HessHeuristic, objective value of incumbent is = 17748
  UB from restricted IP = 43631.4 using centers : 93 67 65 20 
  UB from restricted IP = 19245.3 using centers : 32 98 70 49 
  UB from restricted IP = 18217.3 using centers : 32 82 48 49 
  UB from restricted IP = 18070.1 using centers : 91 82 48 49 
In iteration 9 of HessHeuristic, objective value of incumbent is = 17748
UB at end of HessHeuristic = 17748
UB of heuristicSolution = 17748
Best solution after 10 of HessHeuristic is 17748.05

Beginning LOCAL SEARCH with UB = 17748

Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 99
  checking neighbors of node 12
  checking neighbors of node 48
  checking neighbors of node 82
  checking neighbors of node 91
UB at end of local search heuristic = 17748
UB of heuristicSolution = 17748
Best solution after local search is 17748.05
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 99
Optimize a model with 891 rows, 2172 columns and 7237 nonzeros
Variable types: 1776 continuous, 396 integer (396 binary)
Coefficient statistics:
  Matrix range     [1e+00, 4e+05]
  Objective range  [8e+00, 2e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+05]

MIP start produced solution with objective 17748 (0.00s)
Loaded MIP start with objective 17748

Presolve removed 34 rows and 192 columns
Presolve time: 0.01s
Presolved: 857 rows, 1980 columns, 6673 nonzeros
Variable types: 1603 continuous, 377 integer (377 binary)

Root relaxation: objective 1.748685e+04, 184 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 17486.8451    0    6 17748.0466 17486.8451  1.47%     -    0s
     0     0 17593.3959    0   14 17748.0466 17593.3959  0.87%     -    0s
     0     0 17593.3959    0    4 17748.0466 17593.3959  0.87%     -    0s
     0     0 17654.7059    0    8 17748.0466 17654.7059  0.53%     -    0s
     0     0 17679.6469    0    2 17748.0466 17679.6469  0.39%     -    0s
     0     0 17681.7447    0    5 17748.0466 17681.7447  0.37%     -    0s
     0     0 17693.1662    0    4 17748.0466 17693.1662  0.31%     -    0s
     0     0 17702.9735    0   12 17748.0466 17702.9735  0.25%     -    0s
     0     0 17715.1842    0   12 17748.0466 17715.1842  0.19%     -    0s
     0     0 17715.6698    0   12 17748.0466 17715.6698  0.18%     -    0s
     0     0 17715.8925    0   12 17748.0466 17715.8925  0.18%     -    0s
     0     0 17715.9124    0   13 17748.0466 17715.9124  0.18%     -    0s
     0     0 17727.3091    0    9 17748.0466 17727.3091  0.12%     -    0s

Explored 1 nodes (364 simplex iterations) in 0.06 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 17748 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.774804664400e+04, best bound 1.774804664400e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 17748 using centers : 12 48 82 91 
UB at end of ContiguityHeuristic = 17748
UB of (contiguous) heuristicSolution = 17748

Number of variables fixed to zero = 9305
Number of variables fixed to one  = 0
Number of variables not fixed     = 496
Number of centers left            = 12
Percentage of vars fixed = 0.95
Academic license - for non-commercial use only
Build hess : created 496 variables
Optimize a model with 881 rows, 595 columns and 2293 nonzeros
Variable types: 99 continuous, 496 integer (496 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+05]
  Objective range  [8e+00, 5e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]

Loaded MIP start with objective 17748

Presolve removed 327 rows and 137 columns
Presolve time: 0.01s
Presolved: 554 rows, 458 columns, 1831 nonzeros
Variable types: 0 continuous, 458 integer (446 binary)

Root relaxation: objective 1.743854e+04, 502 iterations, 0.01 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 17438.5422    0  122 17748.0466 17438.5422  1.74%     -    0s
     0     0 17469.1982    0  218 17748.0466 17469.1982  1.57%     -    0s
     0     0 17469.1982    0   91 17748.0466 17469.1982  1.57%     -    0s
     0     0 17506.8273    0  121 17748.0466 17506.8273  1.36%     -    0s
     0     0 17527.4093    0   87 17748.0466 17527.4093  1.24%     -    0s
     0     0 17532.1962    0  125 17748.0466 17532.1962  1.22%     -    0s
     0     0 17532.2398    0  126 17748.0466 17532.2398  1.22%     -    0s
     0     0 17572.6574    0  124 17748.0466 17572.6574  0.99%     -    0s
     0     0 17584.2215    0   89 17748.0466 17584.2215  0.92%     -    0s
     0     0 17585.7514    0  127 17748.0466 17585.7514  0.91%     -    0s
     0     0 17586.3540    0  128 17748.0466 17586.3540  0.91%     -    0s
     0     0 17586.3540    0   66 17748.0466 17586.3540  0.91%     -    0s
     0     0 17586.3540    0   89 17748.0466 17586.3540  0.91%     -    0s
     0     0 17586.3540    0   51 17748.0466 17586.3540  0.91%     -    0s
     0     0 17587.9313    0   64 17748.0466 17587.9313  0.90%     -    0s
     0     0 17588.0901    0   95 17748.0466 17588.0901  0.90%     -    0s
     0     0 17588.5738    0   95 17748.0466 17588.5738  0.90%     -    0s
     0     0 17592.8597    0   93 17748.0466 17592.8597  0.87%     -    0s
     0     0 17597.0195    0   94 17748.0466 17597.0195  0.85%     -    0s
     0     0 17597.7424    0   94 17748.0466 17597.7424  0.85%     -    0s
     0     0 17603.0125    0   93 17748.0466 17603.0125  0.82%     -    0s
     0     0 17603.1547    0   93 17748.0466 17603.1547  0.82%     -    0s
     0     0 17603.8850    0   93 17748.0466 17603.8850  0.81%     -    0s
     0     0 17607.7457    0   64 17748.0466 17607.7457  0.79%     -    0s
     0     0 17607.7457    0   64 17748.0466 17607.7457  0.79%     -    0s
     0     0 17607.7457    0   39 17748.0466 17607.7457  0.79%     -    0s
     0     0 17607.7457    0   61 17748.0466 17607.7457  0.79%     -    0s
     0     0 17609.6007    0   62 17748.0466 17609.6007  0.78%     -    0s
     0     0 17610.4382    0   62 17748.0466 17610.4382  0.78%     -    0s
     0     0 17610.6285    0   61 17748.0466 17610.6285  0.77%     -    0s
     0     0 17611.3838    0   58 17748.0466 17611.3838  0.77%     -    0s
     0     0 17611.4068    0   61 17748.0466 17611.4068  0.77%     -    0s
     0     0 17643.0582    0   65 17748.0466 17643.0582  0.59%     -    0s
     0     0 17669.0243    0   47 17748.0466 17669.0243  0.45%     -    0s
     0     0 17669.9412    0   50 17748.0466 17669.9412  0.44%     -    0s
     0     0 17679.9160    0   67 17748.0466 17679.9160  0.38%     -    0s
     0     0 17681.0899    0   64 17748.0466 17681.0899  0.38%     -    0s
     0     0 17681.7536    0   51 17748.0466 17681.7536  0.37%     -    0s
     0     0 17681.7779    0   68 17748.0466 17681.7779  0.37%     -    0s
     0     0 17683.7213    0   67 17748.0466 17683.7213  0.36%     -    0s
     0     0 17683.8472    0   72 17748.0466 17683.8472  0.36%     -    0s
     0     0 17689.6203    0   57 17748.0466 17689.6203  0.33%     -    0s
     0     0 17689.6203    0   57 17748.0466 17689.6203  0.33%     -    0s
     0     0 17689.6203    0   26 17748.0466 17689.6203  0.33%     -    0s
     0     0 17689.6203    0   38 17748.0466 17689.6203  0.33%     -    0s
     0     0 17692.9244    0   35 17748.0466 17692.9244  0.31%     -    0s
     0     0 17693.0245    0   34 17748.0466 17693.0245  0.31%     -    0s
     0     0 17693.2189    0   34 17748.0466 17693.2189  0.31%     -    0s
     0     0 17693.2189    0   34 17748.0466 17693.2189  0.31%     -    0s
     0     2 17693.2189    0   34 17748.0466 17693.2189  0.31%     -    0s

Cutting planes:
  Gomory: 2
  Cover: 5
  MIR: 3
  StrongCG: 1
  GUB cover: 1

Explored 22 nodes (1572 simplex iterations) in 0.20 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 17748 

Optimal solution found (tolerance 0.00e+00)
Best objective 1.774804664400e+04, best bound 1.774804664400e+04, gap 0.0000%
IP duration time: 0.195490 seconds
Total time elapsed: 0.871198 seconds
Number of callbacks: 5
Time in callbacks: 0.000199 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running ID'
Running ID
+ /home/lykhovyd/progs/districting/districting myconfig.txt ID /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/ID.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/ID/counties/graph/ID.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/ID/counties/graph/ID_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/ID/counties/graph/ID.population
state[2]        = ID
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/ID.ralg_hot
nr_comp = 1
graph: 44 nodes, 102 edges (read)
Model input: L = 779873, U = 787709, k = 2.
Graph is connected.
Model input: total population = 1567582
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 5.71060422085879e+04, norm = 1.00123555094193e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 5.71064692555494e+04, norm = 5.40847965010527e-01, diff = 9.52530719568529e-01
iter = 3, step = 9.02500000000000e-01, func = 5.71064211890264e+04, norm = 4.74985485057205e-01, diff = 6.39897177397177e-01
iter = 4, step = 8.57375000000000e-01, func = 5.71064543616704e+04, norm = 3.19370091042402e-01, diff = 2.89659497944797e-01
iter = 5, step = 8.14506250000000e-01, func = 5.71065010054078e+04, norm = 1.59685045521201e-01, diff = 1.41436369621307e-01
iter = 6, step = 7.73780937500000e-01, func = 5.71064889914467e+04, norm = 7.98425227606005e-02, diff = 6.78293103457634e-02
iter = 7, step = 7.73780937500000e-01, func = 5.71065047629822e+04, norm = 3.99212613803003e-02, diff = 1.44656803443505e-01
iter = 8, step = 7.73780937500000e-01, func = 5.71065073210580e+04, norm = 1.99606306901501e-02, diff = 2.10111962794286e-01
iter = 9, step = 7.35091890625000e-01, func = 5.71064890298296e+04, norm = 1.89651193581575e-01, diff = 1.94210714930769e-01
iter = 10, step = 6.98337296093750e-01, func = 5.71065107582492e+04, norm = 9.48255967907875e-02, diff = 1.44174247560953e-01
iter = 11, step = 6.98337296093750e-01, func = 5.71065122924930e+04, norm = 9.97636600377219e-03, diff = 2.07905675008238e-02
iter = 12, step = 6.98337296093750e-01, func = 5.71065148016064e+04, norm = 4.98818300188612e-03, diff = 5.35624492554302e-02
iter = 13, step = 6.63420431289062e-01, func = 5.71065042443529e+04, norm = 4.74116250679548e-02, diff = 4.30214659010130e-02
iter = 14, step = 6.30249409724609e-01, func = 5.71065155603292e+04, norm = 1.11855634375068e+00, diff = 3.25510460290954e-02
iter = 15, step = 5.98736939238379e-01, func = 5.71061970571383e+04, norm = 1.11688766178095e+00, diff = 3.15343095266608e-01
iter = 16, step = 5.68800092276460e-01, func = 5.71063713400854e+04, norm = 5.91688928778372e-01, diff = 3.78085527965151e-01
iter = 17, step = 6.82560110731751e-01, func = 5.71063050392497e+04, norm = 4.21364183017653e-01, diff = 1.04980541813051e+00
iter = 18, step = 6.82560110731751e-01, func = 5.71064223088413e+04, norm = 2.45438150178588e-01, diff = 4.18230956146449e-01
iter = 19, step = 6.82560110731751e-01, func = 5.71064234622405e+04, norm = 2.74745867517552e-01, diff = 2.52695978510801e-01
iter = 20, step = 6.82560110731751e-01, func = 5.71064760531638e+04, norm = 1.28028015472370e-01, diff = 1.39180414723336e-01
iter = 21, step = 6.48432105195164e-01, func = 5.71064997501433e+04, norm = 1.47380676650979e-01, diff = 1.16313620577143e-01
iter = 22, step = 6.16010499935406e-01, func = 5.71065045018544e+04, norm = 7.36903383254895e-02, diff = 3.86222429591866e-02
iter = 23, step = 5.85209974938635e-01, func = 5.71064970401920e+04, norm = 4.02136733318242e-02, diff = 4.54046725047045e-02
iter = 24, step = 5.85209974938635e-01, func = 5.71065103003064e+04, norm = 4.26268027935085e-02, diff = 3.79583530821558e-02
iter = 25, step = 5.55949476191704e-01, func = 5.71065053929356e+04, norm = 2.92408781615011e-02, diff = 2.89537954331129e-02
iter = 26, step = 5.55949476191704e-01, func = 5.71065115594268e+04, norm = 2.45574096407654e-02, diff = 1.84926750904803e-02
iter = 27, step = 5.55949476191704e-01, func = 5.71065122652531e+04, norm = 1.22787048203827e-02, diff = 8.89187253727954e-03
iter = 28, step = 5.55949476191704e-01, func = 5.71065150398385e+04, norm = 6.13935241019136e-03, diff = 6.67907343021606e-03
iter = 29, step = 5.28152002382118e-01, func = 5.71065149101104e+04, norm = 3.06967620509571e-03, diff = 3.86272045284919e-03
iter = 30, step = 5.28152002382118e-01, func = 5.71065153158110e+04, norm = 1.53483810254783e-03, diff = 1.42786677408754e-02
iter = 31, step = 5.01744402263012e-01, func = 5.71065135640904e+04, norm = 1.43733539197588e-02, diff = 1.14781070023341e-02
iter = 32, step = 4.76657182149862e-01, func = 5.71065154243521e+04, norm = 7.26539223097130e-03, diff = 8.92274008169656e-03
iter = 33, step = 4.52824323042369e-01, func = 5.71065152409560e+04, norm = 2.46523105925898e-03, diff = 3.43203033909063e-03
iter = 34, step = 4.30183106890250e-01, func = 5.71065143610080e+04, norm = 1.19911535177648e-02, diff = 4.90639798759881e-03
iter = 35, step = 4.08673951545738e-01, func = 5.71065155338219e+04, norm = 5.99557675888241e-03, diff = 6.56227989898948e-03
iter = 36, step = 3.88240253968451e-01, func = 5.71065154804611e+04, norm = 1.23246860668880e-03, diff = 7.78488866306448e-04
iter = 37, step = 4.65888304762141e-01, func = 5.71065154782711e+04, norm = 6.16234303344384e-04, diff = 3.72117602232094e-03
iter = 38, step = 4.42593889524034e-01, func = 5.71065152616256e+04, norm = 3.62646802360212e-03, diff = 2.30586483026498e-03
iter = 39, step = 4.20464195047832e-01, func = 5.71065155557271e+04, norm = 1.81323401180106e-03, diff = 2.02298002854849e-03
iter = 40, step = 3.99440985295441e-01, func = 5.71065152339879e+04, norm = 2.99723651950717e-03, diff = 1.10793341251982e-03
iter = 41, step = 3.79468936030669e-01, func = 5.71065156012020e+04, norm = 1.55348454606906e-03, diff = 1.53647162739347e-03
iter = 42, step = 3.60495489229135e-01, func = 5.71065155963626e+04, norm = 7.46908138836991e-04, diff = 2.88413242391919e-04
iter = 43, step = 3.60495489229135e-01, func = 5.71065156122168e+04, norm = 3.73454069418504e-04, diff = 4.93251524308146e-04
iter = 44, step = 4.32594587074962e-01, func = 5.71065156429513e+04, norm = 1.86727034709245e-04, diff = 5.50599180887726e-04
iter = 45, step = 4.10964857721214e-01, func = 5.71065156150974e+04, norm = 7.74916583799150e-04, diff = 5.12288733477681e-04
iter = 46, step = 3.90416614835153e-01, func = 5.71065156647815e+04, norm = 3.87458291899590e-04, diff = 3.97504299795441e-04
iter = 47, step = 3.70895784093396e-01, func = 5.71065155576476e+04, norm = 9.19073797727501e-04, diff = 3.56480166441939e-04
iter = 48, step = 3.52350994888726e-01, func = 5.71065156815258e+04, norm = 4.66639639671051e-04, diff = 4.30770673734033e-04
iter = 49, step = 3.34733445144289e-01, func = 5.71065156682132e+04, norm = 9.17255408163385e-05, diff = 1.01211604524388e-04
iter = 50, step = 3.17996772887075e-01, func = 5.71065156523111e+04, norm = 1.53085504540104e-04, diff = 1.02408063366361e-04
iter = 51, step = 3.17996772887075e-01, func = 5.71065156654679e+04, norm = 1.56389277975220e-04, diff = 1.17687525682084e-04
iter = 52, step = 3.17996772887075e-01, func = 5.71065156763844e+04, norm = 7.81946389875978e-05, diff = 1.15788532129078e-04
iter = 53, step = 3.02096934242721e-01, func = 5.71065156645422e+04, norm = 2.33512991293028e-04, diff = 5.61226809687736e-05
iter = 54, step = 2.86992087530585e-01, func = 5.71065156771694e+04, norm = 1.19994260866632e-04, diff = 9.15244727234715e-05
iter = 55, step = 2.86992087530585e-01, func = 5.71065156784134e+04, norm = 4.37055193225195e-05, diff = 1.55294744215569e-05
iter = 56, step = 2.86992087530585e-01, func = 5.71065156735855e+04, norm = 1.97231507603637e-04, diff = 1.25882738061181e-04
iter = 57, step = 2.72642483154056e-01, func = 5.71065156814788e+04, norm = 9.92593843542160e-05, diff = 7.22356006603887e-05
iter = 58, step = 2.59010358996353e-01, func = 5.71065156820239e+04, norm = 3.82707290998678e-05, diff = 1.24486658767266e-05
iter = 59, step = 2.59010358996353e-01, func = 5.71065156819230e+04, norm = 1.91353645499388e-05, diff = 2.50224617826136e-05
iter = 60, step = 3.10812430795624e-01, func = 5.71065156827849e+04, norm = 6.01630769208605e-05, diff = 3.62907157581397e-05
iter = 61, step = 2.95271809255842e-01, func = 5.71065156837191e+04, norm = 3.12701953916799e-05, diff = 2.36428509738180e-05
iter = 62, step = 2.80508218793050e-01, func = 5.71065156843774e+04, norm = 9.27861500500719e-06, diff = 9.41761126145400e-06
iter = 63, step = 2.66482807853398e-01, func = 5.71065156824603e+04, norm = 5.08675731714768e-05, diff = 1.54159364310148e-05
iter = 64, step = 2.66482807853398e-01, func = 5.71065156843731e+04, norm = 2.57290063991653e-05, diff = 3.38454678663323e-05
iter = 65, step = 2.53158667460728e-01, func = 5.71065156842984e+04, norm = 4.59315695882968e-06, diff = 2.12241122613264e-06
iter = 66, step = 2.53158667460728e-01, func = 5.71065156845296e+04, norm = 2.29657847942021e-06, diff = 7.78129812878548e-06
iter = 67, step = 2.53158667460728e-01, func = 5.71065156847806e+04, norm = 1.14828923970058e-06, diff = 1.20009852495580e-05
iter = 68, step = 2.40500734087691e-01, func = 5.71065156831887e+04, norm = 1.54836178681667e-05, diff = 8.89988512786483e-06
iter = 69, step = 2.28475697383307e-01, func = 5.71065156848678e+04, norm = 1.31199087767691e-05, diff = 4.65976370741224e-06
iter = 70, step = 2.17051912514142e-01, func = 5.71065156831859e+04, norm = 1.49678143680316e-05, diff = 6.48338468653760e-06
iter = 71, step = 2.60462295016970e-01, func = 5.71065156837885e+04, norm = 1.08327274974157e-05, diff = 9.07666975806790e-06
iter = 72, step = 2.47439180266121e-01, func = 5.71065156843355e+04, norm = 8.47716289895056e-06, diff = 2.68992162168529e-06
iter = 73, step = 2.35067221252815e-01, func = 5.71065156845942e+04, norm = 4.23858144947295e-06, diff = 1.91619317918584e-06
iter = 74, step = 2.23313860190174e-01, func = 5.71065156847670e+04, norm = 3.80328628028199e-06, diff = 2.17448370591940e-06
iter = 75, step = 2.12148167180666e-01, func = 5.71065156848196e+04, norm = 2.61182622430783e-06, diff = 8.54551044943849e-07
iter = 76, step = 2.01540758821632e-01, func = 5.71065156848060e+04, norm = 1.65179974239060e-06, diff = 2.22614889607933e-06
iter = 77, step = 2.41848910585959e-01, func = 5.71065156838647e+04, norm = 1.28648048413111e-05, diff = 8.61307304852592e-06
iter = 78, step = 2.29756465056661e-01, func = 5.71065156847650e+04, norm = 6.49925470847083e-06, diff = 4.00444101740422e-06
iter = 79, step = 2.29756465056661e-01, func = 5.71065156848900e+04, norm = 1.20183018774035e-06, diff = 5.33424932747684e-07
iter = 80, step = 2.18268641803828e-01, func = 5.71065156849206e+04, norm = 8.05620000705444e-07, diff = 4.72054439306524e-07
iter = 81, step = 2.18268641803828e-01, func = 5.71065156849433e+04, norm = 3.28849810802159e-06, diff = 9.07826518866455e-07
iter = 82, step = 2.07355209713637e-01, func = 5.71065156849093e+04, norm = 1.72284237919462e-06, diff = 9.31011797777675e-07
iter = 83, step = 2.07355209713637e-01, func = 5.71065156849379e+04, norm = 6.49993956876401e-07, diff = 2.85746598684125e-07
iter = 84, step = 2.07355209713637e-01, func = 5.71065156849813e+04, norm = 3.24996978432684e-07, diff = 2.10504806801297e-07
iter = 85, step = 1.96987449227955e-01, func = 5.71065156849878e+04, norm = 1.62498489217037e-07, diff = 9.37245914516010e-08
iter = 86, step = 1.87138076766557e-01, func = 5.71065156849928e+04, norm = 2.65735432244611e-07, diff = 1.94904992370779e-07
iter = 87, step = 1.77781172928229e-01, func = 5.71065156849718e+04, norm = 2.70990430060922e-07, diff = 3.07475376637698e-08
iter = 88, step = 2.13337407513875e-01, func = 5.71065156849862e+04, norm = 1.35495215078829e-07, diff = 3.68289410374427e-07
iter = 89, step = 2.02670537138181e-01, func = 5.71065156849696e+04, norm = 8.50385018120470e-07, diff = 2.08257791608669e-07
iter = 90, step = 1.92537010281272e-01, func = 5.71065156849931e+04, norm = 4.25192509060781e-07, diff = 2.21360938011260e-07
iter = 91, step = 1.82910159767208e-01, func = 5.71065156849968e+04, norm = 6.77475924115009e-08, diff = 2.35119864185994e-08
iter = 92, step = 1.73764651778848e-01, func = 5.71065156849973e+04, norm = 3.38737962130149e-08, diff = 4.83294584321948e-08
iter = 93, step = 1.65076419189906e-01, func = 5.71065156849926e+04, norm = 2.51467962014128e-07, diff = 7.20461319928033e-08
iter = 94, step = 1.56822598230410e-01, func = 5.71065156849979e+04, norm = 1.31127542544060e-07, diff = 5.28027859029499e-08
iter = 95, step = 1.48981468318890e-01, func = 5.71065156849941e+04, norm = 7.61164889877983e-08, diff = 2.07979334011929e-08
iter = 96, step = 1.48981468318890e-01, func = 5.71065156849987e+04, norm = 3.80582445007178e-08, diff = 3.26175402006184e-08
iter = 97, step = 1.41532394902945e-01, func = 5.71065156849984e+04, norm = 2.13421493683314e-07, diff = 3.77576012884133e-08
iter = 98, step = 1.34455775157798e-01, func = 5.71065156849988e+04, norm = 1.07556986039658e-07, diff = 3.88094506264074e-08
iter = 99, step = 1.27732986399908e-01, func = 5.71065156849988e+04, norm = 1.88482145437613e-08, diff = 5.17388086712677e-09
iter = 100, step = 1.27732986399908e-01, func = 5.71065156849992e+04, norm = 9.42410729185984e-09, diff = 1.64293105543196e-08
iter = 101, step = 1.27732986399908e-01, func = 5.71065156849980e+04, norm = 6.56333137630412e-08, diff = 2.62450812343375e-08
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 5.710652e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 44
  UB from restricted IP = 203698 using centers : 4 28 
  UB from restricted IP = 65344 using centers : 36 34 
  UB from restricted IP = 61232.6 using centers : 22 1 
In iteration 0 of HessHeuristic, objective value of incumbent is = 61232.6
  UB from restricted IP = 132173 using centers : 4 38 
  UB from restricted IP = 61232.6 using centers : 1 22 
In iteration 1 of HessHeuristic, objective value of incumbent is = 61232.6
  UB from restricted IP = 161599 using centers : 22 38 
  UB from restricted IP = 74678.1 using centers : 34 18 
  UB from restricted IP = 61232.6 using centers : 1 22 
In iteration 2 of HessHeuristic, objective value of incumbent is = 61232.6
  UB from restricted IP = 135253 using centers : 34 7 
  UB from restricted IP = 61232.6 using centers : 22 1 
In iteration 3 of HessHeuristic, objective value of incumbent is = 61232.6
  UB from restricted IP = 65795 using centers : 8 22 
  UB from restricted IP = 61232.6 using centers : 1 22 
In iteration 4 of HessHeuristic, objective value of incumbent is = 61232.6
  UB from restricted IP = 122335 using centers : 35 15 
  UB from restricted IP = 61232.6 using centers : 1 22 
In iteration 5 of HessHeuristic, objective value of incumbent is = 61232.6
  UB from restricted IP = 120682 using centers : 23 27 
  UB from restricted IP = 71224 using centers : 13 0 
In iteration 6 of HessHeuristic, objective value of incumbent is = 61232.6
  UB from restricted IP = 98630.5 using centers : 2 21 
  UB from restricted IP = 61232.6 using centers : 1 22 
In iteration 7 of HessHeuristic, objective value of incumbent is = 61232.6
  UB from restricted IP = 103050 using centers : 19 34 
  UB from restricted IP = 61232.6 using centers : 22 1 
In iteration 8 of HessHeuristic, objective value of incumbent is = 61232.6
  UB from restricted IP = 166230 using centers : 12 23 
  UB from restricted IP = 69589.7 using centers : 34 25 
  UB from restricted IP = 61232.6 using centers : 1 22 
In iteration 9 of HessHeuristic, objective value of incumbent is = 61232.6
UB at end of HessHeuristic = 61232.6
UB of heuristicSolution = 61232.6
Best solution after 10 of HessHeuristic is 61232.58

Beginning LOCAL SEARCH with UB = 61232.6

Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 44
  checking neighbors of node 1
  checking neighbors of node 22
UB at end of local search heuristic = 61232.6
UB of heuristicSolution = 61232.6
Best solution after local search is 61232.58
Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 44
Optimize a model with 220 rows, 496 columns and 1621 nonzeros
Variable types: 408 continuous, 88 integer (88 binary)
Coefficient statistics:
  Matrix range     [1e+00, 4e+05]
  Objective range  [5e+00, 4e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+05]

MIP start produced solution with objective 61232.6 (0.00s)
Loaded MIP start with objective 61232.6

Presolve removed 66 rows and 144 columns
Presolve time: 0.00s
Presolved: 154 rows, 352 columns, 1149 nonzeros
Variable types: 317 continuous, 35 integer (35 binary)

Root relaxation: objective 5.710652e+04, 19 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0     cutoff    0      61232.5754 61232.5754  0.00%     -    0s

Explored 0 nodes (20 simplex iterations) in 0.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 61232.6 

Optimal solution found (tolerance 1.00e-04)
Best objective 6.123257539700e+04, best bound 6.123257539700e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 61232.6 using centers : 1 22 
UB at end of ContiguityHeuristic = 61232.6
UB of (contiguous) heuristicSolution = 61232.6

Number of variables fixed to zero = 1690
Number of variables fixed to one  = 0
Number of variables not fixed     = 246
Number of centers left            = 7
Percentage of vars fixed = 0.87
Academic license - for non-commercial use only
Build hess : created 246 variables
Optimize a model with 416 rows, 290 columns and 1123 nonzeros
Variable types: 44 continuous, 246 integer (246 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+05]
  Objective range  [5e+00, 2e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 2e+00]

Loaded MIP start with objective 61232.6

Presolve removed 142 rows and 62 columns
Presolve time: 0.01s
Presolved: 274 rows, 228 columns, 916 nonzeros
Variable types: 0 continuous, 228 integer (221 binary)

Root relaxation: objective 5.710652e+04, 122 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 57106.5157    0    2 61232.5754 57106.5157  6.74%     -    0s
     0     0     cutoff    0      61232.5754 61232.5754  0.00%     -    0s

Cutting planes:
  Gomory: 2
  Cover: 4
  Clique: 4
  MIR: 1
  Flow cover: 1
  GUB cover: 2

Explored 1 nodes (168 simplex iterations) in 0.02 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 61232.6 

Optimal solution found (tolerance 0.00e+00)
Best objective 6.123257539700e+04, best bound 6.123257539700e+04, gap 0.0000%
IP duration time: 0.016094 seconds
Total time elapsed: 0.087166 seconds
Number of callbacks: 1
Time in callbacks: 0.000013 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running IL'
Running IL
+ /home/lykhovyd/progs/districting/districting myconfig.txt IL /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/IL.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/IL/counties/graph/IL.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/IL/counties/graph/IL_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/IL/counties/graph/IL.population
state[2]        = IL
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/IL.ralg_hot
nr_comp = 1
graph: 102 nodes, 261 edges (read)
Model input: L = 709249, U = 716376, k = 18.
Graph is connected.
Model input: total population = 12830632
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 7.47825043475731e+04, norm = 3.41462630421553e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 7.47845471945973e+04, norm = 2.25142000819288e+01, diff = 8.40664171399698e-01
iter = 3, step = 8.57375000000000e-01, func = 7.47811100503508e+04, norm = 3.11316274455248e+01, diff = 8.20846571976468e-01
iter = 4, step = 8.14506250000000e-01, func = 7.47822673365100e+04, norm = 1.87995067898234e+01, diff = 5.79920715748191e-01
iter = 5, step = 7.73780937500000e-01, func = 7.47817088896115e+04, norm = 1.47403920226340e+01, diff = 7.05443027530940e-01
iter = 6, step = 7.35091890625000e-01, func = 7.47813126882995e+04, norm = 1.77224271879410e+01, diff = 6.11521317849948e-01
iter = 7, step = 6.98337296093750e-01, func = 7.47814415144836e+04, norm = 1.16838336743019e+01, diff = 4.76485730065805e-01
iter = 8, step = 6.63420431289062e-01, func = 7.47836672736071e+04, norm = 1.72957320972846e+01, diff = 5.54895213281428e-01
iter = 9, step = 6.30249409724609e-01, func = 7.47836290827113e+04, norm = 1.75393081516968e+01, diff = 4.18537710539436e-01
iter = 10, step = 5.98736939238379e-01, func = 7.47835353393678e+04, norm = 2.09724623821078e+01, diff = 4.80014151189024e-01
iter = 11, step = 5.68800092276460e-01, func = 7.47847808473086e+04, norm = 1.31562075861195e+01, diff = 3.95384967648962e-01
iter = 12, step = 5.40360087662637e-01, func = 7.47831688157947e+04, norm = 1.30802363122419e+01, diff = 4.60354440989910e-01
iter = 13, step = 5.13342083279505e-01, func = 7.47838525455164e+04, norm = 1.19150401269922e+01, diff = 3.58318800269179e-01
iter = 14, step = 4.87674979115529e-01, func = 7.47843646614798e+04, norm = 1.19013484386710e+01, diff = 3.20269894169788e-01
iter = 15, step = 4.63291230159753e-01, func = 7.47844292600970e+04, norm = 1.17878891713322e+01, diff = 3.36040760773075e-01
iter = 16, step = 4.40126668651765e-01, func = 7.47850495376232e+04, norm = 1.29066895807614e+01, diff = 3.30097254872173e-01
iter = 17, step = 4.18120335219177e-01, func = 7.47846550640091e+04, norm = 1.50080810593126e+01, diff = 3.24332787709478e-01
iter = 18, step = 3.97214318458218e-01, func = 7.47832171009953e+04, norm = 1.71722921898679e+01, diff = 2.92324460502437e-01
iter = 19, step = 3.97214318458218e-01, func = 7.47852986658467e+04, norm = 1.35043016499182e+01, diff = 4.76771690439861e-01
iter = 20, step = 3.77353602535307e-01, func = 7.47853463028701e+04, norm = 1.02420888416471e+01, diff = 2.95136084508077e-01
iter = 21, step = 3.58485922408542e-01, func = 7.47848121320666e+04, norm = 9.36921618302661e+00, diff = 3.09882497651582e-01
iter = 22, step = 3.40561626288115e-01, func = 7.47852797128871e+04, norm = 6.80624919709985e+00, diff = 2.51627810228922e-01
iter = 23, step = 3.23533544973709e-01, func = 7.47858827694838e+04, norm = 5.52335608418291e+00, diff = 1.99943873036402e-01
iter = 24, step = 3.07356867725023e-01, func = 7.47850225329911e+04, norm = 1.53671347732146e+01, diff = 2.39547931137419e-01
iter = 25, step = 2.91989024338772e-01, func = 7.47861637014112e+04, norm = 1.11586238881884e+01, diff = 1.67840008742504e-01
iter = 26, step = 2.77389573121834e-01, func = 7.47859085515257e+04, norm = 1.14383111051153e+01, diff = 1.99704585235126e-01
iter = 27, step = 2.63520094465742e-01, func = 7.47860085972193e+04, norm = 7.32196915341633e+00, diff = 1.76393072188919e-01
iter = 28, step = 2.50344089742455e-01, func = 7.47857977759803e+04, norm = 1.57646121295496e+01, diff = 1.92721831312667e-01
iter = 29, step = 2.37826885255332e-01, func = 7.47857749163313e+04, norm = 1.31064246760282e+01, diff = 1.37835222048254e-01
iter = 30, step = 2.25935540992565e-01, func = 7.47860170453679e+04, norm = 8.77690063574249e+00, diff = 1.80457954578572e-01
iter = 31, step = 2.14638763942937e-01, func = 7.47858683296785e+04, norm = 1.06196155488840e+01, diff = 1.64216548402240e-01
iter = 32, step = 2.03906825745790e-01, func = 7.47861245955629e+04, norm = 8.48016551289642e+00, diff = 1.29760660456651e-01
iter = 33, step = 1.93711484458501e-01, func = 7.47859317695875e+04, norm = 1.09171467746423e+01, diff = 1.16600104173923e-01
iter = 34, step = 1.84025910235576e-01, func = 7.47863750263507e+04, norm = 6.23767749938664e+00, diff = 1.09472879136898e-01
iter = 35, step = 1.74824614723797e-01, func = 7.47863090640591e+04, norm = 6.07158061447997e+00, diff = 1.42362586145007e-01
iter = 36, step = 1.66083383987607e-01, func = 7.47863253848837e+04, norm = 8.01592785199858e+00, diff = 1.03008706764961e-01
iter = 37, step = 1.57779214788227e-01, func = 7.47863734987406e+04, norm = 6.72640620890926e+00, diff = 7.45173117840926e-02
iter = 38, step = 1.49890254048815e-01, func = 7.47865149852376e+04, norm = 1.14804815747781e+01, diff = 8.89454926276794e-02
iter = 39, step = 1.42395741346375e-01, func = 7.47865358662544e+04, norm = 6.93511742819631e+00, diff = 8.89652474999550e-02
iter = 40, step = 1.35275954279056e-01, func = 7.47864480678663e+04, norm = 5.65889646111878e+00, diff = 1.13719912123941e-01
iter = 41, step = 1.28512156565103e-01, func = 7.47864689257315e+04, norm = 5.62358413717387e+00, diff = 9.04902954660792e-02
iter = 42, step = 1.22086548736848e-01, func = 7.47866137809029e+04, norm = 4.72746122083303e+00, diff = 6.14702590632781e-02
iter = 43, step = 1.15982221300006e-01, func = 7.47866345794936e+04, norm = 5.01123391909535e+00, diff = 7.31864795223164e-02
iter = 44, step = 1.10183110235005e-01, func = 7.47866197567140e+04, norm = 7.04032815493959e+00, diff = 7.55009153361862e-02
iter = 45, step = 1.04673954723255e-01, func = 7.47867325921740e+04, norm = 5.03716170209618e+00, diff = 4.70016043826662e-02
iter = 46, step = 9.94402569870922e-02, func = 7.47867157557981e+04, norm = 4.65265732729200e+00, diff = 6.71133981814522e-02
iter = 47, step = 9.44682441377376e-02, func = 7.47866123837558e+04, norm = 8.11837292903929e+00, diff = 6.44515035353472e-02
iter = 48, step = 9.44682441377376e-02, func = 7.47866860647303e+04, norm = 6.12076072049349e+00, diff = 8.47936751869802e-02
iter = 49, step = 8.97448319308507e-02, func = 7.47867265874726e+04, norm = 4.67820148742904e+00, diff = 6.12091336011315e-02
iter = 50, step = 8.52575903343082e-02, func = 7.47867544686387e+04, norm = 3.82789474274964e+00, diff = 5.57800904047649e-02
iter = 51, step = 8.09947108175928e-02, func = 7.47867880422572e+04, norm = 3.56592042962753e+00, diff = 4.79136170070888e-02
iter = 52, step = 7.69449752767131e-02, func = 7.47867642992459e+04, norm = 4.94577860686077e+00, diff = 4.83057770291266e-02
iter = 53, step = 7.30977265128775e-02, func = 7.47868035261351e+04, norm = 3.49841949823820e+00, diff = 3.38902423296936e-02
iter = 54, step = 6.94428401872336e-02, func = 7.47868372058860e+04, norm = 3.32475025559988e+00, diff = 4.82477937204018e-02
iter = 55, step = 6.59706981778719e-02, func = 7.47868205385737e+04, norm = 4.61032015438948e+00, diff = 4.42672321939721e-02
iter = 56, step = 6.26721632689783e-02, func = 7.47868348811424e+04, norm = 5.81064981980690e+00, diff = 2.89092670620281e-02
iter = 57, step = 5.95385551055294e-02, func = 7.47868472468873e+04, norm = 5.54278676405018e+00, diff = 2.75337405231423e-02
iter = 58, step = 5.65616273502529e-02, func = 7.47868742270141e+04, norm = 3.91971210251235e+00, diff = 2.88134497042304e-02
iter = 59, step = 5.37335459827403e-02, func = 7.47868398989572e+04, norm = 5.49486072710565e+00, diff = 4.23058689550499e-02
iter = 60, step = 5.10468686836033e-02, func = 7.47868722353468e+04, norm = 3.31505217855273e+00, diff = 2.55325000281051e-02
iter = 61, step = 4.84945252494231e-02, func = 7.47868890573878e+04, norm = 2.72481636335374e+00, diff = 3.25857180011021e-02
iter = 62, step = 4.60697989869519e-02, func = 7.47868822095704e+04, norm = 3.05718055103023e+00, diff = 2.75680402354880e-02
iter = 63, step = 4.37663090376043e-02, func = 7.47868968212845e+04, norm = 3.39128045534476e+00, diff = 2.73022963009459e-02
iter = 64, step = 4.15779935857241e-02, func = 7.47869080098030e+04, norm = 4.01946053076163e+00, diff = 2.17682971884072e-02
iter = 65, step = 3.94990939064379e-02, func = 7.47869160902292e+04, norm = 3.69187024035065e+00, diff = 2.00344622467051e-02
iter = 66, step = 3.75241392111160e-02, func = 7.47869309975700e+04, norm = 2.74923122828854e+00, diff = 1.97650098086176e-02
iter = 67, step = 3.56479322505602e-02, func = 7.47869250762349e+04, norm = 2.92159988572564e+00, diff = 2.41353654257085e-02
iter = 68, step = 3.38655356380322e-02, func = 7.47869273204585e+04, norm = 2.71149782347278e+00, diff = 1.64595541187214e-02
iter = 69, step = 3.21722588561306e-02, func = 7.47869358042017e+04, norm = 3.17555439400642e+00, diff = 1.84336673201517e-02
iter = 70, step = 3.05636459133241e-02, func = 7.47869478321352e+04, norm = 2.29847710114709e+00, diff = 1.27036366561675e-02
iter = 71, step = 2.90354636176579e-02, func = 7.47869531777270e+04, norm = 2.22657913645738e+00, diff = 1.68194352830215e-02
iter = 72, step = 2.75836904367750e-02, func = 7.47869547370086e+04, norm = 2.06648700808701e+00, diff = 1.45594363269598e-02
iter = 73, step = 2.62045059149362e-02, func = 7.47869357461633e+04, norm = 4.32205024392563e+00, diff = 1.36692371183861e-02
iter = 74, step = 2.48942806191894e-02, func = 7.47869577745607e+04, norm = 3.78191314112783e+00, diff = 8.60071550242128e-03
iter = 75, step = 2.36495665882299e-02, func = 7.47869631179985e+04, norm = 3.43960625008842e+00, diff = 1.25839685240257e-02
iter = 76, step = 2.24670882588184e-02, func = 7.47869636062343e+04, norm = 2.32534523847877e+00, diff = 1.25443723777305e-02
iter = 77, step = 2.13437338458775e-02, func = 7.47869713124481e+04, norm = 2.15053346993973e+00, diff = 1.38355773693991e-02
iter = 78, step = 2.02765471535836e-02, func = 7.47869723121039e+04, norm = 2.45644647724581e+00, diff = 1.09667506631712e-02
iter = 79, step = 1.92627197959044e-02, func = 7.47869716552320e+04, norm = 2.04239331456020e+00, diff = 7.80929223372498e-03
iter = 80, step = 1.82995838061092e-02, func = 7.47869794706157e+04, norm = 2.59229812141738e+00, diff = 1.10789748058899e-02
iter = 81, step = 1.73846046158038e-02, func = 7.47869725144883e+04, norm = 3.63334942618301e+00, diff = 7.71483844742981e-03
iter = 82, step = 1.65153743850136e-02, func = 7.47869787986363e+04, norm = 2.72637903390283e+00, diff = 6.45223129152062e-03
iter = 83, step = 1.56896056657629e-02, func = 7.47869803376759e+04, norm = 2.61543006629566e+00, diff = 8.50706462300585e-03
iter = 84, step = 1.49051253824747e-02, func = 7.47869813117871e+04, norm = 1.71684820397308e+00, diff = 8.23857555802767e-03
iter = 85, step = 1.41598691133510e-02, func = 7.47869845797685e+04, norm = 1.65461774179654e+00, diff = 9.40732164715476e-03
iter = 86, step = 1.34518756576835e-02, func = 7.47869848702755e+04, norm = 2.13031408414752e+00, diff = 6.16600026089590e-03
iter = 87, step = 1.27792818747993e-02, func = 7.47869895420987e+04, norm = 1.63054890353602e+00, diff = 5.12450282345119e-03
iter = 88, step = 1.21403177810593e-02, func = 7.47869912195894e+04, norm = 1.87020848782371e+00, diff = 5.15082122841634e-03
iter = 89, step = 1.15333018920064e-02, func = 7.47869918128266e+04, norm = 1.70567850162530e+00, diff = 4.88599578908614e-03
iter = 90, step = 1.09566367974060e-02, func = 7.47869900940605e+04, norm = 1.04533153587441e+01, diff = 5.23761951344052e-03
iter = 91, step = 1.04088049575357e-02, func = 7.47869914882376e+04, norm = 5.39905574368530e+00, diff = 5.58351475063698e-03
iter = 92, step = 9.88836470965895e-03, func = 7.47869912476274e+04, norm = 3.10587487787451e+00, diff = 6.27746714674000e-03
iter = 93, step = 9.39394647417600e-03, func = 7.47869941582337e+04, norm = 2.00268842799515e+00, diff = 3.62166647721308e-03
iter = 94, step = 8.92424915046720e-03, func = 7.47869957757704e+04, norm = 1.66884714260755e+00, diff = 4.31272492813980e-03
iter = 95, step = 8.47803669294384e-03, func = 7.47869946530106e+04, norm = 2.29741555977741e+00, diff = 4.24366114896001e-03
iter = 96, step = 8.47803669294384e-03, func = 7.47869954270751e+04, norm = 2.02585424215583e+00, diff = 7.14168406422772e-03
iter = 97, step = 8.05413485829665e-03, func = 7.47869960188360e+04, norm = 6.32539982686335e+00, diff = 3.54566844544184e-03
iter = 98, step = 7.65142811538181e-03, func = 7.47869963899169e+04, norm = 3.38117150965794e+00, diff = 3.09123121554698e-03
iter = 99, step = 7.26885670961272e-03, func = 7.47869963819500e+04, norm = 1.42914722051548e+00, diff = 4.13846343308135e-03
iter = 100, step = 7.26885670961272e-03, func = 7.47869957736083e+04, norm = 1.74599159212193e+00, diff = 5.25586400712985e-03
iter = 101, step = 6.90541387413209e-03, func = 7.47869968937009e+04, norm = 1.35439573920903e+00, diff = 2.14020943820382e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 7.478708e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 18, while k = 18 and n = 102
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 4.19788e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 10404
Number of centers left            = 102
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 10404 variables
Optimize a model with 10711 rows, 10506 columns and 42024 nonzeros
Variable types: 102 continuous, 10404 integer (10404 binary)
Coefficient statistics:
  Matrix range     [1e+00, 5e+06]
  Objective range  [2e+00, 2e+06]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 2e+01]
Presolve removed 0 rows and 206 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.006690 seconds
Total time elapsed: 0.140092 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running IN'
Running IN
+ /home/lykhovyd/progs/districting/districting myconfig.txt IN /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/IN.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/IN/counties/graph/IN.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/IN/counties/graph/IN_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/IN/counties/graph/IN.population
state[2]        = IN
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/IN.ralg_hot
nr_comp = 1
graph: 92 nodes, 234 edges (read)
Model input: L = 716821, U = 724024, k = 9.
Graph is connected.
Model input: total population = 6483802
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.17998115675107e+04, norm = 1.27427761606401e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 1.18003393013502e+04, norm = 7.94251136955470e+00, diff = 1.51137211887860e+00
iter = 3, step = 9.02500000000000e-01, func = 1.18015230495665e+04, norm = 5.60986377095434e+00, diff = 6.92204522334630e-01
iter = 4, step = 8.57375000000000e-01, func = 1.18018396816332e+04, norm = 4.93530750819501e+00, diff = 6.67265272854319e-01
iter = 5, step = 8.14506250000000e-01, func = 1.18022134566690e+04, norm = 8.39716297716014e+00, diff = 6.84825821163651e-01
iter = 6, step = 7.73780937500000e-01, func = 1.18021709251522e+04, norm = 5.99121545803327e+00, diff = 4.89085537650194e-01
iter = 7, step = 7.35091890625000e-01, func = 1.18025679610647e+04, norm = 5.63968290311760e+00, diff = 6.02371383518549e-01
iter = 8, step = 6.98337296093750e-01, func = 1.18018166603201e+04, norm = 6.32337525453921e+00, diff = 5.69379662351023e-01
iter = 9, step = 6.63420431289062e-01, func = 1.18023907846995e+04, norm = 4.83683514789662e+00, diff = 4.84555848586467e-01
iter = 10, step = 6.30249409724609e-01, func = 1.18025288448210e+04, norm = 5.20336242879677e+00, diff = 4.62559180681641e-01
iter = 11, step = 5.98736939238379e-01, func = 1.18025786564897e+04, norm = 6.80234786508107e+00, diff = 4.28669308664754e-01
iter = 12, step = 5.68800092276460e-01, func = 1.18028530681734e+04, norm = 4.81466249982246e+00, diff = 3.64899689145227e-01
iter = 13, step = 5.40360087662637e-01, func = 1.18030336262463e+04, norm = 4.03873758274739e+00, diff = 4.37535605073302e-01
iter = 14, step = 5.13342083279505e-01, func = 1.18029863268346e+04, norm = 4.45012085334828e+00, diff = 4.14426081501860e-01
iter = 15, step = 4.87674979115529e-01, func = 1.18030225495134e+04, norm = 4.24648254055737e+00, diff = 3.12416158603530e-01
iter = 16, step = 4.63291230159753e-01, func = 1.18031662782043e+04, norm = 3.74513643986085e+00, diff = 3.33180313068626e-01
iter = 17, step = 4.40126668651765e-01, func = 1.18033600032492e+04, norm = 3.77642211533342e+00, diff = 2.92020684241583e-01
iter = 18, step = 4.18120335219177e-01, func = 1.18032036961038e+04, norm = 4.25187764791965e+00, diff = 2.75877022875555e-01
iter = 19, step = 3.97214318458218e-01, func = 1.18032797969033e+04, norm = 3.76666939501255e+00, diff = 2.60331744733239e-01
iter = 20, step = 3.77353602535307e-01, func = 1.18034179602760e+04, norm = 3.22390536094371e+00, diff = 2.72993556401411e-01
iter = 21, step = 3.58485922408542e-01, func = 1.18035255937989e+04, norm = 3.19809155098703e+00, diff = 2.22181972428527e-01
iter = 22, step = 3.40561626288115e-01, func = 1.18034751250564e+04, norm = 3.29212669283726e+00, diff = 2.21723475482488e-01
iter = 23, step = 3.23533544973709e-01, func = 1.18035118674224e+04, norm = 3.31593786878693e+00, diff = 2.26554368787061e-01
iter = 24, step = 3.07356867725023e-01, func = 1.18035411995358e+04, norm = 3.06118269917218e+00, diff = 1.98821411258791e-01
iter = 25, step = 2.91989024338772e-01, func = 1.18035080714286e+04, norm = 3.29498702966387e+00, diff = 1.77744746445705e-01
iter = 26, step = 2.77389573121834e-01, func = 1.18035814597446e+04, norm = 2.75415270721695e+00, diff = 1.52091010788880e-01
iter = 27, step = 2.63520094465742e-01, func = 1.18036813837531e+04, norm = 2.34928358293654e+00, diff = 1.58198081754081e-01
iter = 28, step = 2.50344089742455e-01, func = 1.18035404007845e+04, norm = 2.82684547166636e+00, diff = 1.71459122980960e-01
iter = 29, step = 2.37826885255332e-01, func = 1.18036939314868e+04, norm = 2.46426447239416e+00, diff = 1.22411466114080e-01
iter = 30, step = 2.25935540992565e-01, func = 1.18037304752649e+04, norm = 2.08305991565311e+00, diff = 1.10063357236248e-01
iter = 31, step = 2.14638763942937e-01, func = 1.18036616408670e+04, norm = 3.27880311621535e+00, diff = 1.11112416267383e-01
iter = 32, step = 2.14638763942937e-01, func = 1.18036804362710e+04, norm = 2.57578769397445e+00, diff = 2.11038615280431e-01
iter = 33, step = 2.03906825745790e-01, func = 1.18037072350913e+04, norm = 1.99109647098795e+00, diff = 1.38533663024239e-01
iter = 34, step = 1.93711484458501e-01, func = 1.18037058243214e+04, norm = 2.23232660407063e+00, diff = 1.08253248820873e-01
iter = 35, step = 1.84025910235576e-01, func = 1.18037692226048e+04, norm = 1.74002088492687e+00, diff = 8.99342534487489e-02
iter = 36, step = 1.74824614723797e-01, func = 1.18037644606655e+04, norm = 1.77050853808316e+00, diff = 9.49142170318132e-02
iter = 37, step = 1.66083383987607e-01, func = 1.18037850866833e+04, norm = 1.81377712357009e+00, diff = 8.67828647439646e-02
iter = 38, step = 1.57779214788227e-01, func = 1.18037798013199e+04, norm = 1.79325937914057e+00, diff = 5.62812176604732e-02
iter = 39, step = 1.49890254048815e-01, func = 1.18037626963865e+04, norm = 1.90552529984685e+00, diff = 7.83545682908248e-02
iter = 40, step = 1.42395741346375e-01, func = 1.18038076075865e+04, norm = 1.53474273695771e+00, diff = 6.65679703589204e-02
iter = 41, step = 1.35275954279056e-01, func = 1.18038091730245e+04, norm = 1.66827431885124e+00, diff = 5.96998265673200e-02
iter = 42, step = 1.28512156565103e-01, func = 1.18038082754585e+04, norm = 1.42427982601596e+00, diff = 5.87288386941132e-02
iter = 43, step = 1.22086548736848e-01, func = 1.18038239481094e+04, norm = 1.26403170783522e+00, diff = 4.54142778142781e-02
iter = 44, step = 1.15982221300006e-01, func = 1.18038274444975e+04, norm = 1.24874014861967e+00, diff = 5.08919545924447e-02
iter = 45, step = 1.10183110235005e-01, func = 1.18038172557013e+04, norm = 1.41100065123207e+00, diff = 4.72001638839194e-02
iter = 46, step = 1.04673954723255e-01, func = 1.18038572761807e+04, norm = 1.31164752861369e+00, diff = 4.29512996912019e-02
iter = 47, step = 9.94402569870922e-02, func = 1.18038375563409e+04, norm = 1.47751209741078e+00, diff = 5.19704069957748e-02
iter = 48, step = 9.44682441377376e-02, func = 1.18038347581829e+04, norm = 1.41724903034418e+00, diff = 3.23363905700959e-02
iter = 49, step = 8.97448319308507e-02, func = 1.18038480220740e+04, norm = 1.33903915575792e+00, diff = 4.18612105460954e-02
iter = 50, step = 8.52575903343082e-02, func = 1.18038453349548e+04, norm = 1.20382813883396e+00, diff = 3.67697147246113e-02
iter = 51, step = 8.09947108175928e-02, func = 1.18038597341878e+04, norm = 9.75060286080265e-01, diff = 3.42333820012211e-02
iter = 52, step = 7.69449752767131e-02, func = 1.18038624033999e+04, norm = 1.07662774299302e+00, diff = 3.39990604715487e-02
iter = 53, step = 7.30977265128775e-02, func = 1.18038605826860e+04, norm = 9.92811533025966e-01, diff = 2.81687776984869e-02
iter = 54, step = 7.30977265128775e-02, func = 1.18038547437790e+04, norm = 9.94220571290029e-01, diff = 5.55444273324827e-02
iter = 55, step = 6.94428401872336e-02, func = 1.18038611244155e+04, norm = 8.66836467298976e-01, diff = 2.22524320872431e-02
iter = 56, step = 6.59706981778719e-02, func = 1.18038669190316e+04, norm = 7.92929303509960e-01, diff = 1.58606042711344e-02
iter = 57, step = 6.26721632689783e-02, func = 1.18038627753644e+04, norm = 8.98604626439066e-01, diff = 2.13250053107521e-02
iter = 58, step = 5.95385551055294e-02, func = 1.18038722972121e+04, norm = 8.53288663399630e-01, diff = 1.83227370907352e-02
iter = 59, step = 5.65616273502529e-02, func = 1.18038697722763e+04, norm = 8.99322525401247e-01, diff = 1.88361411202181e-02
iter = 60, step = 5.37335459827403e-02, func = 1.18038780995454e+04, norm = 6.23850409495149e-01, diff = 1.48162768760358e-02
iter = 61, step = 5.10468686836033e-02, func = 1.18038836134835e+04, norm = 6.72048519677874e-01, diff = 2.36461871428551e-02
iter = 62, step = 4.84945252494231e-02, func = 1.18038747403000e+04, norm = 7.05949248486487e-01, diff = 1.67503436337280e-02
iter = 63, step = 4.84945252494231e-02, func = 1.18038762879666e+04, norm = 7.39475180371892e-01, diff = 4.48437725393963e-02
iter = 64, step = 4.60697989869519e-02, func = 1.18038826642292e+04, norm = 7.12670203210291e-01, diff = 1.86240663589902e-02
iter = 65, step = 4.37663090376043e-02, func = 1.18038862633124e+04, norm = 4.36524287952713e-01, diff = 1.52447069598577e-02
iter = 66, step = 4.15779935857241e-02, func = 1.18038884658834e+04, norm = 4.08663905885483e-01, diff = 2.61089555376994e-02
iter = 67, step = 3.94990939064379e-02, func = 1.18038874374267e+04, norm = 6.16019456764932e-01, diff = 2.15213211280131e-02
iter = 68, step = 3.75241392111160e-02, func = 1.18038883110547e+04, norm = 5.23592422978641e-01, diff = 1.08041875966492e-02
iter = 69, step = 3.56479322505602e-02, func = 1.18038894985962e+04, norm = 6.49646883582937e-01, diff = 1.50899119849007e-02
iter = 70, step = 3.38655356380322e-02, func = 1.18038877976986e+04, norm = 6.36446293177073e-01, diff = 1.10948746740061e-02
iter = 71, step = 3.38655356380322e-02, func = 1.18038901461288e+04, norm = 5.93701771177085e-01, diff = 1.91565522524049e-02
iter = 72, step = 3.21722588561306e-02, func = 1.18038909039533e+04, norm = 5.05904622981666e-01, diff = 1.35136229623689e-02
iter = 73, step = 3.05636459133241e-02, func = 1.18038893654162e+04, norm = 5.12894321318981e-01, diff = 1.11414585430794e-02
iter = 74, step = 3.05636459133241e-02, func = 1.18038918970445e+04, norm = 7.78580703428589e-01, diff = 1.91956283310166e-02
iter = 75, step = 2.90354636176579e-02, func = 1.18038918565232e+04, norm = 5.25451628718972e-01, diff = 1.59731228965329e-02
iter = 76, step = 2.75836904367750e-02, func = 1.18038925973016e+04, norm = 4.37906656975225e-01, diff = 1.14045765572062e-02
iter = 77, step = 2.62045059149362e-02, func = 1.18038937740135e+04, norm = 4.63375392278000e-01, diff = 1.00884019759440e-02
iter = 78, step = 2.48942806191894e-02, func = 1.18038948379198e+04, norm = 3.96805394463661e-01, diff = 1.21814289801764e-02
iter = 79, step = 2.36495665882299e-02, func = 1.18038956877752e+04, norm = 4.34415281186488e-01, diff = 9.61762568197098e-03
iter = 80, step = 2.24670882588184e-02, func = 1.18038954759760e+04, norm = 4.79909627874203e-01, diff = 1.03931503421447e-02
iter = 81, step = 2.13437338458775e-02, func = 1.18038967903452e+04, norm = 4.48553171348622e-01, diff = 7.96022298997509e-03
iter = 82, step = 2.02765471535836e-02, func = 1.18038961337936e+04, norm = 4.28075052456476e-01, diff = 7.85943574251561e-03
iter = 83, step = 1.92627197959044e-02, func = 1.18038976129844e+04, norm = 3.38119933657449e-01, diff = 8.89798906455909e-03
iter = 84, step = 1.92627197959044e-02, func = 1.18038962382497e+04, norm = 5.42356120597975e-01, diff = 1.58519503776746e-02
iter = 85, step = 1.92627197959044e-02, func = 1.18038971605669e+04, norm = 3.40714404342450e-01, diff = 1.11075656685888e-02
iter = 86, step = 1.82995838061092e-02, func = 1.18038981800204e+04, norm = 5.16478009235921e-01, diff = 6.91005040174690e-03
iter = 87, step = 1.73846046158038e-02, func = 1.18038981465953e+04, norm = 3.72491275980603e-01, diff = 6.18752363335717e-03
iter = 88, step = 1.65153743850136e-02, func = 1.18038989394960e+04, norm = 2.71170721805868e-01, diff = 7.32782398477492e-03
iter = 89, step = 1.56896056657629e-02, func = 1.18038989740299e+04, norm = 3.87695330401737e-01, diff = 6.52436927815604e-03
iter = 90, step = 1.49051253824747e-02, func = 1.18039002207685e+04, norm = 2.66157049819731e-01, diff = 5.18905110830190e-03
iter = 91, step = 1.41598691133510e-02, func = 1.18039002615689e+04, norm = 3.65162197415074e-01, diff = 5.57956018527755e-03
iter = 92, step = 1.34518756576835e-02, func = 1.18039000016508e+04, norm = 3.70133342529478e-01, diff = 4.03509313388915e-03
iter = 93, step = 1.27792818747993e-02, func = 1.18039007533583e+04, norm = 2.77963823711802e-01, diff = 5.01660341178170e-03
iter = 94, step = 1.21403177810593e-02, func = 1.18039008024059e+04, norm = 2.40392405085781e-01, diff = 5.92110389048224e-03
iter = 95, step = 1.15333018920064e-02, func = 1.18039003643775e+04, norm = 3.29291435675962e-01, diff = 4.07864130656606e-03
iter = 96, step = 1.09566367974060e-02, func = 1.18039010913996e+04, norm = 2.26685539796151e-01, diff = 3.86833218259422e-03
iter = 97, step = 1.04088049575357e-02, func = 1.18039014673181e+04, norm = 2.30290970762549e-01, diff = 5.02376021371941e-03
iter = 98, step = 9.88836470965895e-03, func = 1.18039015665748e+04, norm = 2.30641371567633e-01, diff = 3.17993108565888e-03
iter = 99, step = 9.39394647417600e-03, func = 1.18039019491727e+04, norm = 2.03214515255997e-01, diff = 3.90774883441266e-03
iter = 100, step = 8.92424915046720e-03, func = 1.18039020908081e+04, norm = 2.35954014458798e-01, diff = 2.62895805332504e-03
iter = 101, step = 8.47803669294384e-03, func = 1.18039022512943e+04, norm = 2.43142020559848e-01, diff = 2.34086785450130e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.180391e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 9, while k = 9 and n = 92
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 3.42269e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 8464
Number of centers left            = 92
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 8464 variables
Optimize a model with 8741 rows, 8556 columns and 34224 nonzeros
Variable types: 92 continuous, 8464 integer (8464 binary)
Coefficient statistics:
  Matrix range     [1e+00, 9e+05]
  Objective range  [1e+00, 7e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 9e+00]
Presolve removed 0 rows and 93 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.005438 seconds
Total time elapsed: 0.115400 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running KS'
Running KS
+ /home/lykhovyd/progs/districting/districting myconfig.txt KS /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/KS.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/KS/counties/graph/KS.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/KS/counties/graph/KS_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/KS/counties/graph/KS.population
state[2]        = KS
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/KS.ralg_hot
nr_comp = 1
graph: 105 nodes, 263 edges (read)
Model input: L = 709714, U = 716845, k = 4.
Graph is connected.
Model input: total population = 2853118
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.24361125141054e+04, norm = 1.54340787955837e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 2.24342756221168e+04, norm = 1.42862030074539e+01, diff = 6.31439500104029e-01
iter = 3, step = 9.02500000000000e-01, func = 2.24388925854587e+04, norm = 1.02300812307668e+01, diff = 1.27322635783677e+00
iter = 4, step = 8.57375000000000e-01, func = 2.24397635687098e+04, norm = 6.65833861316285e+00, diff = 6.93560356248038e-01
iter = 5, step = 8.14506250000000e-01, func = 2.24407072585971e+04, norm = 6.47995759590604e+00, diff = 5.89360273746144e-01
iter = 6, step = 7.73780937500000e-01, func = 2.24408253113266e+04, norm = 5.81345945564346e+00, diff = 5.38858398733610e-01
iter = 7, step = 7.35091890625000e-01, func = 2.24412919746854e+04, norm = 4.38817427577269e+00, diff = 5.94491722389856e-01
iter = 8, step = 6.98337296093750e-01, func = 2.24413014839789e+04, norm = 5.03933975476670e+00, diff = 4.73461615215089e-01
iter = 9, step = 6.63420431289062e-01, func = 2.24412511805564e+04, norm = 5.74796072125045e+00, diff = 3.99505481121765e-01
iter = 10, step = 6.30249409724609e-01, func = 2.24407212603614e+04, norm = 7.95558118840254e+00, diff = 4.62499949743071e-01
iter = 11, step = 5.98736939238379e-01, func = 2.24417496527521e+04, norm = 4.48065189670650e+00, diff = 3.86659849966741e-01
iter = 12, step = 5.68800092276460e-01, func = 2.24413076800346e+04, norm = 5.30295509303424e+00, diff = 4.88616325883682e-01
iter = 13, step = 5.40360087662637e-01, func = 2.24414227603694e+04, norm = 3.63797717381480e+00, diff = 3.52551914997964e-01
iter = 14, step = 5.13342083279505e-01, func = 2.24412297440456e+04, norm = 4.10238618515441e+00, diff = 3.66215387739906e-01
iter = 15, step = 5.13342083279505e-01, func = 2.24416701578127e+04, norm = 2.95420890542375e+00, diff = 6.28033714127853e-01
iter = 16, step = 4.87674979115529e-01, func = 2.24417096279880e+04, norm = 3.10724756279543e+00, diff = 3.63784786227165e-01
iter = 17, step = 4.63291230159753e-01, func = 2.24415032768169e+04, norm = 3.44202070060827e+00, diff = 2.98634613342391e-01
iter = 18, step = 4.40126668651765e-01, func = 2.24416789472112e+04, norm = 2.97621259351661e+00, diff = 2.60000840715150e-01
iter = 19, step = 4.18120335219177e-01, func = 2.24418192854743e+04, norm = 2.06632329136785e+00, diff = 2.76531097366767e-01
iter = 20, step = 3.97214318458218e-01, func = 2.24416333927611e+04, norm = 3.04385984180128e+00, diff = 3.24720311139400e-01
iter = 21, step = 3.97214318458218e-01, func = 2.24416667233297e+04, norm = 2.79883669867700e+00, diff = 4.80536228047591e-01
iter = 22, step = 3.77353602535307e-01, func = 2.24418568746613e+04, norm = 1.84650405282305e+00, diff = 2.52599578502760e-01
iter = 23, step = 3.58485922408542e-01, func = 2.24417913743161e+04, norm = 1.99210485570129e+00, diff = 2.91799833324299e-01
iter = 24, step = 3.40561626288115e-01, func = 2.24418594319899e+04, norm = 2.08622102766929e+00, diff = 2.41028742599685e-01
iter = 25, step = 3.23533544973709e-01, func = 2.24418848427448e+04, norm = 2.44353872510052e+00, diff = 2.17220516615888e-01
iter = 26, step = 3.07356867725023e-01, func = 2.24418266333520e+04, norm = 2.91722378530531e+00, diff = 1.93093931690215e-01
iter = 27, step = 2.91989024338772e-01, func = 2.24418854161883e+04, norm = 1.78862783570996e+00, diff = 1.67147101935597e-01
iter = 28, step = 2.77389573121834e-01, func = 2.24419556506725e+04, norm = 1.41995829254731e+00, diff = 2.20109124817092e-01
iter = 29, step = 2.63520094465742e-01, func = 2.24418411628547e+04, norm = 1.89850634110655e+00, diff = 1.90124834658889e-01
iter = 30, step = 3.16224113358890e-01, func = 2.24419340365474e+04, norm = 1.25053011534119e+00, diff = 4.06894614690399e-01
iter = 31, step = 3.00412907690946e-01, func = 2.24418446947829e+04, norm = 1.93209965993210e+00, diff = 1.95600058749861e-01
iter = 32, step = 2.85392262306399e-01, func = 2.24420041488421e+04, norm = 1.74486924285287e+00, diff = 1.44487615903526e-01
iter = 33, step = 2.71122649191079e-01, func = 2.24420423417608e+04, norm = 1.78164403934497e+00, diff = 1.62497108239727e-01
iter = 34, step = 2.57566516731525e-01, func = 2.24420379996152e+04, norm = 1.28645982945111e+00, diff = 1.59611085251930e-01
iter = 35, step = 2.44688190894948e-01, func = 2.24420508610196e+04, norm = 1.13047571642233e+00, diff = 1.20954656541251e-01
iter = 36, step = 2.32453781350201e-01, func = 2.24420139195853e+04, norm = 1.20038723148901e+00, diff = 1.21344142136389e-01
iter = 37, step = 2.20831092282691e-01, func = 2.24420532181977e+04, norm = 7.97192799554933e-01, diff = 1.03183147240132e-01
iter = 38, step = 2.09789537668556e-01, func = 2.24420782242962e+04, norm = 8.25371346026894e-01, diff = 1.52426677126899e-01
iter = 39, step = 1.99300060785129e-01, func = 2.24421287904194e+04, norm = 1.80643984208008e+00, diff = 8.94870462924519e-02
iter = 40, step = 1.99300060785129e-01, func = 2.24420994976767e+04, norm = 2.08442871801220e+00, diff = 1.58916415139971e-01
iter = 41, step = 1.89335057745872e-01, func = 2.24420957155071e+04, norm = 1.78572251166952e+00, diff = 1.16146686385805e-01
iter = 42, step = 1.79868304858578e-01, func = 2.24421213019391e+04, norm = 1.22237916012405e+00, diff = 1.18928797183086e-01
iter = 43, step = 1.70874889615650e-01, func = 2.24421220211653e+04, norm = 1.16525643438197e+00, diff = 1.07665187153031e-01
iter = 44, step = 1.62331145134867e-01, func = 2.24421461462881e+04, norm = 7.55891598065141e-01, diff = 8.96328514639393e-02
iter = 45, step = 1.54214587878124e-01, func = 2.24421326126342e+04, norm = 2.02220192029078e+00, diff = 8.73107050122610e-02
iter = 46, step = 1.46503858484218e-01, func = 2.24421407040837e+04, norm = 1.72417207758683e+00, diff = 7.22979528050130e-02
iter = 47, step = 1.46503858484218e-01, func = 2.24421555523331e+04, norm = 1.34943980349470e+00, diff = 1.91721938317875e-01
iter = 48, step = 1.39178665560007e-01, func = 2.24421437824548e+04, norm = 1.05760198314956e+00, diff = 9.84814962006316e-02
iter = 49, step = 1.32219732282006e-01, func = 2.24421760341512e+04, norm = 6.58075406843926e-01, diff = 5.67048242831489e-02
iter = 50, step = 1.25608745667906e-01, func = 2.24421701621588e+04, norm = 7.52133599127181e-01, diff = 6.07401859180166e-02
iter = 51, step = 1.19328308384511e-01, func = 2.24421809441769e+04, norm = 5.59090014894536e-01, diff = 5.00650595409484e-02
iter = 52, step = 1.13361892965285e-01, func = 2.24421712272297e+04, norm = 1.04987580439266e+00, diff = 4.52309121602541e-02
iter = 53, step = 1.13361892965285e-01, func = 2.24421890867565e+04, norm = 8.91275629079364e-01, diff = 9.13763243585300e-02
iter = 54, step = 1.13361892965285e-01, func = 2.24422108067930e+04, norm = 6.54028181834479e-01, diff = 1.32011407245684e-01
iter = 55, step = 1.07693798317021e-01, func = 2.24422088196532e+04, norm = 5.47321227631749e-01, diff = 5.65964562975475e-02
iter = 56, step = 1.07693798317021e-01, func = 2.24421867974550e+04, norm = 1.25853497892055e+00, diff = 8.16463954193384e-02
iter = 57, step = 1.07693798317021e-01, func = 2.24422163902870e+04, norm = 8.70311855062021e-01, diff = 7.77223357288355e-02
iter = 58, step = 1.02309108401170e-01, func = 2.24422027845613e+04, norm = 1.33963320738614e+00, diff = 4.47766067129038e-02
iter = 59, step = 1.02309108401170e-01, func = 2.24422231606296e+04, norm = 7.13985561679511e-01, diff = 9.24703317398051e-02
iter = 60, step = 9.71936529811113e-02, func = 2.24422284657376e+04, norm = 6.68571404494899e-01, diff = 5.67619171488570e-02
iter = 61, step = 9.23339703320558e-02, func = 2.24422306706181e+04, norm = 9.42882261651811e-01, diff = 4.22846498309290e-02
iter = 62, step = 9.23339703320558e-02, func = 2.24422246820102e+04, norm = 8.83324700275423e-01, diff = 5.81911088390104e-02
iter = 63, step = 8.77172718154530e-02, func = 2.24422255447019e+04, norm = 8.29681064286016e-01, diff = 3.63961944059813e-02
iter = 64, step = 8.77172718154530e-02, func = 2.24422369173247e+04, norm = 7.06408888719781e-01, diff = 5.59623535882528e-02
iter = 65, step = 8.33314082246803e-02, func = 2.24422395039807e+04, norm = 5.04738089556789e-01, diff = 4.74521088079145e-02
iter = 66, step = 7.91648378134463e-02, func = 2.24422400823978e+04, norm = 5.25498500181396e-01, diff = 3.30376093314593e-02
iter = 67, step = 7.52065959227740e-02, func = 2.24422445992209e+04, norm = 6.54810418592306e-01, diff = 2.38997672802042e-02
iter = 68, step = 7.14462661266353e-02, func = 2.24422430038578e+04, norm = 8.05511317083219e-01, diff = 3.03786188567740e-02
iter = 69, step = 6.78739528203035e-02, func = 2.24422492065168e+04, norm = 4.82115688018234e-01, diff = 3.09057135674566e-02
iter = 70, step = 6.44802551792883e-02, func = 2.24422443374889e+04, norm = 9.48336148223535e-01, diff = 3.47696603311304e-02
iter = 71, step = 6.12562424203239e-02, func = 2.24422543617091e+04, norm = 5.16855634317178e-01, diff = 2.43583377789580e-02
iter = 72, step = 5.81934302993077e-02, func = 2.24422518063416e+04, norm = 1.02124805749020e+00, diff = 2.57605555566576e-02
iter = 73, step = 5.52837587843423e-02, func = 2.24422569215446e+04, norm = 5.83720138072764e-01, diff = 1.43316599218435e-02
iter = 74, step = 5.25195708451252e-02, func = 2.24422538172440e+04, norm = 6.41760637384640e-01, diff = 1.77027473907764e-02
iter = 75, step = 4.98935923028690e-02, func = 2.24422576266190e+04, norm = 5.24090992232952e-01, diff = 1.99985943912244e-02
iter = 76, step = 4.73989126877255e-02, func = 2.24422591528594e+04, norm = 4.10590920804519e-01, diff = 1.83392531669451e-02
iter = 77, step = 4.50289670533392e-02, func = 2.24422567649128e+04, norm = 5.08012198442661e-01, diff = 1.81827110174580e-02
iter = 78, step = 4.50289670533392e-02, func = 2.24422611956248e+04, norm = 3.28082855877035e-01, diff = 2.35938165218323e-02
iter = 79, step = 4.27775187006723e-02, func = 2.24422628294300e+04, norm = 4.30160766669624e-01, diff = 1.48904520584282e-02
iter = 80, step = 4.06386427656386e-02, func = 2.24422640145707e+04, norm = 2.96797869827828e-01, diff = 1.15870231417210e-02
iter = 81, step = 3.86067106273567e-02, func = 2.24422644386025e+04, norm = 2.76296119776569e-01, diff = 1.05849088780448e-02
iter = 82, step = 3.66763750959889e-02, func = 2.24422651101978e+04, norm = 3.52638835666083e-01, diff = 1.08714312594539e-02
iter = 83, step = 3.66763750959889e-02, func = 2.24422656180346e+04, norm = 2.69462214499041e-01, diff = 2.49603403686649e-02
iter = 84, step = 3.48425563411894e-02, func = 2.24422671869337e+04, norm = 5.42131028673516e-01, diff = 1.34761547053938e-02
iter = 85, step = 3.31004285241300e-02, func = 2.24422681383456e+04, norm = 3.61704517953218e-01, diff = 1.07698756277756e-02
iter = 86, step = 3.14454070979235e-02, func = 2.24422656999181e+04, norm = 8.49892036193470e-01, diff = 8.77191505186224e-03
iter = 87, step = 2.98731367430273e-02, func = 2.24422669002724e+04, norm = 5.12823407045648e-01, diff = 9.14884093821902e-03
iter = 88, step = 2.83794799058759e-02, func = 2.24422683520438e+04, norm = 3.25825796350035e-01, diff = 8.91989970731047e-03
iter = 89, step = 2.69605059105821e-02, func = 2.24422687840512e+04, norm = 2.74265263581419e-01, diff = 8.29923575242507e-03
iter = 90, step = 2.69605059105821e-02, func = 2.24422692612617e+04, norm = 6.77440639806127e-01, diff = 1.40176894615977e-02
iter = 91, step = 2.56124806150530e-02, func = 2.24422693934016e+04, norm = 3.76436750638977e-01, diff = 6.35616471957958e-03
iter = 92, step = 2.43318565843004e-02, func = 2.24422682043679e+04, norm = 3.49927825430469e-01, diff = 7.39028949267251e-03
iter = 93, step = 2.43318565843004e-02, func = 2.24422699963576e+04, norm = 3.33211377698550e-01, diff = 8.11779248382455e-03
iter = 94, step = 2.31152637550853e-02, func = 2.24422705020965e+04, norm = 2.48896001265815e-01, diff = 5.27570155013691e-03
iter = 95, step = 2.19595005673311e-02, func = 2.24422710389155e+04, norm = 1.65667480081355e-01, diff = 7.54574568899398e-03
iter = 96, step = 2.08615255389645e-02, func = 2.24422701566253e+04, norm = 3.80822575239772e-01, diff = 9.33584828040225e-03
iter = 97, step = 2.08615255389645e-02, func = 2.24422702807368e+04, norm = 2.65069856632943e-01, diff = 1.45159663043747e-02
iter = 98, step = 1.98184492620163e-02, func = 2.24422717132772e+04, norm = 1.82456252056508e-01, diff = 7.37227098601439e-03
iter = 99, step = 1.88275267989155e-02, func = 2.24422722037028e+04, norm = 1.44014415158999e-01, diff = 1.11475733840159e-02
iter = 100, step = 1.88275267989155e-02, func = 2.24422719936434e+04, norm = 1.81973211151897e-01, diff = 1.64546796309442e-02
iter = 101, step = 1.78861504589697e-02, func = 2.24422722449098e+04, norm = 1.71737190346699e-01, diff = 5.84283311246074e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.244228e+04
Time stats : init 0.0, compute 1.0, total 1.0
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 105
  UB from restricted IP = 210369 using centers : 92 51 11 69 
  UB from restricted IP = 26987.6 using centers : 86 3 22 18 
  UB from restricted IP = 24287.2 using centers : 86 69 22 26 
In iteration 0 of HessHeuristic, objective value of incumbent is = 24287.2
  UB from restricted IP = 69019.7 using centers : 73 16 4 21 
  UB from restricted IP = 24984.1 using centers : 102 6 22 86 
  UB from restricted IP = 24043 using centers : 69 6 22 86 
In iteration 1 of HessHeuristic, objective value of incumbent is = 24043
  UB from restricted IP = 83374 using centers : 65 69 49 101 
  UB from restricted IP = 29490.2 using centers : 86 54 6 48 
In iteration 2 of HessHeuristic, objective value of incumbent is = 24043
  UB from restricted IP = 358541 using centers : 56 100 85 63 
  UB from restricted IP = 34622.2 using centers : 48 23 74 86 
  UB from restricted IP = 27747.4 using centers : 19 23 16 86 
  UB from restricted IP = 26355.9 using centers : 19 22 16 86 
  UB from restricted IP = 24604.1 using centers : 69 22 16 86 
  UB from restricted IP = 23736.9 using centers : 69 22 93 0 
In iteration 3 of HessHeuristic, objective value of incumbent is = 23736.9
  UB from restricted IP = 206713 using centers : 45 100 90 85 
  UB from restricted IP = 28171.6 using centers : 86 22 81 3 
  UB from restricted IP = 24043 using centers : 86 22 6 69 
In iteration 4 of HessHeuristic, objective value of incumbent is = 23736.9
  UB from restricted IP = 170140 using centers : 51 84 22 60 
  UB from restricted IP = 24604.1 using centers : 69 16 22 86 
  UB from restricted IP = 23736.9 using centers : 69 93 22 0 
In iteration 5 of HessHeuristic, objective value of incumbent is = 23736.9
  UB from restricted IP = 51880.2 using centers : 5 14 47 6 
  UB from restricted IP = 28266.8 using centers : 72 71 86 6 
  UB from restricted IP = 27571.9 using centers : 72 71 86 26 
In iteration 6 of HessHeuristic, objective value of incumbent is = 23736.9
  UB from restricted IP = 130079 using centers : 90 21 99 88 
  UB from restricted IP = 31190.1 using centers : 48 6 86 94 
  UB from restricted IP = 29006.8 using centers : 48 26 86 54 
In iteration 7 of HessHeuristic, objective value of incumbent is = 23736.9
  UB from restricted IP = 94842.2 using centers : 77 24 72 2 
  UB from restricted IP = 23736.9 using centers : 0 69 22 93 
In iteration 8 of HessHeuristic, objective value of incumbent is = 23736.9
  UB from restricted IP = 93884.7 using centers : 36 0 46 15 
  UB from restricted IP = 24287.2 using centers : 26 86 22 69 
In iteration 9 of HessHeuristic, objective value of incumbent is = 23736.9
UB at end of HessHeuristic = 23736.9
UB of heuristicSolution = 23736.9
Best solution after 10 of HessHeuristic is 23736.89

Beginning LOCAL SEARCH with UB = 23736.9

Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 105
  checking neighbors of node 0
  checking neighbors of node 22
  checking neighbors of node 69
  checking neighbors of node 93
UB at end of local search heuristic = 23736.9
UB of heuristicSolution = 23736.9
Best solution after local search is 23736.89
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 105
Optimize a model with 945 rows, 2524 columns and 8347 nonzeros
Variable types: 2104 continuous, 420 integer (420 binary)
Coefficient statistics:
  Matrix range     [1e+00, 5e+05]
  Objective range  [8e+00, 6e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

MIP start produced solution with objective 23736.9 (0.00s)
Loaded MIP start with objective 23736.9

Presolve removed 51 rows and 207 columns
Presolve time: 0.01s
Presolved: 894 rows, 2317 columns, 7728 nonzeros
Variable types: 1924 continuous, 393 integer (393 binary)

Root relaxation: objective 2.359449e+04, 185 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 23594.5663    0    6 23736.8945 23594.5663  0.60%     -    0s
     0     0 23652.1203    0   10 23736.8945 23652.1203  0.36%     -    0s
     0     0 23691.2915    0    2 23736.8945 23691.2915  0.19%     -    0s

Explored 1 nodes (272 simplex iterations) in 0.05 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 23736.9 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.373689450900e+04, best bound 2.373689450900e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 23736.9 using centers : 0 22 69 93 
UB at end of ContiguityHeuristic = 23736.9
UB of (contiguous) heuristicSolution = 23736.9

Number of variables fixed to zero = 9413
Number of variables fixed to one  = 0
Number of variables not fixed     = 1612
Number of centers left            = 28
Percentage of vars fixed = 0.85
Academic license - for non-commercial use only
Build hess : created 1612 variables
Optimize a model with 2005 rows, 1717 columns and 6791 nonzeros
Variable types: 105 continuous, 1612 integer (1612 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [3e+00, 1e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]

Loaded MIP start with objective 23736.9

Presolve removed 260 rows and 98 columns
Presolve time: 0.01s
Presolved: 1745 rows, 1619 columns, 6474 nonzeros
Variable types: 0 continuous, 1619 integer (1592 binary)

Concurrent LP optimizer: dual simplex and barrier
Showing barrier log only...

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 6.000e+04
 Factor NZ  : 1.671e+05 (roughly 3 MBytes of memory)
 Factor Ops : 1.808e+07 (less than 1 second per iteration)
 Threads    : 3

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   2.23667795e+06 -7.66255957e+04  1.69e+04 0.00e+00  1.49e+03     0s
   1   7.05449359e+05 -1.21540236e+05  5.18e+03 7.11e-15  4.70e+02     0s
   2   2.03907979e+05 -9.32268368e+04  1.30e+03 8.88e-15  1.30e+02     0s

Barrier performed 2 iterations in 0.04 seconds
Barrier solve interrupted - model solved by another algorithm


Solved with dual simplex

Root relaxation: objective 2.244229e+04, 893 iterations, 0.03 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 22442.2885    0  270 23736.8945 22442.2885  5.45%     -    0s
     0     0 23128.6607    0  318 23736.8945 23128.6607  2.56%     -    0s
     0     0 23221.1969    0  281 23736.8945 23221.1969  2.17%     -    0s
     0     0 23229.8587    0  280 23736.8945 23229.8587  2.14%     -    0s
     0     0 23343.3513    0  319 23736.8945 23343.3513  1.66%     -    0s
     0     0 23349.4132    0  299 23736.8945 23349.4132  1.63%     -    0s
     0     0 23381.5065    0  309 23736.8945 23381.5065  1.50%     -    0s
     0     0 23594.5663    0    6 23736.8945 23594.5663  0.60%     -    0s
     0     0 23667.5901    0   14 23736.8945 23667.5901  0.29%     -    0s
     0     0 23667.5901    0    4 23736.8945 23667.5901  0.29%     -    0s
     0     0     cutoff    0      23736.8945 23736.8945  0.00%     -    0s

Cutting planes:
  Gomory: 4
  Cover: 1
  Implied bound: 1
  MIR: 4
  Flow cover: 1
  GUB cover: 2

Explored 1 nodes (2273 simplex iterations) in 0.44 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 23736.9 

Optimal solution found (tolerance 0.00e+00)
Best objective 2.373689450900e+04, best bound 2.373689450900e+04, gap 0.0000%
IP duration time: 0.440460 seconds
Total time elapsed: 1.095620 seconds
Number of callbacks: 3
Time in callbacks: 0.000244 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running KY'
Running KY
+ /home/lykhovyd/progs/districting/districting myconfig.txt KY /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/KY.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/KY/counties/graph/KY.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/KY/counties/graph/KY_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/KY/counties/graph/KY.population
state[2]        = KY
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/KY.ralg_hot
nr_comp = 1
graph: 120 nodes, 307 edges (read)
Model input: L = 719612, U = 726843, k = 6.
Graph is connected.
Model input: total population = 4339367
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.50154185857452e+04, norm = 1.61940488076830e+01, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 1.50182952678031e+04, norm = 1.02167743350413e+01, diff = 1.74004659547367e+00
iter = 3, step = 1.36800000000000e+00, func = 1.50189902123419e+04, norm = 6.65092761454816e+00, diff = 2.42279279803582e+00
iter = 4, step = 1.29960000000000e+00, func = 1.50185285701218e+04, norm = 6.23286052987038e+00, diff = 1.09814966327012e+00
iter = 5, step = 1.29960000000000e+00, func = 1.50199593793819e+04, norm = 6.50108407199467e+00, diff = 1.89873133633674e+00
iter = 6, step = 1.23462000000000e+00, func = 1.50183407950952e+04, norm = 8.98093519026962e+00, diff = 9.50010377348757e-01
iter = 7, step = 1.17288900000000e+00, func = 1.50194635855407e+04, norm = 7.47873829041477e+00, diff = 8.23683818273821e-01
iter = 8, step = 1.17288900000000e+00, func = 1.50200603734890e+04, norm = 6.45622545761773e+00, diff = 1.73400684377079e+00
iter = 9, step = 1.11424455000000e+00, func = 1.50206816515470e+04, norm = 6.34990065440122e+00, diff = 7.57982703487976e-01
iter = 10, step = 1.05853232250000e+00, func = 1.50205966210550e+04, norm = 5.99387653932224e+00, diff = 7.12005224107098e-01
iter = 11, step = 1.00560570637500e+00, func = 1.50214286320912e+04, norm = 4.46829117977416e+00, diff = 7.45739693899411e-01
iter = 12, step = 9.55325421056250e-01, func = 1.50214229372447e+04, norm = 5.55589613444454e+00, diff = 7.27974321922874e-01
iter = 13, step = 9.07559150003437e-01, func = 1.50217184822068e+04, norm = 4.23629568565895e+00, diff = 6.53389465140378e-01
iter = 14, step = 8.62181192503265e-01, func = 1.50221623514898e+04, norm = 4.06866302995131e+00, diff = 6.23700618863492e-01
iter = 15, step = 8.19072132878102e-01, func = 1.50213918920549e+04, norm = 4.40074252229416e+00, diff = 5.48340965230934e-01
iter = 16, step = 8.19072132878102e-01, func = 1.50214780884393e+04, norm = 3.83865366850914e+00, diff = 1.04890731867080e+00
iter = 17, step = 7.78118526234197e-01, func = 1.50217205346069e+04, norm = 3.80830274860891e+00, diff = 5.08894068524753e-01
iter = 18, step = 7.39212599922487e-01, func = 1.50221758102462e+04, norm = 3.16358487709087e+00, diff = 5.27468762353508e-01
iter = 19, step = 7.02251969926363e-01, func = 1.50221384920344e+04, norm = 4.08047153554304e+00, diff = 5.07561617251884e-01
iter = 20, step = 6.67139371430045e-01, func = 1.50222125254234e+04, norm = 3.50489436851122e+00, diff = 4.51181187775510e-01
iter = 21, step = 6.33782402858542e-01, func = 1.50224482263026e+04, norm = 2.66137152420296e+00, diff = 4.23707157050366e-01
iter = 22, step = 6.02093282715615e-01, func = 1.50222980324724e+04, norm = 3.02084926001461e+00, diff = 4.04537908066203e-01
iter = 23, step = 5.71988618579834e-01, func = 1.50224386074072e+04, norm = 2.83372068549636e+00, diff = 3.83807603839769e-01
iter = 24, step = 5.43389187650843e-01, func = 1.50223021289358e+04, norm = 2.95131460663090e+00, diff = 3.49400295664384e-01
iter = 25, step = 5.43389187650843e-01, func = 1.50224468997421e+04, norm = 2.89763726768075e+00, diff = 5.85747632663101e-01
iter = 26, step = 5.16219728268300e-01, func = 1.50221799022766e+04, norm = 3.36442753171677e+00, diff = 3.43215212644747e-01
iter = 27, step = 4.90408741854885e-01, func = 1.50225714464126e+04, norm = 2.28307900005104e+00, diff = 2.79042102536069e-01
iter = 28, step = 4.65888304762141e-01, func = 1.50226763378422e+04, norm = 2.33506066279404e+00, diff = 2.86659498108029e-01
iter = 29, step = 4.42593889524034e-01, func = 1.50226069028660e+04, norm = 2.82889730674629e+00, diff = 3.02522187080754e-01
iter = 30, step = 4.20464195047832e-01, func = 1.50226541438324e+04, norm = 2.49672967298233e+00, diff = 2.66579213632169e-01
iter = 31, step = 3.99440985295441e-01, func = 1.50225697042181e+04, norm = 2.20059711581379e+00, diff = 2.66428268004412e-01
iter = 32, step = 3.79468936030669e-01, func = 1.50225205614001e+04, norm = 2.68340206722987e+00, diff = 2.62406979246948e-01
iter = 33, step = 3.79468936030669e-01, func = 1.50226094118148e+04, norm = 2.48230217862158e+00, diff = 4.41211598328172e-01
iter = 34, step = 3.60495489229135e-01, func = 1.50226871372532e+04, norm = 2.05407729399132e+00, diff = 2.42793272120866e-01
iter = 35, step = 3.42470714767678e-01, func = 1.50227942330721e+04, norm = 1.70234625323953e+00, diff = 2.06963218127759e-01
iter = 36, step = 3.25347179029294e-01, func = 1.50227702820440e+04, norm = 2.22683979472566e+00, diff = 1.98987614775241e-01
iter = 37, step = 3.09079820077830e-01, func = 1.50228108216915e+04, norm = 1.44566711299310e+00, diff = 1.64044409555643e-01
iter = 38, step = 2.93625829073938e-01, func = 1.50228462109379e+04, norm = 1.16894130904082e+00, diff = 2.01311171053005e-01
iter = 39, step = 2.78944537620241e-01, func = 1.50228151013667e+04, norm = 1.43273539371609e+00, diff = 1.57765525068237e-01
iter = 40, step = 2.64997310739229e-01, func = 1.50228738248893e+04, norm = 1.26307615052655e+00, diff = 1.65632330979933e-01
iter = 41, step = 2.51747445202268e-01, func = 1.50228962705179e+04, norm = 9.01186091833674e-01, diff = 1.58437886770108e-01
iter = 42, step = 2.39160072942154e-01, func = 1.50228836873489e+04, norm = 1.46273963893631e+00, diff = 1.64309686823177e-01
iter = 43, step = 2.27202069295047e-01, func = 1.50229015312402e+04, norm = 1.12993622696004e+00, diff = 9.04836243731063e-02
iter = 44, step = 2.15841965830294e-01, func = 1.50228902908745e+04, norm = 1.29207335190527e+00, diff = 1.19510010278259e-01
iter = 45, step = 2.05049867538780e-01, func = 1.50228957625727e+04, norm = 1.21189462538331e+00, diff = 9.71716468257728e-02
iter = 46, step = 1.94797374161841e-01, func = 1.50229484941481e+04, norm = 9.26181283977678e-01, diff = 8.70667255217747e-02
iter = 47, step = 1.85057505453749e-01, func = 1.50229501668163e+04, norm = 1.23983184820685e+00, diff = 1.10565451291955e-01
iter = 48, step = 1.75804630181061e-01, func = 1.50229467144444e+04, norm = 1.19275900887424e+00, diff = 9.56413108837938e-02
iter = 49, step = 1.67014398672008e-01, func = 1.50229679046888e+04, norm = 1.16785850806148e+00, diff = 8.68194710975586e-02
iter = 50, step = 1.58663678738408e-01, func = 1.50229791299465e+04, norm = 7.47192918702301e-01, diff = 8.13936447799993e-02
iter = 51, step = 1.50730494801487e-01, func = 1.50229889385825e+04, norm = 6.88389859934782e-01, diff = 9.77014339395300e-02
iter = 52, step = 1.43193970061413e-01, func = 1.50230032276385e+04, norm = 5.68460709181774e-01, diff = 8.35925785727124e-02
iter = 53, step = 1.36034271558342e-01, func = 1.50230173580072e+04, norm = 5.96015841019130e-01, diff = 7.14684407965404e-02
iter = 54, step = 1.29232557980425e-01, func = 1.50230147786859e+04, norm = 8.95982388659733e-01, diff = 7.93188198030979e-02
iter = 55, step = 1.22770930081404e-01, func = 1.50230387386848e+04, norm = 8.51126157935251e-01, diff = 4.18626561917364e-02
iter = 56, step = 1.16632383577334e-01, func = 1.50230408246190e+04, norm = 8.29346497831927e-01, diff = 5.35177663858033e-02
iter = 57, step = 1.10800764398467e-01, func = 1.50230393046734e+04, norm = 1.23092757926641e+00, diff = 6.41977900703771e-02
iter = 58, step = 1.10800764398467e-01, func = 1.50230609734532e+04, norm = 7.55713248201280e-01, diff = 8.26294534423372e-02
iter = 59, step = 1.05260726178544e-01, func = 1.50230611152989e+04, norm = 1.24301601474437e+00, diff = 6.27464829560686e-02
iter = 60, step = 1.05260726178544e-01, func = 1.50230552060733e+04, norm = 1.23263748116615e+00, diff = 8.67343587529154e-02
iter = 61, step = 9.99976898696164e-02, func = 1.50230724524246e+04, norm = 9.15379242268276e-01, diff = 3.49729809911008e-02
iter = 62, step = 9.49978053761356e-02, func = 1.50230774388070e+04, norm = 7.49951305458266e-01, diff = 3.34404178691103e-02
iter = 63, step = 9.49978053761356e-02, func = 1.50230828878552e+04, norm = 5.88494908606268e-01, diff = 8.93785394464737e-02
iter = 64, step = 9.02479151073288e-02, func = 1.50230876962912e+04, norm = 5.91639606463753e-01, diff = 4.43920515918149e-02
iter = 65, step = 8.57355193519624e-02, func = 1.50230919529941e+04, norm = 6.55538752629103e-01, diff = 4.76953838255895e-02
iter = 66, step = 8.14487433843643e-02, func = 1.50230959773992e+04, norm = 6.26767723308263e-01, diff = 2.78245419487191e-02
iter = 67, step = 7.73763062151460e-02, func = 1.50230998974777e+04, norm = 5.77475579612321e-01, diff = 2.99338610425748e-02
iter = 68, step = 7.35074909043887e-02, func = 1.50230971380586e+04, norm = 6.48971496563218e-01, diff = 3.11278879470077e-02
iter = 69, step = 6.98321163591693e-02, func = 1.50231050067940e+04, norm = 5.70252549154676e-01, diff = 2.47935625839090e-02
iter = 70, step = 6.98321163591693e-02, func = 1.50231107765996e+04, norm = 5.70226395969120e-01, diff = 5.04105977701198e-02
iter = 71, step = 6.63405105412108e-02, func = 1.50231158664693e+04, norm = 5.75372583214621e-01, diff = 2.62982187388183e-02
iter = 72, step = 6.30234850141503e-02, func = 1.50231188888024e+04, norm = 5.05893062017560e-01, diff = 2.30062332976642e-02
iter = 73, step = 5.98723107634428e-02, func = 1.50231165133399e+04, norm = 7.22317920103854e-01, diff = 2.34975592495246e-02
iter = 74, step = 5.68786952252706e-02, func = 1.50231180651596e+04, norm = 6.11406670578551e-01, diff = 1.50556778682338e-02
iter = 75, step = 5.40347604640071e-02, func = 1.50231215076598e+04, norm = 6.90554695058983e-01, diff = 1.71858092795293e-02
iter = 76, step = 5.13330224408067e-02, func = 1.50231276877054e+04, norm = 7.17111110248828e-01, diff = 1.73000008274402e-02
iter = 77, step = 4.87663713187664e-02, func = 1.50231239473724e+04, norm = 6.65715618763779e-01, diff = 1.30739040623086e-02
iter = 78, step = 4.63280527528281e-02, func = 1.50231264674113e+04, norm = 4.80943018237836e-01, diff = 1.32241512801235e-02
iter = 79, step = 4.40116501151867e-02, func = 1.50231290503663e+04, norm = 6.22725358464287e-01, diff = 1.18117627329460e-02
iter = 80, step = 4.18110676094273e-02, func = 1.50231289757167e+04, norm = 5.00904887442945e-01, diff = 1.89263603827106e-02
iter = 81, step = 3.97205142289560e-02, func = 1.50231299043949e+04, norm = 6.74936202198862e-01, diff = 1.72058454668673e-02
iter = 82, step = 3.77344885175082e-02, func = 1.50231318916732e+04, norm = 3.85892526344797e-01, diff = 1.30501373675830e-02
iter = 83, step = 3.58477640916328e-02, func = 1.50231276125060e+04, norm = 9.25945500669878e-01, diff = 1.83545762543763e-02
iter = 84, step = 3.58477640916328e-02, func = 1.50231325262492e+04, norm = 6.22934668925181e-01, diff = 3.19797138997374e-02
iter = 85, step = 3.40553758870511e-02, func = 1.50231322391452e+04, norm = 6.39016681563454e-01, diff = 1.28579370481428e-02
iter = 86, step = 3.23526070926986e-02, func = 1.50231336337020e+04, norm = 4.47720664861759e-01, diff = 8.93907616619356e-03
iter = 87, step = 3.07349767380636e-02, func = 1.50231355905056e+04, norm = 3.35393988229299e-01, diff = 1.12102044729581e-02
iter = 88, step = 2.91982279011604e-02, func = 1.50231321775472e+04, norm = 5.77190682049997e-01, diff = 1.01786278589513e-02
iter = 89, step = 2.91982279011604e-02, func = 1.50231358362783e+04, norm = 4.30156814863088e-01, diff = 1.24583702008248e-02
iter = 90, step = 2.77383165061024e-02, func = 1.50231369981121e+04, norm = 3.20423303991617e-01, diff = 1.10696041163514e-02
iter = 91, step = 2.63514006807973e-02, func = 1.50231378857433e+04, norm = 4.20003815911578e-01, diff = 8.63089776581695e-03
iter = 92, step = 2.50338306467574e-02, func = 1.50231365631697e+04, norm = 6.57755949454473e-01, diff = 5.09489632765194e-03
iter = 93, step = 2.50338306467574e-02, func = 1.50231379099442e+04, norm = 4.21087326411925e-01, diff = 1.23471976906222e-02
iter = 94, step = 2.37821391144196e-02, func = 1.50231383245609e+04, norm = 3.44452640919443e-01, diff = 8.27509554860113e-03
iter = 95, step = 2.25930321586986e-02, func = 1.50231386224257e+04, norm = 3.04515420741962e-01, diff = 7.27939595700701e-03
iter = 96, step = 2.14633805507636e-02, func = 1.50231388318501e+04, norm = 3.46131797313477e-01, diff = 5.29962978826485e-03
iter = 97, step = 2.03902115232255e-02, func = 1.50231393539589e+04, norm = 2.88370529176877e-01, diff = 4.94167766068989e-03
iter = 98, step = 1.93707009470642e-02, func = 1.50231393192528e+04, norm = 3.10369607432285e-01, diff = 4.48625263584661e-03
iter = 99, step = 1.84021658997110e-02, func = 1.50231396467693e+04, norm = 3.08942758553595e-01, diff = 4.47040511665869e-03
iter = 100, step = 1.74820576047254e-02, func = 1.50231402117134e+04, norm = 2.02992388199563e-01, diff = 5.90532605154753e-03
iter = 101, step = 1.66079547244892e-02, func = 1.50231403254533e+04, norm = 2.20904186900189e-01, diff = 4.30037521010558e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.502316e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 6, while k = 6 and n = 120
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 5.79243e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 14400
Number of centers left            = 120
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 14400 variables
Optimize a model with 14761 rows, 14520 columns and 58080 nonzeros
Variable types: 120 continuous, 14400 integer (14400 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [8e-01, 1e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+00]
Presolve removed 0 rows and 121 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.009177 seconds
Total time elapsed: 0.191571 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running LA'
Running LA
+ /home/lykhovyd/progs/districting/districting myconfig.txt LA /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/LA.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/LA/counties/graph/LA.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/LA/counties/graph/LA_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/LA/counties/graph/LA.population
state[2]        = LA
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/LA.ralg_hot
nr_comp = 1
graph: 64 nodes, 160 edges (read)
Model input: L = 751785, U = 759339, k = 6.
Graph is connected.
Model input: total population = 4533372
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.54595759832846e+04, norm = 1.54276593828253e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.54619037632470e+04, norm = 7.99474316991059e+00, diff = 6.70693940055797e-01
iter = 3, step = 8.57375000000000e-01, func = 1.54623589964360e+04, norm = 9.01477408435630e+00, diff = 6.60511617382837e-01
iter = 4, step = 8.14506250000000e-01, func = 1.54640602065679e+04, norm = 6.96764407992490e+00, diff = 6.15939689102344e-01
iter = 5, step = 7.73780937500000e-01, func = 1.54620751832928e+04, norm = 1.07927526693510e+01, diff = 6.11774440681514e-01
iter = 6, step = 7.73780937500000e-01, func = 1.54636259481271e+04, norm = 8.16382561682631e+00, diff = 9.08390227222029e-01
iter = 7, step = 7.35091890625000e-01, func = 1.54636353895966e+04, norm = 6.84155997106100e+00, diff = 5.82563405871813e-01
iter = 8, step = 6.98337296093750e-01, func = 1.54644128828033e+04, norm = 4.90156176629577e+00, diff = 4.93739058301980e-01
iter = 9, step = 6.63420431289062e-01, func = 1.54649225714578e+04, norm = 4.20414348712433e+00, diff = 4.42991001947942e-01
iter = 10, step = 6.30249409724609e-01, func = 1.54645793198598e+04, norm = 5.84118049373183e+00, diff = 4.89517232919437e-01
iter = 11, step = 5.98736939238379e-01, func = 1.54642861306577e+04, norm = 5.97155798779820e+00, diff = 4.27723700221494e-01
iter = 12, step = 5.98736939238379e-01, func = 1.54643475808535e+04, norm = 5.61945393049896e+00, diff = 8.04887648188642e-01
iter = 13, step = 5.68800092276460e-01, func = 1.54644344915045e+04, norm = 4.70961627460384e+00, diff = 4.30658975488049e-01
iter = 14, step = 5.40360087662637e-01, func = 1.54646897017936e+04, norm = 4.76799194295812e+00, diff = 3.96127195891149e-01
iter = 15, step = 5.13342083279505e-01, func = 1.54648721027326e+04, norm = 4.70186202740624e+00, diff = 3.77396706938462e-01
iter = 16, step = 4.87674979115529e-01, func = 1.54649715002251e+04, norm = 5.75340360691754e+00, diff = 3.30554515756328e-01
iter = 17, step = 4.63291230159753e-01, func = 1.54653081725931e+04, norm = 4.11270895956313e+00, diff = 2.98420138234475e-01
iter = 18, step = 4.40126668651765e-01, func = 1.54653820933562e+04, norm = 5.15492008732346e+00, diff = 3.62799521267523e-01
iter = 19, step = 4.18120335219177e-01, func = 1.54655340351884e+04, norm = 4.41890260916424e+00, diff = 2.80126056507838e-01
iter = 20, step = 3.97214318458218e-01, func = 1.54654148842583e+04, norm = 4.06269420730503e+00, diff = 2.73359375418426e-01
iter = 21, step = 3.77353602535307e-01, func = 1.54656168045000e+04, norm = 4.05117772720303e+00, diff = 2.62330024734054e-01
iter = 22, step = 3.58485922408542e-01, func = 1.54654986695154e+04, norm = 4.31178299656927e+00, diff = 2.38468375799918e-01
iter = 23, step = 3.40561626288115e-01, func = 1.54654833717690e+04, norm = 4.79015749513038e+00, diff = 2.43521903509568e-01
iter = 24, step = 3.23533544973709e-01, func = 1.54656259214761e+04, norm = 4.70023035874045e+00, diff = 2.09366425673452e-01
iter = 25, step = 3.07356867725023e-01, func = 1.54656442466679e+04, norm = 4.06735548611100e+00, diff = 2.28492161593800e-01
iter = 26, step = 2.91989024338772e-01, func = 1.54656312915738e+04, norm = 4.64247653489647e+00, diff = 2.15454514470792e-01
iter = 27, step = 2.91989024338772e-01, func = 1.54657666213247e+04, norm = 3.64693705769084e+00, diff = 3.47042669012136e-01
iter = 28, step = 2.77389573121834e-01, func = 1.54655836565861e+04, norm = 3.93736130801597e+00, diff = 1.98509322937721e-01
iter = 29, step = 2.63520094465742e-01, func = 1.54657762989793e+04, norm = 3.87202834160698e+00, diff = 1.70536237681091e-01
iter = 30, step = 2.50344089742455e-01, func = 1.54657521609138e+04, norm = 4.06447529187332e+00, diff = 1.59451840290052e-01
iter = 31, step = 2.37826885255332e-01, func = 1.54659223496250e+04, norm = 3.16151091191142e+00, diff = 1.86103032667705e-01
iter = 32, step = 2.25935540992565e-01, func = 1.54658026792471e+04, norm = 3.55180052542865e+00, diff = 1.47323338551020e-01
iter = 33, step = 2.14638763942937e-01, func = 1.54658977403160e+04, norm = 2.72171048073930e+00, diff = 1.39891000265029e-01
iter = 34, step = 2.03906825745790e-01, func = 1.54659857883681e+04, norm = 2.68923764427655e+00, diff = 1.43874819539828e-01
iter = 35, step = 1.93711484458501e-01, func = 1.54659372774703e+04, norm = 3.32262542884781e+00, diff = 1.21123154193240e-01
iter = 36, step = 1.84025910235576e-01, func = 1.54659781052297e+04, norm = 2.99768160555766e+00, diff = 1.06857147791340e-01
iter = 37, step = 1.74824614723797e-01, func = 1.54659908449219e+04, norm = 3.09698136920830e+00, diff = 1.06993453646352e-01
iter = 38, step = 1.66083383987607e-01, func = 1.54659599089689e+04, norm = 3.53267235856590e+00, diff = 1.13181842372197e-01
iter = 39, step = 1.57779214788227e-01, func = 1.54660174132518e+04, norm = 2.47422759862114e+00, diff = 8.74781358992074e-02
iter = 40, step = 1.49890254048815e-01, func = 1.54659825156531e+04, norm = 3.02872330868342e+00, diff = 9.56899983231940e-02
iter = 41, step = 1.42395741346375e-01, func = 1.54660553569924e+04, norm = 2.70205922302962e+00, diff = 8.31882552065936e-02
iter = 42, step = 1.35275954279056e-01, func = 1.54660414933369e+04, norm = 2.64875624756943e+00, diff = 9.14565810199205e-02
iter = 43, step = 1.28512156565103e-01, func = 1.54660302459966e+04, norm = 2.72683540045777e+00, diff = 8.59360385536721e-02
iter = 44, step = 1.22086548736848e-01, func = 1.54660718680405e+04, norm = 2.45239066988681e+00, diff = 6.60382852737415e-02
iter = 45, step = 1.15982221300006e-01, func = 1.54660119959320e+04, norm = 3.45271283486408e+00, diff = 7.83753247647390e-02
iter = 46, step = 1.10183110235005e-01, func = 1.54660550987386e+04, norm = 2.54930273348200e+00, diff = 5.86312598572418e-02
iter = 47, step = 1.04673954723255e-01, func = 1.54661037324413e+04, norm = 2.34601501623183e+00, diff = 6.84834155097109e-02
iter = 48, step = 9.94402569870922e-02, func = 1.54660888468095e+04, norm = 2.30818921134400e+00, diff = 7.41109381916460e-02
iter = 49, step = 9.44682441377376e-02, func = 1.54660817011126e+04, norm = 2.60383275379720e+00, diff = 6.20495228269023e-02
iter = 50, step = 8.97448319308507e-02, func = 1.54660853072327e+04, norm = 2.40623353700661e+00, diff = 5.43181120456853e-02
iter = 51, step = 8.52575903343082e-02, func = 1.54661174980845e+04, norm = 2.11189744116532e+00, diff = 5.53796081050412e-02
iter = 52, step = 8.09947108175928e-02, func = 1.54661181917238e+04, norm = 2.48129449734063e+00, diff = 5.26696264412321e-02
iter = 53, step = 7.69449752767131e-02, func = 1.54661111860773e+04, norm = 2.68467811735665e+00, diff = 5.03142177691970e-02
iter = 54, step = 7.30977265128775e-02, func = 1.54661368849596e+04, norm = 2.01688997779028e+00, diff = 4.41409143122119e-02
iter = 55, step = 6.94428401872336e-02, func = 1.54661168245241e+04, norm = 2.50001478900238e+00, diff = 5.05239466874205e-02
iter = 56, step = 6.59706981778719e-02, func = 1.54661376285119e+04, norm = 1.85001867196065e+00, diff = 3.69330465065893e-02
iter = 57, step = 6.26721632689783e-02, func = 1.54661217994748e+04, norm = 2.39026586494815e+00, diff = 3.56359177471834e-02
iter = 58, step = 5.95385551055294e-02, func = 1.54661452404327e+04, norm = 1.88913705685912e+00, diff = 3.01566567042312e-02
iter = 59, step = 5.65616273502529e-02, func = 1.54661428456556e+04, norm = 2.16077400946074e+00, diff = 3.87477316746261e-02
iter = 60, step = 5.37335459827403e-02, func = 1.54661545272470e+04, norm = 1.72452051058693e+00, diff = 3.60744314717665e-02
iter = 61, step = 5.10468686836033e-02, func = 1.54661545032401e+04, norm = 1.70530581002269e+00, diff = 2.78571733879526e-02
iter = 62, step = 4.84945252494231e-02, func = 1.54661503825181e+04, norm = 2.20514892916419e+00, diff = 2.72242814928849e-02
iter = 63, step = 4.60697989869519e-02, func = 1.54661647387186e+04, norm = 2.06114017427786e+00, diff = 2.59539137777164e-02
iter = 64, step = 4.37663090376043e-02, func = 1.54661557157740e+04, norm = 1.99966540947525e+00, diff = 2.64827070087309e-02
iter = 65, step = 4.15779935857241e-02, func = 1.54661779747893e+04, norm = 1.49082155115203e+00, diff = 2.39867437953782e-02
iter = 66, step = 3.94990939064379e-02, func = 1.54661768564959e+04, norm = 1.68234990407737e+00, diff = 2.25081430186689e-02
iter = 67, step = 3.75241392111160e-02, func = 1.54661733656579e+04, norm = 1.91891430240424e+00, diff = 2.03549132604852e-02
iter = 68, step = 3.56479322505602e-02, func = 1.54661802799807e+04, norm = 1.65911300064236e+00, diff = 1.92148634921751e-02
iter = 69, step = 3.38655356380322e-02, func = 1.54661767467582e+04, norm = 1.99708634578447e+00, diff = 1.88804590432446e-02
iter = 70, step = 3.21722588561306e-02, func = 1.54661775087985e+04, norm = 1.82626341553558e+00, diff = 1.52955047711344e-02
iter = 71, step = 3.05636459133241e-02, func = 1.54661802087253e+04, norm = 2.13562788979860e+00, diff = 1.59105978983187e-02
iter = 72, step = 2.90354636176579e-02, func = 1.54661877548001e+04, norm = 1.70648773435162e+00, diff = 1.74947986538152e-02
iter = 73, step = 2.75836904367750e-02, func = 1.54661883804487e+04, norm = 1.33766221100647e+00, diff = 1.48860448556861e-02
iter = 74, step = 2.62045059149362e-02, func = 1.54661859386850e+04, norm = 1.95348717196557e+00, diff = 1.50288962083633e-02
iter = 75, step = 2.48942806191894e-02, func = 1.54661899666434e+04, norm = 1.46079929530187e+00, diff = 1.20957070507056e-02
iter = 76, step = 2.36495665882299e-02, func = 1.54661895337876e+04, norm = 1.40258057866721e+00, diff = 1.38099366655092e-02
iter = 77, step = 2.24670882588184e-02, func = 1.54661938030231e+04, norm = 1.42042843530413e+00, diff = 1.30876948491142e-02
iter = 78, step = 2.13437338458775e-02, func = 1.54661922117915e+04, norm = 1.91966015804261e+00, diff = 1.02472654040588e-02
iter = 79, step = 2.02765471535836e-02, func = 1.54661912844423e+04, norm = 1.63770307008719e+00, diff = 1.19760957709148e-02
iter = 80, step = 1.92627197959044e-02, func = 1.54661957700008e+04, norm = 1.29594922006096e+00, diff = 1.18872320361968e-02
iter = 81, step = 1.82995838061092e-02, func = 1.54661947501761e+04, norm = 1.65589389435003e+00, diff = 1.15719536308774e-02
iter = 82, step = 1.73846046158038e-02, func = 1.54661960188211e+04, norm = 1.24194370851365e+00, diff = 8.51438110096719e-03
iter = 83, step = 1.65153743850136e-02, func = 1.54661981165223e+04, norm = 1.90678897300861e+00, diff = 7.58479812021435e-03
iter = 84, step = 1.56896056657629e-02, func = 1.54661993609384e+04, norm = 1.59449365378961e+00, diff = 7.17197613530901e-03
iter = 85, step = 1.49051253824747e-02, func = 1.54661995373692e+04, norm = 1.53164101447350e+00, diff = 8.81596410064230e-03
iter = 86, step = 1.41598691133510e-02, func = 1.54661991188483e+04, norm = 1.44655442265951e+00, diff = 7.85643941775883e-03
iter = 87, step = 1.34518756576835e-02, func = 1.54662002243432e+04, norm = 1.45051668147546e+00, diff = 6.55999091594468e-03
iter = 88, step = 1.27792818747993e-02, func = 1.54662022674618e+04, norm = 1.13952287348553e+00, diff = 5.43788671544796e-03
iter = 89, step = 1.21403177810593e-02, func = 1.54662028562425e+04, norm = 1.26322141363064e+00, diff = 5.19879229844596e-03
iter = 90, step = 1.15333018920064e-02, func = 1.54662023422137e+04, norm = 1.26174518437906e+00, diff = 5.74147313617566e-03
iter = 91, step = 1.09566367974060e-02, func = 1.54662042340099e+04, norm = 1.07825752804971e+00, diff = 4.28590542396628e-03
iter = 92, step = 1.04088049575357e-02, func = 1.54662050811171e+04, norm = 1.25768291970929e+00, diff = 4.78825553016942e-03
iter = 93, step = 9.88836470965895e-03, func = 1.54662057825720e+04, norm = 8.97956470207368e-01, diff = 4.21153427009306e-03
iter = 94, step = 9.39394647417600e-03, func = 1.54662065250780e+04, norm = 1.03699515883056e+00, diff = 4.69801933734617e-03
iter = 95, step = 8.92424915046720e-03, func = 1.54662059499388e+04, norm = 1.06000931419958e+00, diff = 3.62669070443522e-03
iter = 96, step = 8.47803669294384e-03, func = 1.54662070739370e+04, norm = 9.08425405851288e-01, diff = 3.23965781378638e-03
iter = 97, step = 8.05413485829665e-03, func = 1.54662066350222e+04, norm = 1.12184919004136e+00, diff = 3.30113383622258e-03
iter = 98, step = 7.65142811538181e-03, func = 1.54662068098978e+04, norm = 1.03355342165323e+00, diff = 3.09699492488736e-03
iter = 99, step = 7.26885670961272e-03, func = 1.54662079199881e+04, norm = 1.16609548084414e+00, diff = 2.80847400267391e-03
iter = 100, step = 6.90541387413209e-03, func = 1.54662074303613e+04, norm = 1.40844915842431e+00, diff = 3.31302770481063e-03
iter = 101, step = 6.56014318042548e-03, func = 1.54662082443496e+04, norm = 9.32950637711404e-01, diff = 2.78912996083949e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.546623e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 6, while k = 6 and n = 64
  UB from restricted IP = 201447 using centers : 4 51 11 15 24 35 
  UB from restricted IP = 24896.6 using centers : 50 27 10 54 43 9 
  UB from restricted IP = 19695.8 using centers : 50 27 11 46 2 9 
  UB from restricted IP = 17630 using centers : 50 27 11 60 56 9 
  UB from restricted IP = 17556.8 using centers : 50 27 11 60 56 43 
In iteration 0 of HessHeuristic, objective value of incumbent is = 17556.8
  UB from restricted IP = 33094.1 using centers : 37 43 11 14 59 50 
  UB from restricted IP = 17239.2 using centers : 53 43 11 60 27 23 
In iteration 1 of HessHeuristic, objective value of incumbent is = 17239.2
  UB from restricted IP = 24006.8 using centers : 46 51 10 23 19 0 
  UB from restricted IP = 18478.8 using centers : 46 53 11 23 17 0 
  UB from restricted IP = 17239.2 using centers : 60 53 11 23 27 43 
In iteration 2 of HessHeuristic, objective value of incumbent is = 17239.2
  UB from restricted IP = 133541 using centers : 13 5 62 39 26 23 
  UB from restricted IP = 20568.2 using centers : 36 48 43 27 60 53 
  UB from restricted IP = 18382.9 using centers : 36 11 43 27 60 22 
In iteration 3 of HessHeuristic, objective value of incumbent is = 17239.2
  UB from restricted IP = 144484 using centers : 12 61 18 43 16 11 
  UB from restricted IP = 28357.2 using centers : 60 27 39 54 47 15 
  UB from restricted IP = 22630.1 using centers : 60 27 53 43 47 62 
  UB from restricted IP = 22243.9 using centers : 60 27 53 43 47 25 
In iteration 4 of HessHeuristic, objective value of incumbent is = 17239.2
  UB from restricted IP = 41022.1 using centers : 50 46 24 1 40 27 
  UB from restricted IP = 21737.7 using centers : 22 60 4 6 43 42 
  UB from restricted IP = 20685.2 using centers : 22 60 48 6 43 27 
In iteration 5 of HessHeuristic, objective value of incumbent is = 17239.2
  UB from restricted IP = 80106.1 using centers : 43 0 59 30 44 33 
  UB from restricted IP = 23898.7 using centers : 7 60 27 24 32 56 
  UB from restricted IP = 17552.7 using centers : 43 60 27 20 32 56 
In iteration 6 of HessHeuristic, objective value of incumbent is = 17239.2
  UB from restricted IP = 48453.7 using centers : 60 27 12 63 22 2 
  UB from restricted IP = 18667.2 using centers : 60 27 20 43 50 30 
  UB from restricted IP = 18459 using centers : 60 27 11 43 50 30 
In iteration 7 of HessHeuristic, objective value of incumbent is = 17239.2
  UB from restricted IP = 59130.1 using centers : 58 63 17 53 23 38 
  UB from restricted IP = 24511.4 using centers : 26 60 27 56 31 48 
  UB from restricted IP = 22315.6 using centers : 26 60 27 56 50 10 
  UB from restricted IP = 18438.5 using centers : 7 60 27 56 50 10 
  UB from restricted IP = 18276.3 using centers : 7 60 27 56 50 11 
In iteration 8 of HessHeuristic, objective value of incumbent is = 17239.2
  UB from restricted IP = 66014 using centers : 43 11 30 13 9 2 
  UB from restricted IP = 22456.7 using centers : 0 47 53 25 60 27 
  UB from restricted IP = 22243.9 using centers : 43 47 53 25 60 27 
In iteration 9 of HessHeuristic, objective value of incumbent is = 17239.2
UB at end of HessHeuristic = 17239.2
UB of heuristicSolution = 17239.2
Best solution after 10 of HessHeuristic is 17239.16

Beginning LOCAL SEARCH with UB = 17239.2

Academic license - for non-commercial use only
# centers = 6, while k = 6 and n = 64
  checking neighbors of node 11
  checking neighbors of node 23
  checking neighbors of node 27
  checking neighbors of node 43
  checking neighbors of node 53
  checking neighbors of node 60
UB at end of local search heuristic = 17239.2
UB of heuristicSolution = 17239.2
Best solution after local search is 17239.16
Academic license - for non-commercial use only
# centers = 6, while k = 6 and n = 64
Optimize a model with 832 rows, 2304 columns and 7572 nonzeros
Variable types: 1920 continuous, 384 integer (384 binary)
Coefficient statistics:
  Matrix range     [1e+00, 4e+05]
  Objective range  [1e+01, 9e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+05]

MIP start did not produce a new incumbent solution

Presolve removed 87 rows and 410 columns
Presolve time: 0.01s
Presolved: 745 rows, 1894 columns, 6335 nonzeros
Variable types: 1550 continuous, 344 integer (344 binary)

Root relaxation: objective 1.670397e+04, 131 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 16703.9727    0    8          - 16703.9727      -     -    0s
Another try with MIP start
H    0     0                    17409.913642 16703.9727  4.05%     -    0s
     0     0 16896.9826    0   20 17409.9136 16896.9826  2.95%     -    0s
     0     0 16896.9826    0    4 17409.9136 16896.9826  2.95%     -    0s
     0     0 16995.3784    0    7 17409.9136 16995.3784  2.38%     -    0s
H    0     0                    17272.646110 16995.3784  1.61%     -    0s
     0     0 16998.6950    0    7 17272.6461 16998.6950  1.59%     -    0s
     0     0 17038.5119    0    8 17272.6461 17038.5119  1.36%     -    0s
     0     0 17038.5119    0    2 17272.6461 17038.5119  1.36%     -    0s
     0     0 17162.9702    0    9 17272.6461 17162.9702  0.63%     -    0s
     0     0 17221.8842    0    8 17272.6461 17221.8842  0.29%     -    0s
     0     0     cutoff    0      17272.6461 17272.6461  0.00%     -    0s

Cutting planes:
  Cover: 8
  MIR: 4
  Flow cover: 3

Explored 1 nodes (326 simplex iterations) in 0.07 seconds
Thread count was 8 (of 8 available processors)

Solution count 2: 17272.6 17409.9 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.727264611000e+04, best bound 1.727264611000e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 17272.6 using centers : 11 23 27 43 53 60 
UB at end of ContiguityHeuristic = 17272.6
UB of (contiguous) heuristicSolution = 17272.6

Number of variables fixed to zero = 2494
Number of variables fixed to one  = 0
Number of variables not fixed     = 1602
Number of centers left            = 48
Percentage of vars fixed = 0.61
Academic license - for non-commercial use only
Build hess : created 1602 variables
Optimize a model with 1811 rows, 1666 columns and 6648 nonzeros
Variable types: 64 continuous, 1602 integer (1602 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+05]
  Objective range  [9e+00, 5e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+00]

Loaded MIP start with objective 17272.6

Presolve removed 87 rows and 48 columns
Presolve time: 0.02s
Presolved: 1724 rows, 1618 columns, 6476 nonzeros
Variable types: 0 continuous, 1618 integer (1571 binary)

Concurrent LP optimizer: dual simplex and barrier
Showing barrier log only...

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 3.670e+04
 Factor NZ  : 9.331e+04 (roughly 2 MBytes of memory)
 Factor Ops : 5.449e+06 (less than 1 second per iteration)
 Threads    : 3

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   5.18745513e+06 -1.14986070e+05  7.34e+04 0.00e+00  2.69e+03     0s
   1   9.74850738e+05 -1.41229237e+05  1.49e+04 1.29e-14  5.65e+02     0s
   2   1.78571728e+05 -8.44870046e+04  2.35e+03 2.44e-14  1.00e+02     0s
   3   5.53252358e+04 -3.76274160e+04  4.43e+02 1.27e-14  2.49e+01     0s
   4   3.20716568e+04 -4.53770524e+03  1.30e+02 7.61e-15  8.19e+00     0s
   5   2.36378294e+04  2.21519084e+03  4.58e+01 5.73e-15  4.53e+00     0s
   6   1.94992227e+04  1.16939727e+04  1.35e+01 6.41e-15  1.59e+00     0s
   7   1.71367963e+04  1.41656886e+04  3.78e+00 4.41e-15  6.03e-01     0s
   8   1.63715584e+04  1.47960087e+04  1.74e+00 6.30e-15  3.20e-01     0s
   9   1.60452815e+04  1.52232252e+04  9.94e-01 4.96e-15  1.67e-01     0s
  10   1.57013487e+04  1.53043293e+04  3.46e-01 4.88e-15  8.09e-02     0s
  11   1.55697607e+04  1.54021679e+04  1.35e-01 2.37e-15  3.42e-02     0s
  12   1.54922891e+04  1.54429136e+04  2.45e-02 5.37e-15  1.01e-02     0s
  13   1.54784841e+04  1.54585378e+04  9.04e-03 7.33e-15  4.09e-03     0s
  14   1.54728780e+04  1.54659573e+04  3.00e-03 3.86e-15  1.42e-03     0s
  15   1.54698820e+04  1.54686694e+04  5.20e-05 4.30e-15  2.50e-04     0s
  16   1.54698064e+04  1.54696156e+04  2.17e-09 3.34e-15  3.94e-05     0s
  17   1.54697724e+04  1.54697575e+04  6.85e-10 2.06e-15  3.07e-06     0s
  18   1.54697689e+04  1.54697688e+04  2.73e-09 7.77e-15  1.59e-08     0s
  19   1.54697688e+04  1.54697688e+04  1.14e-09 3.51e-15  5.58e-12     0s

Barrier solved model in 19 iterations and 0.05 seconds
Optimal objective 1.54697688e+04


Solved with barrier

Root relaxation: objective 1.546977e+04, 519 iterations, 0.03 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 15469.7688    0  208 17272.6461 15469.7688  10.4%     -    0s
     0     0 15637.8363    0  254 17272.6461 15637.8363  9.46%     -    0s
     0     0 15724.8319    0  214 17272.6461 15724.8319  8.96%     -    0s
     0     0 15786.8132    0  234 17272.6461 15786.8132  8.60%     -    0s
     0     0 15804.3701    0  283 17272.6461 15804.3701  8.50%     -    0s
     0     0 15816.5504    0  272 17272.6461 15816.5504  8.43%     -    0s
     0     0 15818.3757    0  261 17272.6461 15818.3757  8.42%     -    0s
     0     0 15821.0377    0  273 17272.6461 15821.0377  8.40%     -    0s
     0     0 15842.9077    0  246 17272.6461 15842.9077  8.28%     -    0s
     0     0 15845.6970    0  241 17272.6461 15845.6970  8.26%     -    0s
     0     0 15845.7521    0  242 17272.6461 15845.7521  8.26%     -    0s
     0     0 15849.8463    0  255 17272.6461 15849.8463  8.24%     -    0s
     0     0 15849.9179    0  247 17272.6461 15849.9179  8.24%     -    0s
     0     0 15851.5581    0  250 17272.6461 15851.5581  8.23%     -    0s
     0     0 15851.6033    0  250 17272.6461 15851.6033  8.23%     -    0s
     0     0 15852.7313    0  255 17272.6461 15852.7313  8.22%     -    0s
     0     0 15853.3049    0  256 17272.6461 15853.3049  8.22%     -    0s
     0     0 15853.3049    0  256 17272.6461 15853.3049  8.22%     -    0s
     0     2 15853.3049    0  256 17272.6461 15853.3049  8.22%     -    0s

Cutting planes:
  Gomory: 2
  Cover: 54
  MIR: 7
  StrongCG: 2
  Flow cover: 2
  GUB cover: 5
  Zero half: 1
  Lazy constraints: 6

Explored 582 nodes (24743 simplex iterations) in 1.07 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 17272.6 

Optimal solution found (tolerance 0.00e+00)
Best objective 1.727264611000e+04, best bound 1.727264611000e+04, gap 0.0000%
IP duration time: 1.071420 seconds
Total time elapsed: 2.218449 seconds
Number of callbacks: 2
Time in callbacks: 0.000180 seconds
Number of lazy constraints generated: 6
+ for state in $states
+ echo 'Running MA'
Running MA
+ /home/lykhovyd/progs/districting/districting myconfig.txt MA /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MA.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/MA/counties/graph/MA.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/MA/counties/graph/MA_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/MA/counties/graph/MA.population
state[2]        = MA
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MA.ralg_hot
nr_comp = 1
graph: 14 nodes, 24 edges (read)
Model input: L = 723877, U = 731151, k = 9.
Graph is connected.
Model input: total population = 6547629
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.95754990420794e+04, norm = 8.46268085593237e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 2.95754925896868e+04, norm = 6.83898144791043e+00, diff = 8.59104956248026e-01
iter = 3, step = 8.57375000000000e-01, func = 2.95758893574736e+04, norm = 4.85583644713372e+00, diff = 6.41440089795227e-01
iter = 4, step = 8.14506250000000e-01, func = 2.95753447739423e+04, norm = 4.89279359855986e+00, diff = 7.32958559208319e-01
iter = 5, step = 7.73780937500000e-01, func = 2.95757541704799e+04, norm = 5.57786189142407e+00, diff = 6.38511134386407e-01
iter = 6, step = 7.35091890625000e-01, func = 2.95759690719351e+04, norm = 3.84735406460626e+00, diff = 5.30626412657859e-01
iter = 7, step = 6.98337296093750e-01, func = 2.95760271343498e+04, norm = 3.32536269274657e+00, diff = 6.24378362257934e-01
iter = 8, step = 6.63420431289062e-01, func = 2.95757610891289e+04, norm = 4.12180196301733e+00, diff = 5.40976356236479e-01
iter = 9, step = 6.30249409724609e-01, func = 2.95763639360202e+04, norm = 3.45806636966509e+00, diff = 4.26618036256482e-01
iter = 10, step = 5.98736939238379e-01, func = 2.95762414605808e+04, norm = 4.32386435660444e+00, diff = 4.50957506546711e-01
iter = 11, step = 5.68800092276460e-01, func = 2.95764931322833e+04, norm = 5.38938444557091e+00, diff = 4.19691522776094e-01
iter = 12, step = 5.40360087662637e-01, func = 2.95764779175232e+04, norm = 3.40698016564362e+00, diff = 3.68603931451771e-01
iter = 13, step = 5.13342083279505e-01, func = 2.95763276933654e+04, norm = 3.19571735856503e+00, diff = 4.19438665824971e-01
iter = 14, step = 4.87674979115529e-01, func = 2.95763055447228e+04, norm = 2.35228157359049e+00, diff = 3.64736342229850e-01
iter = 15, step = 4.63291230159753e-01, func = 2.95765091068949e+04, norm = 2.13743492908090e+00, diff = 3.21829637648784e-01
iter = 16, step = 4.40126668651765e-01, func = 2.95766122787280e+04, norm = 1.87509148357548e+00, diff = 2.76149540708648e-01
iter = 17, step = 4.40126668651765e-01, func = 2.95766058724399e+04, norm = 2.84488965077773e+00, diff = 6.13187593030270e-01
iter = 18, step = 4.18120335219177e-01, func = 2.95766701441411e+04, norm = 2.05741907712602e+00, diff = 2.49221606947795e-01
iter = 19, step = 3.97214318458218e-01, func = 2.95765947585613e+04, norm = 2.32512084438562e+00, diff = 2.83284145803089e-01
iter = 20, step = 3.97214318458218e-01, func = 2.95767111340223e+04, norm = 1.67499158069944e+00, diff = 4.31707776622865e-01
iter = 21, step = 3.77353602535307e-01, func = 2.95768342263933e+04, norm = 1.39343730887399e+00, diff = 2.40157310466878e-01
iter = 22, step = 3.58485922408542e-01, func = 2.95768635477296e+04, norm = 1.71407809677858e+00, diff = 2.01742335461577e-01
iter = 23, step = 3.40561626288115e-01, func = 2.95768400736948e+04, norm = 2.90177152015864e+00, diff = 1.84071629188674e-01
iter = 24, step = 3.23533544973709e-01, func = 2.95768754465314e+04, norm = 1.87674670599960e+00, diff = 1.77707979155002e-01
iter = 25, step = 3.07356867725023e-01, func = 2.95768145718567e+04, norm = 1.53264136526784e+00, diff = 1.76934066650041e-01
iter = 26, step = 2.91989024338772e-01, func = 2.95767884512129e+04, norm = 1.28234088848742e+00, diff = 1.40428315392281e-01
iter = 27, step = 2.91989024338772e-01, func = 2.95769028038668e+04, norm = 1.04516094776165e+00, diff = 2.28719828574130e-01
iter = 28, step = 2.77389573121834e-01, func = 2.95768386566662e+04, norm = 2.28974113341366e+00, diff = 8.91895930694982e-02
iter = 29, step = 2.77389573121834e-01, func = 2.95769101440098e+04, norm = 1.35975797291646e+00, diff = 1.46014750093276e-01
iter = 30, step = 2.63520094465742e-01, func = 2.95769327373564e+04, norm = 8.20203958321201e-01, diff = 1.46710447242343e-01
iter = 31, step = 2.50344089742455e-01, func = 2.95769299393095e+04, norm = 7.93240197100092e-01, diff = 1.19887868044356e-01
iter = 32, step = 2.50344089742455e-01, func = 2.95768971516963e+04, norm = 9.63302492057918e-01, diff = 1.60640121909247e-01
iter = 33, step = 2.37826885255332e-01, func = 2.95769594555338e+04, norm = 1.79773792953415e+00, diff = 1.05710433602480e-01
iter = 34, step = 2.25935540992565e-01, func = 2.95769564177135e+04, norm = 9.85490357609743e-01, diff = 8.78840881082571e-02
iter = 35, step = 2.25935540992565e-01, func = 2.95769708962704e+04, norm = 7.38748831020176e-01, diff = 1.84282969231748e-01
iter = 36, step = 2.14638763942937e-01, func = 2.95769833950103e+04, norm = 8.57023759691547e-01, diff = 5.77039143979310e-02
iter = 37, step = 2.03906825745790e-01, func = 2.95769917137469e+04, norm = 6.27170343248666e-01, diff = 5.68946304075822e-02
iter = 38, step = 1.93711484458501e-01, func = 2.95770050901770e+04, norm = 4.94965415634531e-01, diff = 7.97815934041145e-02
iter = 39, step = 1.84025910235576e-01, func = 2.95770124223594e+04, norm = 3.97507496236185e-01, diff = 4.89330772397364e-02
iter = 40, step = 1.74824614723797e-01, func = 2.95770150010073e+04, norm = 4.12327755480807e-01, diff = 4.67610090510427e-02
iter = 41, step = 1.66083383987607e-01, func = 2.95770163470050e+04, norm = 5.42233137645421e-01, diff = 3.72359937559381e-02
iter = 42, step = 1.57779214788227e-01, func = 2.95770105941692e+04, norm = 5.01481773863317e-01, diff = 8.83596493540693e-02
iter = 43, step = 1.49890254048815e-01, func = 2.95770239404521e+04, norm = 2.84486822397028e-01, diff = 3.94133323878299e-02
iter = 44, step = 1.42395741346375e-01, func = 2.95770182657483e+04, norm = 1.54986549823491e+00, diff = 4.75217400185113e-02
iter = 45, step = 1.35275954279056e-01, func = 2.95770254190594e+04, norm = 8.16514346175706e-01, diff = 7.11850729329429e-02
iter = 46, step = 1.28512156565103e-01, func = 2.95770328968768e+04, norm = 4.67693240196921e-01, diff = 4.00937327353848e-02
iter = 47, step = 1.22086548736848e-01, func = 2.95770211490355e+04, norm = 5.76983193488134e-01, diff = 3.53158137761395e-02
iter = 48, step = 1.15982221300006e-01, func = 2.95770328879734e+04, norm = 2.99763592208822e-01, diff = 2.30243934995981e-02
iter = 49, step = 1.10183110235005e-01, func = 2.95770358002393e+04, norm = 2.28910475429443e-01, diff = 3.49635730225272e-02
iter = 50, step = 1.10183110235005e-01, func = 2.95770391675412e+04, norm = 2.27083413383967e-01, diff = 5.29711658238568e-02
iter = 51, step = 1.10183110235005e-01, func = 2.95770308026885e+04, norm = 1.35230609041497e+00, diff = 5.48832546911855e-02
iter = 52, step = 1.04673954723255e-01, func = 2.95770416432857e+04, norm = 1.03606914758986e+00, diff = 5.04057381619386e-02
iter = 53, step = 9.94402569870922e-02, func = 2.95769996521769e+04, norm = 1.14106117888172e+00, diff = 8.00289264186479e-02
iter = 54, step = 9.94402569870922e-02, func = 2.95770451567943e+04, norm = 4.33139192092076e-01, diff = 8.88836088149030e-02
iter = 55, step = 9.44682441377376e-02, func = 2.95770431865304e+04, norm = 2.11073868740060e-01, diff = 2.86141026732542e-02
iter = 56, step = 9.44682441377376e-02, func = 2.95770463193367e+04, norm = 1.87996746183271e-01, diff = 4.62640037677551e-02
iter = 57, step = 9.44682441377376e-02, func = 2.95770473743471e+04, norm = 1.61174436531492e-01, diff = 5.00653811758509e-02
iter = 58, step = 8.97448319308507e-02, func = 2.95770455203732e+04, norm = 7.65970381883373e-01, diff = 2.51054360011112e-02
iter = 59, step = 8.52575903343082e-02, func = 2.95770507439518e+04, norm = 3.89141913847770e-01, diff = 1.71490677111676e-02
iter = 60, step = 8.09947108175928e-02, func = 2.95770545072760e+04, norm = 2.20941802857370e-01, diff = 2.27782068492987e-02
iter = 61, step = 7.69449752767131e-02, func = 2.95770570576850e+04, norm = 1.39523177551447e-01, diff = 1.48282912940382e-02
iter = 62, step = 7.30977265128775e-02, func = 2.95770563272865e+04, norm = 1.37969890703722e-01, diff = 3.21102717415374e-02
iter = 63, step = 6.94428401872336e-02, func = 2.95770571527583e+04, norm = 1.44540815390557e-01, diff = 2.47230409907378e-02
iter = 64, step = 6.59706981778719e-02, func = 2.95770594618244e+04, norm = 3.88612469516108e-01, diff = 1.80958640868457e-02
iter = 65, step = 6.26721632689783e-02, func = 2.95770603097481e+04, norm = 2.16143809070609e-01, diff = 1.16658902089087e-02
iter = 66, step = 5.95385551055294e-02, func = 2.95770597582108e+04, norm = 9.81895380679944e-02, diff = 2.36282751053859e-02
iter = 67, step = 7.14462661266353e-02, func = 2.95770549312578e+04, norm = 1.24020098773582e+00, diff = 8.79430702698793e-02
iter = 68, step = 6.78739528203035e-02, func = 2.95770626279065e+04, norm = 6.21336386031454e-01, diff = 3.43714531143494e-02
iter = 69, step = 6.78739528203035e-02, func = 2.95770630399821e+04, norm = 7.49574540814904e-02, diff = 5.08451802891719e-02
iter = 70, step = 6.44802551792883e-02, func = 2.95770499129337e+04, norm = 9.68319074812585e-01, diff = 3.07254962102063e-02
iter = 71, step = 6.44802551792883e-02, func = 2.95770625552015e+04, norm = 1.14929601103804e+00, diff = 5.64650233856025e-02
iter = 72, step = 6.12562424203239e-02, func = 2.95770638501641e+04, norm = 6.33101718325408e-01, diff = 3.77620475844902e-02
iter = 73, step = 5.81934302993077e-02, func = 2.95770644290836e+04, norm = 9.96152365255231e-02, diff = 1.32773519099791e-02
iter = 74, step = 5.52837587843423e-02, func = 2.95770570394059e+04, norm = 1.08635147460967e+00, diff = 2.01364293057005e-02
iter = 75, step = 5.25195708451252e-02, func = 2.95770642580191e+04, norm = 5.46625686201406e-01, diff = 2.61241444527043e-02
iter = 76, step = 4.98935923028689e-02, func = 2.95770639523454e+04, norm = 1.00682117212003e-01, diff = 1.11551885932880e-02
iter = 77, step = 4.98935923028689e-02, func = 2.95770651703393e+04, norm = 1.98840344581476e-01, diff = 3.23214612742487e-02
iter = 78, step = 4.73989126877255e-02, func = 2.95770644939242e+04, norm = 2.35521774038474e-01, diff = 1.06866479487344e-02
iter = 79, step = 5.68786952252706e-02, func = 2.95770653179888e+04, norm = 3.51336596984532e-01, diff = 3.06586690424013e-02
iter = 80, step = 5.40347604640071e-02, func = 2.95770657382548e+04, norm = 3.81102588974283e-01, diff = 2.01042229187873e-02
iter = 81, step = 6.48417125568085e-02, func = 2.95770664757014e+04, norm = 2.05904990891706e-01, diff = 3.35315776577941e-02
iter = 82, step = 6.15996269289680e-02, func = 2.95770655848932e+04, norm = 7.62660943458610e-02, diff = 1.83131945734020e-02
iter = 83, step = 7.39195523147616e-02, func = 2.95770614696363e+04, norm = 1.30842219384589e+00, diff = 5.64622825394264e-02
iter = 84, step = 7.02235746990236e-02, func = 2.95770667517743e+04, norm = 6.56888391674814e-01, diff = 3.41351937679655e-02
iter = 85, step = 6.67123959640724e-02, func = 2.95770673957093e+04, norm = 7.72153847589841e-02, diff = 1.57309682959528e-02
iter = 86, step = 6.33767761658687e-02, func = 2.95770686685972e+04, norm = 4.76536989848670e-02, diff = 1.75742521446157e-02
iter = 87, step = 6.02079373575753e-02, func = 2.95770664660996e+04, norm = 4.43244957645459e-01, diff = 2.99488647480303e-02
iter = 88, step = 5.71975404896965e-02, func = 2.95770692326356e+04, norm = 2.24148323172380e-01, diff = 1.32448825241060e-02
iter = 89, step = 5.43376634652117e-02, func = 2.95770696790255e+04, norm = 1.10884727475226e-01, diff = 1.54969276096234e-02
iter = 90, step = 5.43376634652117e-02, func = 2.95770697630217e+04, norm = 7.32195057502384e-02, diff = 1.98560567051847e-02
iter = 91, step = 5.16207802919511e-02, func = 2.95770700838859e+04, norm = 4.54349238327266e-02, diff = 1.72158936505254e-02
iter = 92, step = 6.19449363503413e-02, func = 2.95770708663194e+04, norm = 4.99356747268752e-02, diff = 6.45876498929032e-02
iter = 93, step = 5.88476895328243e-02, func = 2.95770657825068e+04, norm = 6.14021206840930e-01, diff = 2.37042026424694e-02
iter = 94, step = 5.59053050561831e-02, func = 2.95770717699124e+04, norm = 3.07399322223952e-01, diff = 1.46763197029515e-02
iter = 95, step = 5.59053050561831e-02, func = 2.95770719487621e+04, norm = 3.42102232606283e-01, diff = 4.19325732886124e-02
iter = 96, step = 5.31100398033739e-02, func = 2.95770725066855e+04, norm = 1.73884196526034e-01, diff = 8.12203601690230e-03
iter = 97, step = 5.04545378132052e-02, func = 2.95770733345215e+04, norm = 3.76965906694484e-01, diff = 1.51500495216707e-02
iter = 98, step = 4.79318109225449e-02, func = 2.95770701845079e+04, norm = 3.15937910963613e-01, diff = 1.10217221257682e-02
iter = 99, step = 4.55352203764177e-02, func = 2.95770699607437e+04, norm = 3.47379327425414e-01, diff = 1.72579611293276e-02
iter = 100, step = 5.46422644517012e-02, func = 2.95770731582096e+04, norm = 1.50028662574807e-01, diff = 3.06375199613830e-02
iter = 101, step = 5.19101512291162e-02, func = 2.95770734204755e+04, norm = 2.73006415408352e-01, diff = 1.06308594199386e-02
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.957708e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 9, while k = 9 and n = 14
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 8.92283e-321
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 196
Number of centers left            = 14
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 196 variables
Optimize a model with 239 rows, 210 columns and 840 nonzeros
Variable types: 14 continuous, 196 integer (196 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+06]
  Objective range  [2e+01, 4e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 9e+00]
Presolve removed 0 rows and 45 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.000258 seconds
Total time elapsed: 0.026842 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running MD'
Running MD
+ /home/lykhovyd/progs/districting/districting myconfig.txt MD /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MD.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/MD/counties/graph/MD.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/MD/counties/graph/MD_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/MD/counties/graph/MD.population
state[2]        = MD
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MD.ralg_hot
nr_comp = 1
graph: 24 nodes, 46 edges (read)
Model input: L = 718086, U = 725302, k = 8.
Graph is connected.
Model input: total population = 5773552
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 7.76817885870599e+03, norm = 8.24853511659924e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 7.76832030347633e+03, norm = 5.31907771828996e+00, diff = 8.36913666912454e-01
iter = 3, step = 8.57375000000000e-01, func = 7.76797176039919e+03, norm = 6.33705565532970e+00, diff = 7.79830696590052e-01
iter = 4, step = 8.14506250000000e-01, func = 7.76878775838987e+03, norm = 4.77669216249846e+00, diff = 5.82464569720748e-01
iter = 5, step = 7.73780937500000e-01, func = 7.76851429830603e+03, norm = 4.47199479723213e+00, diff = 6.45847960070703e-01
iter = 6, step = 7.35091890625000e-01, func = 7.76838411903662e+03, norm = 4.49204670341649e+00, diff = 5.55279284227936e-01
iter = 7, step = 6.98337296093750e-01, func = 7.76900744436931e+03, norm = 3.64852125517591e+00, diff = 4.96285852462487e-01
iter = 8, step = 6.63420431289062e-01, func = 7.76857458105104e+03, norm = 5.08189885093312e+00, diff = 5.32379687352425e-01
iter = 9, step = 6.30249409724609e-01, func = 7.76885326994422e+03, norm = 3.08009605125807e+00, diff = 4.44507956762321e-01
iter = 10, step = 5.98736939238379e-01, func = 7.76906522208636e+03, norm = 2.48925377275440e+00, diff = 4.49378399959560e-01
iter = 11, step = 5.68800092276460e-01, func = 7.76901576209314e+03, norm = 2.91226347788021e+00, diff = 3.91303260792215e-01
iter = 12, step = 5.40360087662637e-01, func = 7.76915193659561e+03, norm = 2.62202449176928e+00, diff = 3.64863929006920e-01
iter = 13, step = 5.13342083279505e-01, func = 7.76917118340276e+03, norm = 3.03064616558429e+00, diff = 3.06643565159090e-01
iter = 14, step = 4.87674979115529e-01, func = 7.76931123804783e+03, norm = 3.41778258058226e+00, diff = 3.41395585860899e-01
iter = 15, step = 4.63291230159753e-01, func = 7.76933390449440e+03, norm = 2.59529867168951e+00, diff = 2.89059818098378e-01
iter = 16, step = 4.40126668651765e-01, func = 7.76915298320702e+03, norm = 2.88820431703392e+00, diff = 3.63525655834979e-01
iter = 17, step = 4.40126668651765e-01, func = 7.76919639757054e+03, norm = 1.97919029006654e+00, diff = 4.35231341372363e-01
iter = 18, step = 4.18120335219177e-01, func = 7.76917151612123e+03, norm = 2.57088650349598e+00, diff = 3.09212752042326e-01
iter = 19, step = 3.97214318458218e-01, func = 7.76936258017691e+03, norm = 2.02435438203869e+00, diff = 2.43132328386901e-01
iter = 20, step = 3.77353602535307e-01, func = 7.76924839867445e+03, norm = 2.42919691802814e+00, diff = 2.44090965589578e-01
iter = 21, step = 3.58485922408542e-01, func = 7.76930116761015e+03, norm = 2.00796284100907e+00, diff = 2.20328516866627e-01
iter = 22, step = 3.40561626288115e-01, func = 7.76936261263993e+03, norm = 1.74186937113229e+00, diff = 2.27421795232536e-01
iter = 23, step = 3.23533544973709e-01, func = 7.76940781776724e+03, norm = 1.40298641727230e+00, diff = 1.91016491182868e-01
iter = 24, step = 3.07356867725023e-01, func = 7.76942270903598e+03, norm = 2.07397748815622e+00, diff = 1.94726885539687e-01
iter = 25, step = 2.91989024338772e-01, func = 7.76941848556430e+03, norm = 1.76975080717161e+00, diff = 1.53489005660173e-01
iter = 26, step = 2.77389573121834e-01, func = 7.76949018283344e+03, norm = 1.80119693373266e+00, diff = 1.58305880899975e-01
iter = 27, step = 2.63520094465742e-01, func = 7.76951768302469e+03, norm = 1.22637962162542e+00, diff = 1.45060299409508e-01
iter = 28, step = 2.50344089742455e-01, func = 7.76955367499157e+03, norm = 9.50385068112817e-01, diff = 1.29072838701001e-01
iter = 29, step = 2.37826885255332e-01, func = 7.76951522165320e+03, norm = 1.31419847117762e+00, diff = 9.66299661979202e-02
iter = 30, step = 2.37826885255332e-01, func = 7.76952130761891e+03, norm = 1.45261401275773e+00, diff = 2.09484183392362e-01
iter = 31, step = 2.25935540992565e-01, func = 7.76953808799552e+03, norm = 9.88883848449688e-01, diff = 1.01981037000457e-01
iter = 32, step = 2.14638763942937e-01, func = 7.76953781674451e+03, norm = 1.60852804503323e+00, diff = 9.20925847379776e-02
iter = 33, step = 2.03906825745790e-01, func = 7.76956800387621e+03, norm = 1.03875422386157e+00, diff = 1.01703265817376e-01
iter = 34, step = 1.93711484458501e-01, func = 7.76955835977953e+03, norm = 9.56651134955398e-01, diff = 9.05350910800207e-02
iter = 35, step = 1.84025910235576e-01, func = 7.76955630816396e+03, norm = 8.78458811647969e-01, diff = 6.76489566339174e-02
iter = 36, step = 1.74824614723797e-01, func = 7.76960564826547e+03, norm = 5.05147965627458e-01, diff = 5.99000108794576e-02
iter = 37, step = 1.66083383987607e-01, func = 7.76958593368812e+03, norm = 6.98341335175862e-01, diff = 5.32937388929228e-02
iter = 38, step = 1.57779214788227e-01, func = 7.76960988277042e+03, norm = 5.41352906734404e-01, diff = 5.07250471024663e-02
iter = 39, step = 1.49890254048815e-01, func = 7.76960514609045e+03, norm = 6.37084714589098e-01, diff = 4.29143938659744e-02
iter = 40, step = 1.49890254048815e-01, func = 7.76962534413270e+03, norm = 6.09886144306676e-01, diff = 8.11433291201354e-02
iter = 41, step = 1.42395741346375e-01, func = 7.76962667361132e+03, norm = 7.55608779267318e-01, diff = 4.50464531003656e-02
iter = 42, step = 1.35275954279056e-01, func = 7.76963778045482e+03, norm = 5.42862461259961e-01, diff = 3.94737324795449e-02
iter = 43, step = 1.28512156565103e-01, func = 7.76963348270963e+03, norm = 4.09392789485375e-01, diff = 5.02973828651871e-02
iter = 44, step = 1.22086548736848e-01, func = 7.76964021269567e+03, norm = 3.90683019740263e-01, diff = 3.75505934781404e-02
iter = 45, step = 1.15982221300006e-01, func = 7.76965091957065e+03, norm = 6.86798983122154e-01, diff = 3.30698673714341e-02
iter = 46, step = 1.10183110235005e-01, func = 7.76965847325829e+03, norm = 4.47763125508556e-01, diff = 2.98403728726921e-02
iter = 47, step = 1.04673954723255e-01, func = 7.76965581197606e+03, norm = 5.54603540067860e-01, diff = 3.53786743938782e-02
iter = 48, step = 9.94402569870922e-02, func = 7.76965081695696e+03, norm = 7.17940583564520e-01, diff = 2.66288688585314e-02
iter = 49, step = 9.44682441377376e-02, func = 7.76966279127391e+03, norm = 4.12564706970976e-01, diff = 2.64134056114613e-02
iter = 50, step = 8.97448319308507e-02, func = 7.76965796586806e+03, norm = 6.60507510234173e-01, diff = 2.99107572251570e-02
iter = 51, step = 8.97448319308507e-02, func = 7.76966349361509e+03, norm = 5.16397106718337e-01, diff = 9.59161049467254e-02
iter = 52, step = 8.52575903343082e-02, func = 7.76966434104030e+03, norm = 3.54639619892068e-01, diff = 3.46593971071101e-02
iter = 53, step = 8.09947108175928e-02, func = 7.76966495714647e+03, norm = 3.21431632470928e-01, diff = 2.51932316645760e-02
iter = 54, step = 7.69449752767131e-02, func = 7.76966409559951e+03, norm = 3.61362284210584e-01, diff = 3.08438926844538e-02
iter = 55, step = 7.30977265128775e-02, func = 7.76966747537063e+03, norm = 5.20067712594254e-01, diff = 2.20986315199035e-02
iter = 56, step = 7.30977265128775e-02, func = 7.76966878091087e+03, norm = 3.17748929666198e-01, diff = 3.80657803520826e-02
iter = 57, step = 6.94428401872336e-02, func = 7.76967024548838e+03, norm = 2.08602517292949e-01, diff = 1.72196495520707e-02
iter = 58, step = 6.94428401872336e-02, func = 7.76967291085315e+03, norm = 2.61266905028550e-01, diff = 4.64499243673334e-02
iter = 59, step = 6.59706981778719e-02, func = 7.76967476600466e+03, norm = 4.04033844270921e-01, diff = 1.46221620494177e-02
iter = 60, step = 6.26721632689783e-02, func = 7.76967696486511e+03, norm = 3.67871424588671e-01, diff = 1.40556433985078e-02
iter = 61, step = 5.95385551055294e-02, func = 7.76967458215447e+03, norm = 5.70600282759448e-01, diff = 1.33713586669162e-02
iter = 62, step = 5.65616273502529e-02, func = 7.76967716840574e+03, norm = 3.15086335068647e-01, diff = 1.28532674415830e-02
iter = 63, step = 5.37335459827403e-02, func = 7.76967773311483e+03, norm = 2.59434282843791e-01, diff = 1.44753084653438e-02
iter = 64, step = 5.10468686836033e-02, func = 7.76967774145149e+03, norm = 2.35340152327768e-01, diff = 1.12455734958787e-02
iter = 65, step = 5.10468686836033e-02, func = 7.76967943229954e+03, norm = 1.63624494173153e-01, diff = 2.11292274187602e-02
iter = 66, step = 4.84945252494231e-02, func = 7.76968055495386e+03, norm = 1.27537674609672e-01, diff = 1.36598217659169e-02
iter = 67, step = 4.60697989869519e-02, func = 7.76968083310757e+03, norm = 1.44100136797553e-01, diff = 1.55608452090354e-02
iter = 68, step = 4.60697989869519e-02, func = 7.76968012957409e+03, norm = 1.96327041506999e-01, diff = 2.30629888856480e-02
iter = 69, step = 4.37663090376043e-02, func = 7.76967929313547e+03, norm = 4.22394924927133e-01, diff = 8.86717715052218e-03
iter = 70, step = 4.15779935857241e-02, func = 7.76968154152073e+03, norm = 2.68881396945067e-01, diff = 7.41267448561663e-03
iter = 71, step = 4.15779935857241e-02, func = 7.76968212354518e+03, norm = 1.64184555354490e-01, diff = 1.87931904833875e-02
iter = 72, step = 4.15779935857241e-02, func = 7.76968136997956e+03, norm = 2.73730299975512e-01, diff = 2.86561533984171e-02
iter = 73, step = 4.15779935857241e-02, func = 7.76968445176701e+03, norm = 2.54578921375151e-01, diff = 1.38161664382462e-02
iter = 74, step = 3.94990939064379e-02, func = 7.76968467660311e+03, norm = 1.94958348329784e-01, diff = 6.49725942767166e-03
iter = 75, step = 3.75241392111160e-02, func = 7.76968310701851e+03, norm = 2.80191053457756e-01, diff = 1.16526256582960e-02
iter = 76, step = 4.50289670533392e-02, func = 7.76968517076597e+03, norm = 1.69690008468281e-01, diff = 2.78166508117241e-02
iter = 77, step = 4.27775187006722e-02, func = 7.76968417020823e+03, norm = 2.33725515557050e-01, diff = 9.61249733296263e-03
iter = 78, step = 4.06386427656386e-02, func = 7.76968565672102e+03, norm = 1.17757460424621e-01, diff = 8.12124943602033e-03
iter = 79, step = 4.06386427656386e-02, func = 7.76968665053191e+03, norm = 1.39395795160262e-01, diff = 2.47405229444090e-02
iter = 80, step = 3.86067106273567e-02, func = 7.76968589131710e+03, norm = 1.70237857236393e-01, diff = 1.06340150553421e-02
iter = 81, step = 3.86067106273567e-02, func = 7.76968627138998e+03, norm = 1.70324912025365e-01, diff = 1.66196763002004e-02
iter = 82, step = 3.66763750959889e-02, func = 7.76968611373205e+03, norm = 1.70929757339485e-01, diff = 8.90056305885638e-03
iter = 83, step = 3.48425563411894e-02, func = 7.76968740766698e+03, norm = 9.51574782568558e-02, diff = 7.91078396082252e-03
iter = 84, step = 3.48425563411894e-02, func = 7.76968810028616e+03, norm = 9.69647686102074e-02, diff = 2.50098679976390e-02
iter = 85, step = 3.31004285241299e-02, func = 7.76968910492039e+03, norm = 8.06078530764266e-02, diff = 1.33901142880683e-02
iter = 86, step = 3.31004285241299e-02, func = 7.76968948299747e+03, norm = 1.36607113278616e-01, diff = 2.29716142607887e-02
iter = 87, step = 3.31004285241299e-02, func = 7.76968920101160e+03, norm = 1.59290784314934e-01, diff = 1.58948834771160e-02
iter = 88, step = 3.14454070979234e-02, func = 7.76969041209323e+03, norm = 8.61188960737306e-02, diff = 7.32924483464391e-03
iter = 89, step = 2.98731367430273e-02, func = 7.76969066601817e+03, norm = 8.50147343126080e-02, diff = 1.32873622248736e-02
iter = 90, step = 2.98731367430273e-02, func = 7.76969099704389e+03, norm = 1.04085896950969e-01, diff = 2.54298771629400e-02
iter = 91, step = 2.83794799058759e-02, func = 7.76969122686136e+03, norm = 8.99399950157466e-02, diff = 9.35895365040014e-03
iter = 92, step = 2.83794799058759e-02, func = 7.76969134275318e+03, norm = 7.90165648865417e-02, diff = 1.92296730475444e-02
iter = 93, step = 2.69605059105821e-02, func = 7.76969136945844e+03, norm = 9.73244719719505e-02, diff = 1.22988710967130e-02
iter = 94, step = 2.56124806150530e-02, func = 7.76968963677218e+03, norm = 1.15165131153116e+00, diff = 8.47569437138182e-03
iter = 95, step = 2.43318565843004e-02, func = 7.76969169145147e+03, norm = 5.78616395405307e-01, diff = 1.28142777432152e-02
iter = 96, step = 2.43318565843004e-02, func = 7.76969202356577e+03, norm = 8.30692112184970e-02, diff = 1.58636332773450e-02
iter = 97, step = 2.43318565843004e-02, func = 7.76969261359895e+03, norm = 7.95700610864934e-02, diff = 1.92522685623084e-02
iter = 98, step = 2.31152637550853e-02, func = 7.76969303406910e+03, norm = 8.94289697400748e-01, diff = 8.81833059137104e-03
iter = 99, step = 2.19595005673311e-02, func = 7.76969329173702e+03, norm = 4.48430791617571e-01, diff = 1.14722501101697e-02
iter = 100, step = 2.08615255389645e-02, func = 7.76969362893807e+03, norm = 5.69010030783745e-02, diff = 1.14710840054052e-02
iter = 101, step = 1.98184492620163e-02, func = 7.76969390046329e+03, norm = 6.81687698303407e-02, diff = 9.06959711943714e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 7.769699e+03
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 8, while k = 8 and n = 24
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 2.47823e-320
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 576
Number of centers left            = 24
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 576 variables
Optimize a model with 649 rows, 600 columns and 2400 nonzeros
Variable types: 24 continuous, 576 integer (576 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+06]
  Objective range  [1e+01, 4e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+00]
Presolve removed 0 rows and 75 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.000537 seconds
Total time elapsed: 0.010466 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running ME'
Running ME
+ /home/lykhovyd/progs/districting/districting myconfig.txt ME /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/ME.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/ME/counties/graph/ME.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/ME/counties/graph/ME_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/ME/counties/graph/ME.population
state[2]        = ME
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/ME.ralg_hot
nr_comp = 1
graph: 16 nodes, 34 edges (read)
Model input: L = 660860, U = 667501, k = 2.
Graph is connected.
Model input: total population = 1328361
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 9.88269226580975e+03, norm = 7.99482266540057e-02, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 9.88263156151785e+03, norm = 1.37681594510390e-01, diff = 8.05630329829091e-01
iter = 3, step = 9.02500000000000e-01, func = 9.88269593719386e+03, norm = 6.88407972551951e-02, diff = 9.03513080554828e-01
iter = 4, step = 9.02500000000000e-01, func = 9.88269723724033e+03, norm = 3.44203986275976e-02, diff = 6.07688777957911e-01
iter = 5, step = 8.57375000000000e-01, func = 9.88270738279798e+03, norm = 3.87635362008648e-02, diff = 3.05587392497617e-01
iter = 6, step = 8.14506250000000e-01, func = 9.88270904247705e+03, norm = 2.25792428834021e-02, diff = 3.07767715867915e-01
iter = 7, step = 7.73780937500000e-01, func = 9.88270439964859e+03, norm = 1.43182079833457e-02, diff = 8.22007325512121e-02
iter = 8, step = 7.73780937500000e-01, func = 9.88271071730191e+03, norm = 7.15910399167285e-03, diff = 1.28496651016826e-01
iter = 9, step = 7.35091890625000e-01, func = 9.88270784474788e+03, norm = 1.07787966729295e-02, diff = 1.31233195123421e-01
iter = 10, step = 7.35091890625000e-01, func = 9.88271110458318e+03, norm = 5.38939833646476e-03, diff = 1.42076946206279e-01
iter = 11, step = 6.98337296093750e-01, func = 9.88271015133575e+03, norm = 3.56868170367655e-03, diff = 1.43080294350450e-02
iter = 12, step = 6.98337296093750e-01, func = 9.88271147518216e+03, norm = 1.78434085183828e-03, diff = 3.68730854258821e-02
iter = 13, step = 6.63420431289062e-01, func = 9.88271113199549e+03, norm = 2.69418533043259e-03, diff = 2.96931144221362e-02
iter = 14, step = 6.30249409724609e-01, func = 9.88271169782289e+03, norm = 1.34709266521630e-03, diff = 1.61549321332988e-02
iter = 15, step = 5.98736939238379e-01, func = 9.88271178933631e+03, norm = 6.73546332608150e-04, diff = 3.02448424159662e-03
iter = 16, step = 5.68800092276460e-01, func = 9.88271151889214e+03, norm = 9.53407312559140e-04, diff = 4.97587120897535e-03
iter = 17, step = 5.68800092276460e-01, func = 9.88271172616310e+03, norm = 5.22944725337899e-04, diff = 3.62573874752031e-03
iter = 18, step = 5.68800092276460e-01, func = 9.88271179789134e+03, norm = 2.95979135951198e-04, diff = 3.53330400907976e-03
iter = 19, step = 5.40360087662637e-01, func = 9.88271177405189e+03, norm = 2.79248865379519e-04, diff = 1.62605237540864e-03
iter = 20, step = 5.13342083279505e-01, func = 9.88271179222413e+03, norm = 1.72959698538737e-04, diff = 5.41821072835073e-04
iter = 21, step = 5.13342083279505e-01, func = 9.88271181174118e+03, norm = 1.16623944119983e-04, diff = 1.45071749252540e-03
iter = 22, step = 4.87674979115529e-01, func = 9.88271179189132e+03, norm = 9.10486419494092e-05, diff = 5.37192902412339e-04
iter = 23, step = 4.87674979115529e-01, func = 9.88271180426822e+03, norm = 6.06356054139303e-05, diff = 3.80531628793231e-04
iter = 24, step = 5.85209974938635e-01, func = 9.88271181053933e+03, norm = 4.28363281175872e-05, diff = 7.88441818469650e-04
iter = 25, step = 5.55949476191703e-01, func = 9.88271181050478e+03, norm = 3.12013764754516e-05, diff = 2.19393104054403e-04
iter = 26, step = 5.28152002382118e-01, func = 9.88271181619321e+03, norm = 2.15290110979670e-05, diff = 8.16559342522173e-05
iter = 27, step = 5.01744402263012e-01, func = 9.88271181626512e+03, norm = 1.07645055489805e-05, diff = 1.02639414209868e-04
iter = 28, step = 4.76657182149862e-01, func = 9.88271181617110e+03, norm = 1.37602694446897e-05, diff = 5.55028147426112e-05
iter = 29, step = 4.52824323042369e-01, func = 9.88271181742715e+03, norm = 8.41330847013829e-06, diff = 6.38938445707849e-05
iter = 30, step = 4.30183106890250e-01, func = 9.88271181748909e+03, norm = 4.62513289465562e-06, diff = 1.84086728621070e-05
iter = 31, step = 4.08673951545738e-01, func = 9.88271181788689e+03, norm = 4.27928524436709e-06, diff = 1.29513170244995e-05
iter = 32, step = 3.88240253968451e-01, func = 9.88271181764824e+03, norm = 2.73805622959022e-06, diff = 1.71204967474245e-05
iter = 33, step = 3.68828241270028e-01, func = 9.88271181779115e+03, norm = 1.00378370706065e+00, diff = 4.94380350202961e-06
iter = 34, step = 3.50386829206527e-01, func = 9.88252764625817e+03, norm = 1.00466833510316e+00, diff = 1.84414120635156e-01
iter = 35, step = 3.50386829206527e-01, func = 9.88270611717355e+03, norm = 2.66021308940859e-01, diff = 2.19565283828238e-01
iter = 36, step = 3.32867487746200e-01, func = 9.88270413159453e+03, norm = 7.64160737877852e-02, diff = 3.35158818097463e-01
iter = 37, step = 3.32867487746200e-01, func = 9.88270678655319e+03, norm = 3.82080368938926e-02, diff = 3.18400877120553e-01
iter = 38, step = 3.32867487746200e-01, func = 9.88271049070118e+03, norm = 1.91040184469463e-02, diff = 1.59200438429095e-01
iter = 39, step = 3.16224113358890e-01, func = 9.88270896112679e+03, norm = 1.31189387137765e-01, diff = 3.98001094631994e-02
iter = 40, step = 3.00412907690946e-01, func = 9.88269427576977e+03, norm = 1.31150837532641e-01, diff = 2.07579611249521e-02
iter = 41, step = 3.00412907690946e-01, func = 9.88271019640932e+03, norm = 6.55754187663205e-02, diff = 2.03161803084343e-02
iter = 42, step = 2.85392262306399e-01, func = 9.88270928676031e+03, norm = 3.27877093831603e-02, diff = 7.44166453235039e-03
iter = 43, step = 2.71122649191079e-01, func = 9.88271063848179e+03, norm = 1.10036741692719e-02, diff = 1.04314798336549e-02
iter = 44, step = 2.57566516731525e-01, func = 9.88271158479911e+03, norm = 1.09655822045891e-02, diff = 2.64334969982982e-02
iter = 45, step = 2.44688190894948e-01, func = 9.88271133669395e+03, norm = 7.86834574590821e-03, diff = 5.22935080642868e-03
iter = 46, step = 2.32453781350201e-01, func = 9.88271114555389e+03, norm = 4.30593677265492e-03, diff = 8.59651297676593e-03
iter = 47, step = 2.32453781350201e-01, func = 9.88271167828951e+03, norm = 2.27139048039467e-03, diff = 1.84347770258599e-02
iter = 48, step = 2.20831092282691e-01, func = 9.88271159362683e+03, norm = 2.15244677751289e-03, diff = 4.02022101623027e-03
iter = 49, step = 2.09789537668556e-01, func = 9.88271172198234e+03, norm = 1.84686557695015e-03, diff = 4.33677403688651e-03
iter = 50, step = 1.99300060785129e-01, func = 9.88271173739734e+03, norm = 9.23432788475073e-04, diff = 7.48735849310109e-04
iter = 51, step = 1.89335057745872e-01, func = 9.88271175077657e+03, norm = 1.02295978078616e-03, diff = 1.87444963662934e-03
iter = 52, step = 1.79868304858578e-01, func = 9.88271179379891e+03, norm = 5.11479890393080e-04, diff = 4.65943437864689e-04
iter = 53, step = 1.70874889615650e-01, func = 9.88271180755527e+03, norm = 3.10108877272147e-04, diff = 7.76270786170321e-04
iter = 54, step = 1.62331145134867e-01, func = 9.88271180115104e+03, norm = 2.48714451923619e-04, diff = 2.60949467640133e-04
iter = 55, step = 1.54214587878124e-01, func = 9.88271179954343e+03, norm = 2.41922843178782e-04, diff = 3.88092697548493e-04
iter = 56, step = 1.54214587878124e-01, func = 9.88271181023195e+03, norm = 1.20961421589391e-04, diff = 1.62395813989373e-04
iter = 57, step = 1.46503858484217e-01, func = 9.88271180777262e+03, norm = 1.21771444512086e-04, diff = 1.73985564140124e-04
iter = 58, step = 1.46503858484217e-01, func = 9.88271181432663e+03, norm = 6.08857222560433e-05, diff = 7.23575948414358e-05
iter = 59, step = 1.39178665560007e-01, func = 9.88271181400778e+03, norm = 6.03995359328497e-05, diff = 8.09739028028679e-05
iter = 60, step = 1.32219732282006e-01, func = 9.88271181692683e+03, norm = 3.01997679664248e-05, diff = 1.60813074172335e-05
iter = 61, step = 1.25608745667906e-01, func = 9.88271181702534e+03, norm = 4.06384499172195e-05, diff = 3.66018771481125e-05
iter = 62, step = 1.19328308384511e-01, func = 9.88271181688460e+03, norm = 3.11209240250777e-05, diff = 1.32064238014306e-05
iter = 63, step = 1.19328308384511e-01, func = 9.88271181713479e+03, norm = 1.55604620125380e-05, diff = 1.26850478934938e-05
iter = 64, step = 1.19328308384511e-01, func = 9.88271181783719e+03, norm = 3.98634978709781e-06, diff = 6.01052384387262e-06
iter = 65, step = 1.13361892965285e-01, func = 9.88271181773306e+03, norm = 2.52131239650536e-06, diff = 1.52628372991978e-06
iter = 66, step = 1.13361892965285e-01, func = 9.88271181786432e+03, norm = 2.41677530948358e-06, diff = 2.59582201491883e-06
iter = 67, step = 1.07693798317021e-01, func = 9.88271181788637e+03, norm = 1.00776406471180e-06, diff = 9.72916365418645e-07
iter = 68, step = 1.07693798317021e-01, func = 9.88271181790850e+03, norm = 5.03873947154806e-06, diff = 3.52710849653646e-06
iter = 69, step = 1.02309108401170e-01, func = 9.88271181794923e+03, norm = 5.05078635898183e-06, diff = 6.68125209994520e-06
iter = 70, step = 1.02309108401170e-01, func = 9.88271181793549e+03, norm = 1.56287731101306e-06, diff = 6.82278436090033e-06
iter = 71, step = 9.71936529811113e-02, func = 9.88271181790336e+03, norm = 1.34998573164127e-06, diff = 1.18875706259725e-06
iter = 72, step = 9.23339703320557e-02, func = 9.88271181791212e+03, norm = 9.79868026554663e-07, diff = 1.08525820097728e-06
iter = 73, step = 9.23339703320557e-02, func = 9.88271181793992e+03, norm = 6.88445637340392e-07, diff = 1.39618333461156e-06
iter = 74, step = 8.77172718154530e-02, func = 9.88271181794451e+03, norm = 5.64690799213366e-07, diff = 1.14876999680763e-06
iter = 75, step = 1.05260726178544e-01, func = 9.88271181796374e+03, norm = 5.69272451003864e-07, diff = 3.00136782062912e-06
iter = 76, step = 1.05260726178544e-01, func = 9.88271181796178e+03, norm = 8.41540920997009e-07, diff = 1.51729214329409e-06
iter = 77, step = 9.99976898696164e-02, func = 9.88271181797182e+03, norm = 4.36889317841475e-07, diff = 8.62835774622694e-07
iter = 78, step = 1.19997227843540e-01, func = 9.88271181798470e+03, norm = 2.18444658920876e-07, diff = 1.13625739507116e-06
iter = 79, step = 1.13997366451363e-01, func = 9.88271181798284e+03, norm = 6.14005646014509e-07, diff = 2.68479891683623e-07
iter = 80, step = 1.08297498128794e-01, func = 9.88271181798035e+03, norm = 4.44438073370789e-07, diff = 4.60168642804291e-07
iter = 81, step = 1.08297498128794e-01, func = 9.88271181798862e+03, norm = 3.23471842389630e-07, diff = 4.41717955641416e-07
iter = 82, step = 1.02882623222355e-01, func = 9.88271181799676e+03, norm = 1.61735921199384e-07, diff = 2.10977301792518e-07
iter = 83, step = 9.77384920612370e-02, func = 9.88271181798760e+03, norm = 2.12292044330462e-07, diff = 3.79667578375701e-07
iter = 84, step = 9.77384920612370e-02, func = 9.88271181799657e+03, norm = 1.38555339669675e-07, diff = 4.27685157974069e-07
iter = 85, step = 9.28515674581752e-02, func = 9.88271181799225e+03, norm = 1.38607964693918e-07, diff = 5.73456455570900e-08
iter = 86, step = 9.28515674581752e-02, func = 9.88271181799825e+03, norm = 5.54084237342889e-08, diff = 1.38613381933010e-07
iter = 87, step = 8.82089890852664e-02, func = 9.88271181799544e+03, norm = 8.62810487368997e-08, diff = 1.19210939815320e-07
iter = 88, step = 8.82089890852664e-02, func = 9.88271181799763e+03, norm = 7.65417741278512e-08, diff = 1.05562351474627e-07
iter = 89, step = 8.37985396310031e-02, func = 9.88271181799880e+03, norm = 4.79253040957780e-08, diff = 8.75122179476311e-08
iter = 90, step = 7.96086126494529e-02, func = 9.88271181799921e+03, norm = 2.75450550543410e-08, diff = 2.87518209952191e-08
iter = 91, step = 7.96086126494529e-02, func = 9.88271181799910e+03, norm = 2.75385273323171e-08, diff = 5.12993826878199e-08
iter = 92, step = 7.56281820169803e-02, func = 9.88271181799824e+03, norm = 5.45468705399320e-08, diff = 2.16275336816840e-08
iter = 93, step = 7.18467729161313e-02, func = 9.88271181799864e+03, norm = 4.87176362662160e-08, diff = 3.50665810264372e-08
iter = 94, step = 6.82544342703247e-02, func = 9.88271181799948e+03, norm = 2.35875428266859e-08, diff = 3.75087527804801e-08
iter = 95, step = 6.48417125568085e-02, func = 9.88271181799918e+03, norm = 1.97634145681327e-08, diff = 1.11259207256528e-08
iter = 96, step = 6.48417125568085e-02, func = 9.88271181799950e+03, norm = 1.43541309831107e-08, diff = 8.85741426029584e-09
iter = 97, step = 6.15996269289680e-02, func = 9.88271181799965e+03, norm = 8.97527350693607e-09, diff = 1.23205661961101e-08
iter = 98, step = 5.85196455825196e-02, func = 9.88271181799977e+03, norm = 1.10732878355355e-08, diff = 4.69873710761442e-09
iter = 99, step = 5.85196455825196e-02, func = 9.88271181799972e+03, norm = 1.22164487229480e-08, diff = 1.36009130183862e-08
iter = 100, step = 5.55936633033936e-02, func = 9.88271181799984e+03, norm = 6.35189135126272e-09, diff = 6.40807515581182e-09
iter = 101, step = 5.28139801382240e-02, func = 9.88271181799973e+03, norm = 8.29813950973525e-09, diff = 3.36585997819961e-09
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 9.882712e+03
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 16
  UB from restricted IP = 16137.3 using centers : 4 10 
  UB from restricted IP = 14252.3 using centers : 12 10 
  UB from restricted IP = 10789.1 using centers : 9 14 
In iteration 0 of HessHeuristic, objective value of incumbent is = 10789.1
  UB from restricted IP = 24856.7 using centers : 1 4 
  UB from restricted IP = 11141.6 using centers : 3 14 
In iteration 1 of HessHeuristic, objective value of incumbent is = 10789.1
  UB from restricted IP = 12513.6 using centers : 8 9 
  UB from restricted IP = 11141.6 using centers : 14 3 
In iteration 2 of HessHeuristic, objective value of incumbent is = 10789.1
  UB from restricted IP = 14592.9 using centers : 14 4 
  UB from restricted IP = 10789.1 using centers : 14 9 
In iteration 3 of HessHeuristic, objective value of incumbent is = 10789.1
  UB from restricted IP = 14415.4 using centers : 12 8 
  UB from restricted IP = 11141.6 using centers : 3 14 
In iteration 4 of HessHeuristic, objective value of incumbent is = 10789.1
  UB from restricted IP = 18595.7 using centers : 13 8 
  UB from restricted IP = 11141.6 using centers : 3 14 
In iteration 5 of HessHeuristic, objective value of incumbent is = 10789.1
  UB from restricted IP = 18426.1 using centers : 9 6 
  UB from restricted IP = 10789.1 using centers : 9 14 
In iteration 6 of HessHeuristic, objective value of incumbent is = 10789.1
  UB from restricted IP = 19413.9 using centers : 14 8 
  UB from restricted IP = 11141.6 using centers : 14 3 
In iteration 7 of HessHeuristic, objective value of incumbent is = 10789.1
  UB from restricted IP = 20177.7 using centers : 2 4 
  UB from restricted IP = 11141.6 using centers : 14 3 
In iteration 8 of HessHeuristic, objective value of incumbent is = 10789.1
  UB from restricted IP = 19567 using centers : 8 7 
  UB from restricted IP = 11141.6 using centers : 14 3 
In iteration 9 of HessHeuristic, objective value of incumbent is = 10789.1
UB at end of HessHeuristic = 10789.1
UB of heuristicSolution = 10789.1
Best solution after 10 of HessHeuristic is 10789.07

Beginning LOCAL SEARCH with UB = 10789.1

Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 16
  checking neighbors of node 9
  checking neighbors of node 14
UB at end of local search heuristic = 10789.1
UB of heuristicSolution = 10789.1
Best solution after local search is 10789.07
Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 16
Optimize a model with 80 rows, 168 columns and 534 nonzeros
Variable types: 136 continuous, 32 integer (32 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+05]
  Objective range  [6e+01, 1e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

MIP start did not produce a new incumbent solution

Presolve removed 24 rows and 50 columns
Presolve time: 0.00s
Presolved: 56 rows, 118 columns, 384 nonzeros
Variable types: 104 continuous, 14 integer (14 binary)

Root relaxation: objective 9.882712e+03, 8 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 9882.71182    0    1          - 9882.71182      -     -    0s
Another try with MIP start
     0     0 10282.2503    0    4          - 10282.2503      -     -    0s
     0     0 10642.2313    0    3          - 10642.2313      -     -    0s
     0     0 10642.2313    0    3          - 10642.2313      -     -    0s
     0     0 10857.5738    0    3          - 10857.5738      -     -    0s
     0     0 11155.5935    0    3          - 11155.5935      -     -    0s
     0     2 11155.5935    0    3          - 11155.5935      -     -    0s

Cutting planes:
  Gomory: 2
  Cover: 2
  StrongCG: 1

Explored 150 nodes (538 simplex iterations) in 0.02 seconds
Thread count was 8 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
UB at end of ContiguityHeuristic = 1e+20
UB of (contiguous) heuristicSolution = 10789.1

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 256
Number of centers left            = 16
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 256 variables
Optimize a model with 305 rows, 272 columns and 1088 nonzeros
Variable types: 16 continuous, 256 integer (256 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [3e+01, 3e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 2e+00]

MIP start did not produce a new incumbent solution

Presolve time: 0.00s
Presolved: 305 rows, 272 columns, 1088 nonzeros
Variable types: 0 continuous, 272 integer (256 binary)

Root relaxation: objective 9.882712e+03, 177 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 9882.71182    0    2          - 9882.71182      -     -    0s
Another try with MIP start
     0     0 10156.3107    0    2          - 10156.3107      -     -    0s
     0     0 10379.4562    0   32          - 10379.4562      -     -    0s
     0     0 10743.1012    0   32          - 10743.1012      -     -    0s
     0     0 10764.2719    0   32          - 10764.2719      -     -    0s
     0     0 11008.9508    0   34          - 11008.9508      -     -    0s
     0     0 11038.7200    0   42          - 11038.7200      -     -    0s
     0     0 11039.1225    0   43          - 11039.1225      -     -    0s
     0     0 11117.1707    0   38          - 11117.1707      -     -    0s
     0     0 11178.2091    0   37          - 11178.2091      -     -    0s
     0     0 11178.8387    0   36          - 11178.8387      -     -    0s
     0     0 11225.4000    0   36          - 11225.4000      -     -    0s
     0     0 11229.8183    0   37          - 11229.8183      -     -    0s
     0     0 11322.0286    0   46          - 11322.0286      -     -    0s
     0     0 11338.9856    0   37          - 11338.9856      -     -    0s
     0     0 11343.5463    0   37          - 11343.5463      -     -    0s
     0     0 11343.8601    0   37          - 11343.8601      -     -    0s
     0     0 11478.6756    0   44          - 11478.6756      -     -    0s
     0     0 11483.7842    0   47          - 11483.7842      -     -    0s
     0     0 11484.2830    0   46          - 11484.2830      -     -    0s
     0     0 11484.2830    0   46          - 11484.2830      -     -    0s
     0     2 11484.2830    0   46          - 11484.2830      -     -    0s
* 3151   679              21    37394.197749 14568.0191  61.0%   8.7    0s
H 3705   590                    24965.057079 15125.3176  39.4%   9.3    0s
* 3961   499              28    22497.393380 15482.7202  31.2%   9.3    0s
* 4349   457              28    22060.603891 15760.9762  28.6%   9.4    0s
* 5493   295               9    20668.241921 17865.6977  13.6%   9.3    0s
* 5674   217              24    20171.725688 18087.0577  10.3%   9.3    0s
* 5975     3              16    19093.259907 18365.3296  3.81%   9.2    0s

Cutting planes:
  Cover: 115
  MIR: 13
  StrongCG: 3
  GUB cover: 1
  Inf proof: 1
  Lazy constraints: 361

Explored 6080 nodes (57116 simplex iterations) in 0.68 seconds
Thread count was 8 (of 8 available processors)

Solution count 7: 19093.3 20171.7 20668.2 ... 37394.2

Optimal solution found (tolerance 0.00e+00)
Best objective 1.909325990700e+04, best bound 1.909325990700e+04, gap 0.0000%
IP duration time: 0.676856 seconds
Total time elapsed: 0.720091 seconds
Number of callbacks: 139
Time in callbacks: 0.002720 seconds
Number of lazy constraints generated: 363
+ for state in $states
+ echo 'Running MI'
Running MI
+ /home/lykhovyd/progs/districting/districting myconfig.txt MI /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MI.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/MI/counties/graph/MI.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/MI/counties/graph/MI_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/MI/counties/graph/MI.population
state[2]        = MI
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MI.ralg_hot
nr_comp = 1
graph: 83 nodes, 196 edges (read)
Model input: L = 702445, U = 709504, k = 14.
Graph is connected.
Model input: total population = 9883640
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 3.81180652460961e+04, norm = 1.41012357118529e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 3.81195542533011e+04, norm = 9.02504196200687e+00, diff = 7.77750918374854e-01
iter = 3, step = 8.57375000000000e-01, func = 3.81177488568895e+04, norm = 1.11574269338178e+01, diff = 8.10358654562566e-01
iter = 4, step = 8.14506250000000e-01, func = 3.81193108697360e+04, norm = 7.76309682269439e+00, diff = 5.60804854280319e-01
iter = 5, step = 7.73780937500000e-01, func = 3.81188024883098e+04, norm = 7.55531769931090e+00, diff = 6.10886524592278e-01
iter = 6, step = 7.35091890625000e-01, func = 3.81191185437314e+04, norm = 7.41117954129062e+00, diff = 6.10519880303921e-01
iter = 7, step = 6.98337296093750e-01, func = 3.81189531941793e+04, norm = 8.85651737298244e+00, diff = 5.13849613621074e-01
iter = 8, step = 6.63420431289062e-01, func = 3.81194017794698e+04, norm = 7.80027275171401e+00, diff = 4.76913953570804e-01
iter = 9, step = 6.30249409724609e-01, func = 3.81201749425430e+04, norm = 6.91106952086579e+00, diff = 4.71200369358596e-01
iter = 10, step = 5.98736939238379e-01, func = 3.81195565789805e+04, norm = 7.51254699086243e+00, diff = 4.64070675345447e-01
iter = 11, step = 5.68800092276460e-01, func = 3.81196095838706e+04, norm = 5.43741331878584e+00, diff = 4.26562618724541e-01
iter = 12, step = 5.40360087662637e-01, func = 3.81199631147982e+04, norm = 6.15305418338880e+00, diff = 4.21505631639240e-01
iter = 13, step = 5.13342083279505e-01, func = 3.81201082046717e+04, norm = 6.40998342250247e+00, diff = 3.71307705396525e-01
iter = 14, step = 4.87674979115529e-01, func = 3.81198289993007e+04, norm = 6.05810926609320e+00, diff = 3.73962290398404e-01
iter = 15, step = 4.63291230159753e-01, func = 3.81198244254735e+04, norm = 6.15004822846065e+00, diff = 3.22193598459459e-01
iter = 16, step = 4.40126668651765e-01, func = 3.81199617590434e+04, norm = 5.65026383932038e+00, diff = 3.06782743876408e-01
iter = 17, step = 4.18120335219177e-01, func = 3.81198653652188e+04, norm = 7.70669262882308e+00, diff = 3.26216108243415e-01
iter = 18, step = 3.97214318458218e-01, func = 3.81202164373147e+04, norm = 4.85287391597648e+00, diff = 2.55975804408743e-01
iter = 19, step = 3.77353602535307e-01, func = 3.81204006278586e+04, norm = 5.03411722026989e+00, diff = 3.02205290531102e-01
iter = 20, step = 3.58485922408542e-01, func = 3.81202781858146e+04, norm = 6.06753030650647e+00, diff = 2.61008011640299e-01
iter = 21, step = 3.40561626288115e-01, func = 3.81204913250015e+04, norm = 4.36275566998747e+00, diff = 2.01280369575805e-01
iter = 22, step = 3.23533544973709e-01, func = 3.81204038558679e+04, norm = 5.04667145629278e+00, diff = 2.40167772206702e-01
iter = 23, step = 3.07356867725023e-01, func = 3.81205497290889e+04, norm = 3.93037915465026e+00, diff = 1.93612731870052e-01
iter = 24, step = 2.91989024338772e-01, func = 3.81205245452398e+04, norm = 4.97840384787809e+00, diff = 2.16218810478019e-01
iter = 25, step = 2.77389573121834e-01, func = 3.81205952095137e+04, norm = 4.34384781755874e+00, diff = 1.76541552050406e-01
iter = 26, step = 2.63520094465742e-01, func = 3.81205600428803e+04, norm = 4.27551532818676e+00, diff = 1.89305223142794e-01
iter = 27, step = 2.50344089742455e-01, func = 3.81206487691792e+04, norm = 3.81673719460470e+00, diff = 1.72462411596172e-01
iter = 28, step = 2.37826885255332e-01, func = 3.81206770150093e+04, norm = 4.24729241840587e+00, diff = 1.80018943699637e-01
iter = 29, step = 2.25935540992565e-01, func = 3.81206764540959e+04, norm = 3.27532744446554e+00, diff = 1.33883911765750e-01
iter = 30, step = 2.14638763942937e-01, func = 3.81207368809456e+04, norm = 3.84100877112468e+00, diff = 1.31261438916891e-01
iter = 31, step = 2.03906825745790e-01, func = 3.81207739179041e+04, norm = 3.73127844860675e+00, diff = 1.25231170894732e-01
iter = 32, step = 1.93711484458501e-01, func = 3.81207772797624e+04, norm = 4.24477845864612e+00, diff = 1.22625041245101e-01
iter = 33, step = 1.93711484458501e-01, func = 3.81207871783757e+04, norm = 3.31424799308644e+00, diff = 2.55007852951117e-01
iter = 34, step = 1.84025910235576e-01, func = 3.81207509428913e+04, norm = 3.59317346305753e+00, diff = 1.34138549020581e-01
iter = 35, step = 1.74824614723797e-01, func = 3.81208732224701e+04, norm = 2.69376842920882e+00, diff = 1.11798569971386e-01
iter = 36, step = 1.66083383987607e-01, func = 3.81208263759088e+04, norm = 3.78855434966522e+00, diff = 1.04924746172078e-01
iter = 37, step = 1.57779214788227e-01, func = 3.81208395740728e+04, norm = 2.81654672159437e+00, diff = 9.69001958627686e-02
iter = 38, step = 1.49890254048815e-01, func = 3.81208708474313e+04, norm = 2.59170130509921e+00, diff = 9.33220617638214e-02
iter = 39, step = 1.42395741346375e-01, func = 3.81208086325133e+04, norm = 2.96519558019828e+00, diff = 9.78523443914640e-02
iter = 40, step = 1.35275954279056e-01, func = 3.81208789432777e+04, norm = 3.10336773767528e+00, diff = 7.07476567026714e-02
iter = 41, step = 1.28512156565103e-01, func = 3.81209061316350e+04, norm = 3.38441365043808e+00, diff = 7.23832350032257e-02
iter = 42, step = 1.22086548736848e-01, func = 3.81209282103143e+04, norm = 2.86492842692939e+00, diff = 6.21415645621027e-02
iter = 43, step = 1.15982221300006e-01, func = 3.81208836136352e+04, norm = 2.45723263240661e+00, diff = 7.04488960060136e-02
iter = 44, step = 1.10183110235005e-01, func = 3.81209084748641e+04, norm = 2.11131381349690e+00, diff = 6.34854472420433e-02
iter = 45, step = 1.04673954723255e-01, func = 3.81209255978230e+04, norm = 2.63601824103694e+00, diff = 6.24096709051224e-02
iter = 46, step = 9.94402569870922e-02, func = 3.81209190742560e+04, norm = 2.71656220470929e+00, diff = 5.30085724381359e-02
iter = 47, step = 9.44682441377376e-02, func = 3.81209327923250e+04, norm = 2.01312123255193e+00, diff = 5.75868909351086e-02
iter = 48, step = 8.97448319308507e-02, func = 3.81209473022691e+04, norm = 2.25750292290646e+00, diff = 5.29077917176693e-02
iter = 49, step = 8.52575903343082e-02, func = 3.81209531806842e+04, norm = 1.73730897669980e+00, diff = 4.66861674996175e-02
iter = 50, step = 8.09947108175928e-02, func = 3.81209389247068e+04, norm = 1.51031314386244e+00, diff = 5.13877764077602e-02
iter = 51, step = 7.69449752767131e-02, func = 3.81209497991256e+04, norm = 1.62509708560560e+00, diff = 4.36908287751057e-02
iter = 52, step = 7.69449752767131e-02, func = 3.81209334117359e+04, norm = 2.88820805742058e+00, diff = 6.77860278584553e-02
iter = 53, step = 7.30977265128775e-02, func = 3.81209503724738e+04, norm = 2.16057920783657e+00, diff = 3.70423182634713e-02
iter = 54, step = 6.94428401872336e-02, func = 3.81209672536043e+04, norm = 1.74543593019810e+00, diff = 3.15033773416384e-02
iter = 55, step = 6.59706981778719e-02, func = 3.81209643444478e+04, norm = 1.98984302274705e+00, diff = 3.70244487341371e-02
iter = 56, step = 6.26721632689783e-02, func = 3.81209882631990e+04, norm = 1.23229244322379e+00, diff = 2.83061645754234e-02
iter = 57, step = 5.95385551055294e-02, func = 3.81209775793881e+04, norm = 1.82888257458453e+00, diff = 2.99458783148716e-02
iter = 58, step = 5.95385551055294e-02, func = 3.81209884694278e+04, norm = 1.32960493720155e+00, diff = 4.95895145389346e-02
iter = 59, step = 5.65616273502529e-02, func = 3.81209777942918e+04, norm = 1.58233740011703e+00, diff = 2.50220157436922e-02
iter = 60, step = 5.37335459827403e-02, func = 3.81209754199913e+04, norm = 1.66614156192621e+00, diff = 2.99472924624633e-02
iter = 61, step = 5.10468686836033e-02, func = 3.81209813254376e+04, norm = 1.19165827857043e+00, diff = 2.24081383547513e-02
iter = 62, step = 4.84945252494231e-02, func = 3.81209835304086e+04, norm = 1.22572928329776e+00, diff = 2.20406053038209e-02
iter = 63, step = 4.84945252494231e-02, func = 3.81209817190983e+04, norm = 1.39449715145773e+00, diff = 3.29462272732874e-02
iter = 64, step = 4.84945252494231e-02, func = 3.81209925625950e+04, norm = 1.63408632017643e+00, diff = 3.89129957989654e-02
iter = 65, step = 4.84945252494231e-02, func = 3.81209911276941e+04, norm = 1.39855358557118e+00, diff = 3.66825135258142e-02
iter = 66, step = 4.60697989869519e-02, func = 3.81210044934523e+04, norm = 9.07697557369711e-01, diff = 1.72332673352010e-02
iter = 67, step = 4.37663090376043e-02, func = 3.81210082649372e+04, norm = 1.04488352121213e+00, diff = 2.92011061672263e-02
iter = 68, step = 4.15779935857241e-02, func = 3.81210023972628e+04, norm = 1.09877673884504e+00, diff = 1.62728219027513e-02
iter = 69, step = 3.94990939064379e-02, func = 3.81210078448670e+04, norm = 7.36873182447838e-01, diff = 1.37734619482473e-02
iter = 70, step = 3.75241392111160e-02, func = 3.81210128398483e+04, norm = 7.67032588067330e-01, diff = 1.55803365058604e-02
iter = 71, step = 3.56479322505602e-02, func = 3.81210128917721e+04, norm = 2.47088840543351e+00, diff = 1.48070201584174e-02
iter = 72, step = 3.38655356380322e-02, func = 3.81210129014811e+04, norm = 1.42098463622014e+00, diff = 1.81911342471593e-02
iter = 73, step = 3.21722588561306e-02, func = 3.81210139935795e+04, norm = 1.13033500749842e+00, diff = 1.36064254505753e-02
iter = 74, step = 3.05636459133241e-02, func = 3.81210139481149e+04, norm = 9.77250685926167e-01, diff = 1.25285481291359e-02
iter = 75, step = 2.90354636176579e-02, func = 3.81210169634325e+04, norm = 7.86022461252387e-01, diff = 1.13586375125239e-02
iter = 76, step = 2.75836904367750e-02, func = 3.81210179336399e+04, norm = 6.58101853009130e-01, diff = 9.44586756542029e-03
iter = 77, step = 2.62045059149362e-02, func = 3.81210224922750e+04, norm = 7.00146419109881e-01, diff = 1.15558093774754e-02
iter = 78, step = 2.48942806191894e-02, func = 3.81210217967564e+04, norm = 8.76350525003224e-01, diff = 1.10994956472920e-02
iter = 79, step = 2.36495665882299e-02, func = 3.81210239146157e+04, norm = 7.09729676540384e-01, diff = 6.85220339526473e-03
iter = 80, step = 2.24670882588184e-02, func = 3.81210235332085e+04, norm = 7.26910636798070e-01, diff = 1.02807503698101e-02
iter = 81, step = 2.13437338458775e-02, func = 3.81210257838693e+04, norm = 5.00787577739142e-01, diff = 8.06916755320775e-03
iter = 82, step = 2.02765471535836e-02, func = 3.81210265366995e+04, norm = 7.30832542289436e-01, diff = 9.19447717952843e-03
iter = 83, step = 1.92627197959044e-02, func = 3.81210281865925e+04, norm = 6.36026522776851e-01, diff = 7.78873366077109e-03
iter = 84, step = 1.82995838061092e-02, func = 3.81210291983416e+04, norm = 1.04550275248535e+00, diff = 8.32612727841005e-03
iter = 85, step = 1.73846046158038e-02, func = 3.81210238452610e+04, norm = 1.12144788996908e+00, diff = 1.09406737342784e-02
iter = 86, step = 1.73846046158038e-02, func = 3.81210245522845e+04, norm = 9.97181382516025e-01, diff = 1.52978768242516e-02
iter = 87, step = 1.65153743850136e-02, func = 3.81210273398122e+04, norm = 8.91815667246560e-01, diff = 7.05000297214682e-03
iter = 88, step = 1.56896056657629e-02, func = 3.81210297576418e+04, norm = 6.57111663551585e-01, diff = 5.73562832697970e-03
iter = 89, step = 1.49051253824747e-02, func = 3.81210309444964e+04, norm = 6.32813095973012e-01, diff = 4.73899673741753e-03
iter = 90, step = 1.41598691133510e-02, func = 3.81210314236329e+04, norm = 6.16119816730390e-01, diff = 5.24134758023945e-03
iter = 91, step = 1.34518756576835e-02, func = 3.81210315625163e+04, norm = 5.67874051382630e-01, diff = 4.77488560549329e-03
iter = 92, step = 1.27792818747993e-02, func = 3.81210317253606e+04, norm = 6.60362318263230e-01, diff = 4.24920615597879e-03
iter = 93, step = 1.27792818747993e-02, func = 3.81210320117591e+04, norm = 5.31846501467258e-01, diff = 6.85500630725565e-03
iter = 94, step = 1.21403177810593e-02, func = 3.81210330015282e+04, norm = 4.77831563172114e-01, diff = 3.04109843952212e-03
iter = 95, step = 1.15333018920064e-02, func = 3.81210331218354e+04, norm = 9.40399837490957e-01, diff = 3.66515888475359e-03
iter = 96, step = 1.09566367974060e-02, func = 3.81210298823133e+04, norm = 1.03488279775177e+00, diff = 6.03494744724165e-03
iter = 97, step = 1.09566367974060e-02, func = 3.81210315902722e+04, norm = 1.03988933971355e+00, diff = 8.44744727421090e-03
iter = 98, step = 1.04088049575357e-02, func = 3.81210327850949e+04, norm = 6.04189562430921e-01, diff = 2.94347741710933e-03
iter = 99, step = 9.88836470965895e-03, func = 3.81210331383020e+04, norm = 6.00027800587077e-01, diff = 2.78676118584849e-03
iter = 100, step = 9.39394647417600e-03, func = 3.81210340735333e+04, norm = 5.93830806290469e-01, diff = 3.75428065813493e-03
iter = 101, step = 8.92424915046720e-03, func = 3.81210339961999e+04, norm = 5.30089532377422e-01, diff = 2.83580931677556e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 3.812106e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 14, while k = 14 and n = 83
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 2.7598e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 6889
Number of centers left            = 83
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 6889 variables
Optimize a model with 7139 rows, 6972 columns and 27888 nonzeros
Variable types: 83 continuous, 6889 integer (6889 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+06]
  Objective range  [1e+01, 9e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+01]
Presolve removed 0 rows and 252 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.004472 seconds
Total time elapsed: 0.098604 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running MN'
Running MN
+ /home/lykhovyd/progs/districting/districting myconfig.txt MN /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MN.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/MN/counties/graph/MN.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/MN/counties/graph/MN_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/MN/counties/graph/MN.population
state[2]        = MN
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MN.ralg_hot
nr_comp = 1
graph: 87 nodes, 218 edges (read)
Model input: L = 659676, U = 666305, k = 8.
Graph is connected.
Model input: total population = 5303925
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.49528733290016e+04, norm = 1.36357619474194e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 2.49537881489595e+04, norm = 7.25908166414746e+00, diff = 1.61917657747823e+00
iter = 3, step = 9.02500000000000e-01, func = 2.49531665803118e+04, norm = 6.95048853495959e+00, diff = 8.32843239340955e-01
iter = 4, step = 8.57375000000000e-01, func = 2.49546399618154e+04, norm = 5.10144999402884e+00, diff = 6.16937198316426e-01
iter = 5, step = 8.14506250000000e-01, func = 2.49548900891864e+04, norm = 6.00224677176635e+00, diff = 6.56316604976018e-01
iter = 6, step = 7.73780937500000e-01, func = 2.49549376393078e+04, norm = 5.05834842657024e+00, diff = 6.09085120203738e-01
iter = 7, step = 7.35091890625000e-01, func = 2.49548989922840e+04, norm = 5.12354795080778e+00, diff = 5.41317781365730e-01
iter = 8, step = 6.98337296093750e-01, func = 2.49550767924639e+04, norm = 4.24882325197878e+00, diff = 5.27548871309938e-01
iter = 9, step = 6.63420431289062e-01, func = 2.49548115370194e+04, norm = 4.47986484104816e+00, diff = 5.17501191480875e-01
iter = 10, step = 6.63420431289062e-01, func = 2.49546756436511e+04, norm = 4.49980915813492e+00, diff = 8.53321101690446e-01
iter = 11, step = 6.30249409724609e-01, func = 2.49549505617535e+04, norm = 3.81736240000169e+00, diff = 4.44080213366884e-01
iter = 12, step = 5.98736939238379e-01, func = 2.49552034378690e+04, norm = 4.22459428757397e+00, diff = 4.38272600796948e-01
iter = 13, step = 5.68800092276460e-01, func = 2.49555476564798e+04, norm = 3.67671037977926e+00, diff = 3.85393731979998e-01
iter = 14, step = 5.40360087662637e-01, func = 2.49557570200679e+04, norm = 2.80183285299805e+00, diff = 3.97951989284136e-01
iter = 15, step = 5.13342083279505e-01, func = 2.49554986250617e+04, norm = 3.13808619362994e+00, diff = 3.49247104452991e-01
iter = 16, step = 4.87674979115529e-01, func = 2.49557074021991e+04, norm = 3.21138986188217e+00, diff = 2.91580824440543e-01
iter = 17, step = 4.63291230159753e-01, func = 2.49556232330894e+04, norm = 3.78565918148429e+00, diff = 3.00400237706661e-01
iter = 18, step = 4.40126668651765e-01, func = 2.49558439578201e+04, norm = 2.86726961329305e+00, diff = 2.74848652812499e-01
iter = 19, step = 4.18120335219177e-01, func = 2.49558439785712e+04, norm = 3.70356746197864e+00, diff = 2.29111828617309e-01
iter = 20, step = 3.97214318458218e-01, func = 2.49559016373830e+04, norm = 2.84330579665197e+00, diff = 2.61388109581075e-01
iter = 21, step = 3.77353602535307e-01, func = 2.49557281321887e+04, norm = 2.93892508444454e+00, diff = 2.76448413138875e-01
iter = 22, step = 3.77353602535307e-01, func = 2.49558175496902e+04, norm = 2.69483225541928e+00, diff = 3.85389880927207e-01
iter = 23, step = 3.58485922408542e-01, func = 2.49559058495938e+04, norm = 2.45607099875190e+00, diff = 1.93564620062709e-01
iter = 24, step = 3.40561626288115e-01, func = 2.49559758264405e+04, norm = 3.28575435175074e+00, diff = 2.11400389048390e-01
iter = 25, step = 3.40561626288115e-01, func = 2.49559640509904e+04, norm = 2.91976255890372e+00, diff = 3.35792707345322e-01
iter = 26, step = 3.23533544973709e-01, func = 2.49560150364164e+04, norm = 2.63361553875229e+00, diff = 2.25610176587793e-01
iter = 27, step = 3.07356867725023e-01, func = 2.49560500904274e+04, norm = 2.05105891307075e+00, diff = 1.62663956540760e-01
iter = 28, step = 2.91989024338772e-01, func = 2.49560463740439e+04, norm = 2.18784692647453e+00, diff = 1.87054778231268e-01
iter = 29, step = 2.77389573121834e-01, func = 2.49559585311817e+04, norm = 1.94852862921516e+00, diff = 1.75290796309628e-01
iter = 30, step = 2.77389573121834e-01, func = 2.49559995644672e+04, norm = 2.08374170010546e+00, diff = 2.85650337339486e-01
iter = 31, step = 2.63520094465742e-01, func = 2.49560758392569e+04, norm = 1.71373011421487e+00, diff = 1.21497344225350e-01
iter = 32, step = 2.50344089742455e-01, func = 2.49561746875713e+04, norm = 1.64121819905186e+00, diff = 1.08840275544680e-01
iter = 33, step = 2.37826885255332e-01, func = 2.49561299638540e+04, norm = 1.50843885858855e+00, diff = 9.22621529445176e-02
iter = 34, step = 2.25935540992565e-01, func = 2.49561684537453e+04, norm = 1.14276444559668e+00, diff = 1.13017839712535e-01
iter = 35, step = 2.14638763942937e-01, func = 2.49561565388304e+04, norm = 1.33941528361608e+00, diff = 9.26291365007747e-02
iter = 36, step = 2.03906825745790e-01, func = 2.49561929461178e+04, norm = 1.35318852512516e+00, diff = 5.99299361355072e-02
iter = 37, step = 1.93711484458501e-01, func = 2.49562000419755e+04, norm = 1.70383715137667e+00, diff = 9.85458343115098e-02
iter = 38, step = 1.84025910235576e-01, func = 2.49561685822131e+04, norm = 1.77433749116771e+00, diff = 1.01380298961503e-01
iter = 39, step = 1.74824614723797e-01, func = 2.49562087513579e+04, norm = 1.19091989351324e+00, diff = 7.81282228299935e-02
iter = 40, step = 1.66083383987607e-01, func = 2.49561772737809e+04, norm = 1.94076506424233e+00, diff = 1.11009570957257e-01
iter = 41, step = 1.57779214788227e-01, func = 2.49562601928840e+04, norm = 1.20138678636910e+00, diff = 6.29277417132597e-02
iter = 42, step = 1.49890254048815e-01, func = 2.49562335075682e+04, norm = 1.30843899172021e+00, diff = 7.72276527281680e-02
iter = 43, step = 1.42395741346375e-01, func = 2.49562638745601e+04, norm = 1.25664216741067e+00, diff = 5.24733454384645e-02
iter = 44, step = 1.35275954279056e-01, func = 2.49562493905672e+04, norm = 1.42710992324192e+00, diff = 5.42171602412830e-02
iter = 45, step = 1.28512156565103e-01, func = 2.49562556910274e+04, norm = 1.14545206090014e+00, diff = 4.99739918612288e-02
iter = 46, step = 1.22086548736848e-01, func = 2.49562766209264e+04, norm = 1.01676694519458e+00, diff = 4.88115185655871e-02
iter = 47, step = 1.15982221300006e-01, func = 2.49562789224073e+04, norm = 1.26645740329870e+00, diff = 3.67860518702636e-02
iter = 48, step = 1.10183110235005e-01, func = 2.49562395574684e+04, norm = 1.38258964528426e+00, diff = 6.82499290496997e-02
iter = 49, step = 1.10183110235005e-01, func = 2.49562718302462e+04, norm = 1.04718707450310e+00, diff = 9.17236328694601e-02
iter = 50, step = 1.04673954723255e-01, func = 2.49562839046028e+04, norm = 7.85518317188649e-01, diff = 3.32069021031686e-02
iter = 51, step = 9.94402569870922e-02, func = 2.49562796523118e+04, norm = 1.19719363852289e+00, diff = 4.41894417467343e-02
iter = 52, step = 9.44682441377376e-02, func = 2.49563060509641e+04, norm = 8.67653633913005e-01, diff = 3.22792663555379e-02
iter = 53, step = 8.97448319308507e-02, func = 2.49562815862646e+04, norm = 1.15137975767891e+00, diff = 3.39265486721481e-02
iter = 54, step = 8.97448319308507e-02, func = 2.49563017008687e+04, norm = 9.35447864203462e-01, diff = 6.19507780044580e-02
iter = 55, step = 8.52575903343082e-02, func = 2.49562936903786e+04, norm = 9.25337536291254e-01, diff = 3.24058834284360e-02
iter = 56, step = 8.09947108175928e-02, func = 2.49563059854296e+04, norm = 8.27572876359446e-01, diff = 3.19546141544415e-02
iter = 57, step = 7.69449752767131e-02, func = 2.49563158247321e+04, norm = 7.25658573771287e-01, diff = 2.31286434048059e-02
iter = 58, step = 7.30977265128775e-02, func = 2.49563185759651e+04, norm = 7.89675726935269e-01, diff = 2.76002380616202e-02
iter = 59, step = 6.94428401872336e-02, func = 2.49563203224847e+04, norm = 7.35610590819295e-01, diff = 2.35608032001756e-02
iter = 60, step = 6.59706981778719e-02, func = 2.49563266882581e+04, norm = 5.93109579435621e-01, diff = 2.19280891142782e-02
iter = 61, step = 6.26721632689783e-02, func = 2.49563111679627e+04, norm = 1.31653500356096e+00, diff = 2.28470695342808e-02
iter = 62, step = 5.95385551055294e-02, func = 2.49563254213526e+04, norm = 8.33861543256444e-01, diff = 2.15077920161410e-02
iter = 63, step = 5.65616273502529e-02, func = 2.49563218424083e+04, norm = 8.66755829607594e-01, diff = 2.00016894879972e-02
iter = 64, step = 5.37335459827403e-02, func = 2.49563297177862e+04, norm = 5.48040783671694e-01, diff = 2.34741682317532e-02
iter = 65, step = 5.10468686836033e-02, func = 2.49563307465327e+04, norm = 6.41048684408603e-01, diff = 2.52226075966918e-02
iter = 66, step = 4.84945252494231e-02, func = 2.49563270982730e+04, norm = 6.15164856825424e-01, diff = 2.09294057689790e-02
iter = 67, step = 4.60697989869519e-02, func = 2.49563291505541e+04, norm = 5.51117541428878e-01, diff = 1.62742918302905e-02
iter = 68, step = 4.37663090376043e-02, func = 2.49563333514828e+04, norm = 5.50365766046022e-01, diff = 1.59686139930022e-02
iter = 69, step = 4.15779935857241e-02, func = 2.49563343255239e+04, norm = 4.99659638042092e-01, diff = 1.01381582501379e-02
iter = 70, step = 3.94990939064379e-02, func = 2.49563346916486e+04, norm = 4.79650532107344e-01, diff = 8.97524544071391e-03
iter = 71, step = 3.75241392111160e-02, func = 2.49563304568580e+04, norm = 6.30086646351336e-01, diff = 1.14886512090687e-02
iter = 72, step = 3.75241392111160e-02, func = 2.49563349579913e+04, norm = 4.57429191061949e-01, diff = 2.41568057985393e-02
iter = 73, step = 3.56479322505602e-02, func = 2.49563352889672e+04, norm = 4.19299047787911e-01, diff = 1.16474339741294e-02
iter = 74, step = 3.38655356380322e-02, func = 2.49563344414703e+04, norm = 5.71447015920676e-01, diff = 1.11877714934789e-02
iter = 75, step = 3.21722588561306e-02, func = 2.49563382028720e+04, norm = 4.03201186946848e-01, diff = 8.12705528666568e-03
iter = 76, step = 3.05636459133241e-02, func = 2.49563369708194e+04, norm = 4.18132521223825e-01, diff = 1.05132380575404e-02
iter = 77, step = 2.90354636176579e-02, func = 2.49563359666050e+04, norm = 5.25734723620174e-01, diff = 1.51403195081254e-02
iter = 78, step = 2.75836904367750e-02, func = 2.49563374690048e+04, norm = 4.65502309471952e-01, diff = 1.18880614025458e-02
iter = 79, step = 2.62045059149362e-02, func = 2.49563397616380e+04, norm = 3.29754093426777e-01, diff = 9.24571940056867e-03
iter = 80, step = 2.48942806191894e-02, func = 2.49563385602672e+04, norm = 4.73980329248601e-01, diff = 6.64516081847587e-03
iter = 81, step = 2.36495665882299e-02, func = 2.49563397789980e+04, norm = 3.22050769322816e-01, diff = 7.20297006801287e-03
iter = 82, step = 2.24670882588184e-02, func = 2.49563403317034e+04, norm = 3.10021684751240e-01, diff = 7.87637524430269e-03
iter = 83, step = 2.13437338458775e-02, func = 2.49563408157787e+04, norm = 3.97521010772248e-01, diff = 5.84502953294562e-03
iter = 84, step = 2.02765471535836e-02, func = 2.49563402873763e+04, norm = 4.77468632334383e-01, diff = 6.07835482021046e-03
iter = 85, step = 1.92627197959044e-02, func = 2.49563410011534e+04, norm = 4.66930117668425e-01, diff = 5.13703170813825e-03
iter = 86, step = 1.82995838061092e-02, func = 2.49563420215768e+04, norm = 3.09428093222257e-01, diff = 4.68600871763975e-03
iter = 87, step = 1.73846046158038e-02, func = 2.49563409067263e+04, norm = 3.92656550504778e-01, diff = 5.82695772152890e-03
iter = 88, step = 1.65153743850136e-02, func = 2.49563417411245e+04, norm = 3.21593601953395e-01, diff = 6.34356572001182e-03
iter = 89, step = 1.56896056657629e-02, func = 2.49563420743355e+04, norm = 3.08572866798809e-01, diff = 4.91426149088241e-03
iter = 90, step = 1.49051253824747e-02, func = 2.49563421801436e+04, norm = 2.83984172118689e-01, diff = 5.36282812664185e-03
iter = 91, step = 1.41598691133510e-02, func = 2.49563421358340e+04, norm = 4.21336152526121e-01, diff = 4.71690661844652e-03
iter = 92, step = 1.34518756576835e-02, func = 2.49563425990381e+04, norm = 2.86353322358449e-01, diff = 3.35414739547680e-03
iter = 93, step = 1.27792818747993e-02, func = 2.49563428937319e+04, norm = 2.35013854298960e-01, diff = 6.06544815273336e-03
iter = 94, step = 1.21403177810593e-02, func = 2.49563431227542e+04, norm = 2.24003017545978e-01, diff = 4.94386588908367e-03
iter = 95, step = 1.15333018920064e-02, func = 2.49563430718025e+04, norm = 3.10158058747859e-01, diff = 3.52232848243898e-03
iter = 96, step = 1.09566367974060e-02, func = 2.49563433922548e+04, norm = 2.40160716128501e-01, diff = 3.53894188929426e-03
iter = 97, step = 1.04088049575357e-02, func = 2.49563429702488e+04, norm = 3.04025887165146e-01, diff = 4.41388407465651e-03
iter = 98, step = 9.88836470965895e-03, func = 2.49563433433926e+04, norm = 2.68773615465098e-01, diff = 2.90089298394935e-03
iter = 99, step = 9.39394647417600e-03, func = 2.49563437367856e+04, norm = 2.17494302561952e-01, diff = 2.78078190177452e-03
iter = 100, step = 8.92424915046720e-03, func = 2.49563436350033e+04, norm = 2.11327180324101e-01, diff = 3.10958176134245e-03
iter = 101, step = 8.47803669294384e-03, func = 2.49563437444097e+04, norm = 1.94679444843851e-01, diff = 2.46205771403624e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.495636e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 8, while k = 8 and n = 87
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 3.03035e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 7569
Number of centers left            = 87
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 7569 variables
Optimize a model with 7831 rows, 7656 columns and 30624 nonzeros
Variable types: 87 continuous, 7569 integer (7569 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+06]
  Objective range  [2e+00, 3e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+00]
Presolve removed 0 rows and 88 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.004817 seconds
Total time elapsed: 0.103165 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running MO'
Running MO
+ /home/lykhovyd/progs/districting/districting myconfig.txt MO /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MO.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/MO/counties/graph/MO.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/MO/counties/graph/MO_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/MO/counties/graph/MO.population
state[2]        = MO
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MO.ralg_hot
nr_comp = 1
graph: 115 nodes, 294 edges (read)
Model input: L = 744873, U = 752358, k = 8.
Graph is connected.
Model input: total population = 5988927
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.00965383986390e+04, norm = 1.73932081776242e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 2.00992886817790e+04, norm = 1.07444355972988e+01, diff = 1.44489390611097e+00
iter = 3, step = 9.02500000000000e-01, func = 2.00985978051308e+04, norm = 7.72571762842889e+00, diff = 6.99231605511171e-01
iter = 4, step = 9.02500000000000e-01, func = 2.00995748348272e+04, norm = 6.39024689788281e+00, diff = 1.26176290559517e+00
iter = 5, step = 8.57375000000000e-01, func = 2.01003980331972e+04, norm = 7.77071420402227e+00, diff = 6.75224273823771e-01
iter = 6, step = 8.14506250000000e-01, func = 2.00992314137094e+04, norm = 9.43528168452571e+00, diff = 5.71145347502726e-01
iter = 7, step = 7.73780937500000e-01, func = 2.00999700064939e+04, norm = 7.83772829823386e+00, diff = 5.51380818145273e-01
iter = 8, step = 7.35091890625000e-01, func = 2.01011517803920e+04, norm = 7.19776369882861e+00, diff = 5.15900752982551e-01
iter = 9, step = 6.98337296093750e-01, func = 2.01000834793168e+04, norm = 8.57209819683732e+00, diff = 5.50520176791918e-01
iter = 10, step = 6.63420431289062e-01, func = 2.01011955541289e+04, norm = 6.47310259444602e+00, diff = 4.44714200104759e-01
iter = 11, step = 6.30249409724609e-01, func = 2.01007550428026e+04, norm = 7.90859601793192e+00, diff = 4.36591074057463e-01
iter = 12, step = 6.30249409724609e-01, func = 2.01013091938937e+04, norm = 5.93986103724875e+00, diff = 8.43003933740961e-01
iter = 13, step = 5.98736939238379e-01, func = 2.01009545120370e+04, norm = 5.69189706206199e+00, diff = 4.52846722757069e-01
iter = 14, step = 5.68800092276460e-01, func = 2.01015103707221e+04, norm = 3.73752600864604e+00, diff = 4.05050452498871e-01
iter = 15, step = 5.40360087662637e-01, func = 2.01014514022348e+04, norm = 4.61619289459340e+00, diff = 3.92677532699668e-01
iter = 16, step = 5.13342083279505e-01, func = 2.01020281268157e+04, norm = 4.30931515836868e+00, diff = 3.35343212795203e-01
iter = 17, step = 4.87674979115529e-01, func = 2.01017594767129e+04, norm = 5.12666918998444e+00, diff = 3.31244970954761e-01
iter = 18, step = 4.63291230159753e-01, func = 2.01019062380827e+04, norm = 4.15304389207104e+00, diff = 3.10076812422975e-01
iter = 19, step = 4.40126668651765e-01, func = 2.01014642510434e+04, norm = 5.55206729364908e+00, diff = 3.32009208670081e-01
iter = 20, step = 4.40126668651765e-01, func = 2.01014441784299e+04, norm = 4.91368424784024e+00, diff = 5.23443829529355e-01
iter = 21, step = 4.40126668651765e-01, func = 2.01016224610770e+04, norm = 3.82638539404704e+00, diff = 5.72540754105104e-01
iter = 22, step = 4.18120335219177e-01, func = 2.01017562632430e+04, norm = 3.87956980659918e+00, diff = 2.71071324510069e-01
iter = 23, step = 3.97214318458218e-01, func = 2.01020818405657e+04, norm = 3.12930315198197e+00, diff = 2.48518608132951e-01
iter = 24, step = 3.77353602535307e-01, func = 2.01020991652898e+04, norm = 4.00680576040276e+00, diff = 2.33218300819834e-01
iter = 25, step = 3.58485922408542e-01, func = 2.01020886487872e+04, norm = 3.99982294161974e+00, diff = 2.38946349331683e-01
iter = 26, step = 3.40561626288115e-01, func = 2.01021064664736e+04, norm = 4.10085925239667e+00, diff = 2.33901532419420e-01
iter = 27, step = 3.23533544973709e-01, func = 2.01021745842939e+04, norm = 4.10400902131794e+00, diff = 2.22400618307431e-01
iter = 28, step = 3.07356867725023e-01, func = 2.01022452503343e+04, norm = 3.82004290394056e+00, diff = 2.11456806519219e-01
iter = 29, step = 2.91989024338772e-01, func = 2.01021810587167e+04, norm = 4.06524448485821e+00, diff = 2.08091618450191e-01
iter = 30, step = 2.77389573121834e-01, func = 2.01023012489504e+04, norm = 3.27071869903350e+00, diff = 1.77073726659155e-01
iter = 31, step = 2.63520094465742e-01, func = 2.01022757282298e+04, norm = 3.61406488929601e+00, diff = 1.62636386788502e-01
iter = 32, step = 2.50344089742455e-01, func = 2.01023541253124e+04, norm = 3.04575293254773e+00, diff = 1.52981223169848e-01
iter = 33, step = 2.37826885255332e-01, func = 2.01023372996722e+04, norm = 3.47854729851282e+00, diff = 1.66772009276503e-01
iter = 34, step = 2.25935540992565e-01, func = 2.01024300250387e+04, norm = 3.14358003346257e+00, diff = 1.37690490701755e-01
iter = 35, step = 2.14638763942937e-01, func = 2.01023831486700e+04, norm = 3.54088399370869e+00, diff = 1.36582636339279e-01
iter = 36, step = 2.03906825745790e-01, func = 2.01024865872690e+04, norm = 2.49260860185883e+00, diff = 1.25290782045924e-01
iter = 37, step = 1.93711484458501e-01, func = 2.01024676229362e+04, norm = 2.76047468211015e+00, diff = 1.24829819357081e-01
iter = 38, step = 1.84025910235576e-01, func = 2.01024576735323e+04, norm = 3.16902050787993e+00, diff = 9.93876688303279e-02
iter = 39, step = 1.74824614723797e-01, func = 2.01024688166041e+04, norm = 2.88952008000573e+00, diff = 9.97713508615138e-02
iter = 40, step = 1.66083383987607e-01, func = 2.01025284962900e+04, norm = 2.75051393510546e+00, diff = 1.02543780276564e-01
iter = 41, step = 1.57779214788227e-01, func = 2.01025248272201e+04, norm = 2.33613015212308e+00, diff = 9.62447674245129e-02
iter = 42, step = 1.49890254048815e-01, func = 2.01024678683629e+04, norm = 3.44233389774997e+00, diff = 9.57633524617423e-02
iter = 43, step = 1.42395741346375e-01, func = 2.01025795884274e+04, norm = 2.37490217329911e+00, diff = 8.55993593138723e-02
iter = 44, step = 1.35275954279056e-01, func = 2.01025801986498e+04, norm = 2.97351446641723e+00, diff = 8.02012888015238e-02
iter = 45, step = 1.28512156565103e-01, func = 2.01025672355968e+04, norm = 2.55605264666950e+00, diff = 8.04262476219325e-02
iter = 46, step = 1.22086548736848e-01, func = 2.01025540946621e+04, norm = 2.43759675165994e+00, diff = 7.33569493741081e-02
iter = 47, step = 1.15982221300006e-01, func = 2.01025618257073e+04, norm = 2.18265052516665e+00, diff = 6.85232041234013e-02
iter = 48, step = 1.10183110235005e-01, func = 2.01025866246580e+04, norm = 2.22891605427996e+00, diff = 5.60536446440116e-02
iter = 49, step = 1.04673954723255e-01, func = 2.01025791993172e+04, norm = 2.31240618540756e+00, diff = 5.84321046285604e-02
iter = 50, step = 1.04673954723255e-01, func = 2.01025518832859e+04, norm = 2.47522887360523e+00, diff = 9.28279129507732e-02
iter = 51, step = 9.94402569870922e-02, func = 2.01025698856218e+04, norm = 2.14720883718301e+00, diff = 5.85587817086587e-02
iter = 52, step = 9.44682441377376e-02, func = 2.01026003956622e+04, norm = 2.03724018394684e+00, diff = 5.27778260842192e-02
iter = 53, step = 8.97448319308507e-02, func = 2.01026035865132e+04, norm = 1.95990051170020e+00, diff = 5.17104483902638e-02
iter = 54, step = 8.52575903343082e-02, func = 2.01026070093746e+04, norm = 1.95642882798141e+00, diff = 4.41808906988221e-02
iter = 55, step = 8.09947108175928e-02, func = 2.01026458452398e+04, norm = 1.32650725562959e+00, diff = 4.14059771776946e-02
iter = 56, step = 7.69449752767131e-02, func = 2.01026295118365e+04, norm = 1.82316517175780e+00, diff = 3.95311069116586e-02
iter = 57, step = 7.30977265128775e-02, func = 2.01026289118732e+04, norm = 1.96599907182113e+00, diff = 3.42864992912411e-02
iter = 58, step = 6.94428401872336e-02, func = 2.01026451688949e+04, norm = 1.80778694425879e+00, diff = 3.03779524112415e-02
iter = 59, step = 6.59706981778719e-02, func = 2.01026448291510e+04, norm = 1.78162881933853e+00, diff = 3.37355639528751e-02
iter = 60, step = 6.26721632689783e-02, func = 2.01026394663411e+04, norm = 1.99079421030604e+00, diff = 3.07707730440859e-02
iter = 61, step = 5.95385551055294e-02, func = 2.01026482252827e+04, norm = 1.60144598941739e+00, diff = 3.40850862142760e-02
iter = 62, step = 5.65616273502529e-02, func = 2.01026660715453e+04, norm = 1.21297503763239e+00, diff = 2.90196453439917e-02
iter = 63, step = 5.37335459827403e-02, func = 2.01026586128623e+04, norm = 1.67856947383359e+00, diff = 2.76494248646332e-02
iter = 64, step = 5.10468686836033e-02, func = 2.01026694626690e+04, norm = 1.35868650385661e+00, diff = 2.17830757131626e-02
iter = 65, step = 4.84945252494231e-02, func = 2.01026624204290e+04, norm = 1.90533397717427e+00, diff = 2.32932566477162e-02
iter = 66, step = 4.60697989869519e-02, func = 2.01026706272422e+04, norm = 1.27758356617182e+00, diff = 1.93764857019272e-02
iter = 67, step = 4.37663090376043e-02, func = 2.01026585688244e+04, norm = 1.56759695564387e+00, diff = 2.13745482276532e-02
iter = 68, step = 4.15779935857241e-02, func = 2.01026640469611e+04, norm = 1.42053012752108e+00, diff = 1.64025336602807e-02
iter = 69, step = 3.94990939064379e-02, func = 2.01026777331713e+04, norm = 1.26008987475400e+00, diff = 1.61615980036747e-02
iter = 70, step = 3.75241392111160e-02, func = 2.01026696214998e+04, norm = 1.71481687403704e+00, diff = 1.58200518486967e-02
iter = 71, step = 3.56479322505602e-02, func = 2.01026803646599e+04, norm = 1.15496225781960e+00, diff = 1.74733819612579e-02
iter = 72, step = 3.38655356380322e-02, func = 2.01026808404573e+04, norm = 1.06055025301954e+00, diff = 1.20930046096395e-02
iter = 73, step = 3.21722588561306e-02, func = 2.01026799504051e+04, norm = 1.03424225913907e+00, diff = 1.51942259960546e-02
iter = 74, step = 3.05636459133241e-02, func = 2.01026836774211e+04, norm = 1.01784676698708e+00, diff = 1.27502233068232e-02
iter = 75, step = 2.90354636176579e-02, func = 2.01026851854670e+04, norm = 9.51780141705145e-01, diff = 1.10654490341077e-02
iter = 76, step = 2.75836904367750e-02, func = 2.01026874473730e+04, norm = 9.52701600587657e-01, diff = 9.72362097641567e-03
iter = 77, step = 2.62045059149362e-02, func = 2.01026879051801e+04, norm = 1.09586329232846e+00, diff = 9.37469687150367e-03
iter = 78, step = 2.48942806191894e-02, func = 2.01026893480173e+04, norm = 1.22149621296910e+00, diff = 1.01386273067252e-02
iter = 79, step = 2.36495665882299e-02, func = 2.01026890306621e+04, norm = 1.34856824522540e+00, diff = 1.00020463594772e-02
iter = 80, step = 2.24670882588184e-02, func = 2.01026913023945e+04, norm = 9.26963711568630e-01, diff = 8.40777199129233e-03
iter = 81, step = 2.13437338458775e-02, func = 2.01026876123253e+04, norm = 1.16636592213952e+00, diff = 9.84201498128780e-03
iter = 82, step = 2.02765471535836e-02, func = 2.01026893541165e+04, norm = 9.38436658785396e-01, diff = 7.16669648203570e-03
iter = 83, step = 1.92627197959044e-02, func = 2.01026926481265e+04, norm = 1.07290540234677e+00, diff = 6.49391052843351e-03
iter = 84, step = 1.82995838061092e-02, func = 2.01026933755577e+04, norm = 9.57718204576631e-01, diff = 7.32114647245593e-03
iter = 85, step = 1.73846046158038e-02, func = 2.01026923451652e+04, norm = 8.82764399716477e-01, diff = 6.63268240146558e-03
iter = 86, step = 1.65153743850136e-02, func = 2.01026944586760e+04, norm = 7.11808089744043e-01, diff = 6.42863338377208e-03
iter = 87, step = 1.56896056657629e-02, func = 2.01026944673783e+04, norm = 7.25924640607970e-01, diff = 5.88015691943440e-03
iter = 88, step = 1.49051253824747e-02, func = 2.01026942459215e+04, norm = 9.61396049723280e-01, diff = 4.67196175900190e-03
iter = 89, step = 1.41598691133510e-02, func = 2.01026964415468e+04, norm = 7.30891371541740e-01, diff = 4.45999046047504e-03
iter = 90, step = 1.34518756576835e-02, func = 2.01026958446280e+04, norm = 8.22552114483058e-01, diff = 5.35283341615977e-03
iter = 91, step = 1.27792818747993e-02, func = 2.01026957024068e+04, norm = 8.34389027800648e-01, diff = 5.07689571583080e-03
iter = 92, step = 1.21403177810593e-02, func = 2.01026955950589e+04, norm = 7.47405377897924e-01, diff = 4.05712413485319e-03
iter = 93, step = 1.15333018920064e-02, func = 2.01026972105034e+04, norm = 7.60503936016735e-01, diff = 4.33882845387612e-03
iter = 94, step = 1.09566367974060e-02, func = 2.01026979708992e+04, norm = 8.03982918089514e-01, diff = 4.55917314416730e-03
iter = 95, step = 1.04088049575357e-02, func = 2.01026981732478e+04, norm = 6.59144420312158e-01, diff = 3.59427919367679e-03
iter = 96, step = 9.88836470965895e-03, func = 2.01026982481244e+04, norm = 5.37156777935895e-01, diff = 5.07415471387221e-03
iter = 97, step = 9.39394647417600e-03, func = 2.01026982894078e+04, norm = 6.49202462513848e-01, diff = 3.83237893386458e-03
iter = 98, step = 8.92424915046720e-03, func = 2.01026981232714e+04, norm = 5.64090087368515e-01, diff = 3.48551186082691e-03
iter = 99, step = 8.47803669294384e-03, func = 2.01026992803100e+04, norm = 8.51231637857509e-01, diff = 2.68502160137481e-03
iter = 100, step = 8.05413485829665e-03, func = 2.01026963317123e+04, norm = 1.02599652848383e+00, diff = 4.84664666329115e-03
iter = 101, step = 8.05413485829665e-03, func = 2.01026978088253e+04, norm = 8.65479695992448e-01, diff = 5.80832344212109e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.010272e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 8, while k = 8 and n = 115
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 5.27835e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 13225
Number of centers left            = 115
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 13225 variables
Optimize a model with 13571 rows, 13340 columns and 53360 nonzeros
Variable types: 115 continuous, 13225 integer (13225 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+06]
  Objective range  [2e+00, 2e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+00]
Presolve removed 0 rows and 116 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.008468 seconds
Total time elapsed: 0.175288 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running MS'
Running MS
+ /home/lykhovyd/progs/districting/districting myconfig.txt MS /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MS.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/MS/counties/graph/MS.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/MS/counties/graph/MS_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/MS/counties/graph/MS.population
state[2]        = MS
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MS.ralg_hot
nr_comp = 1
graph: 82 nodes, 202 edges (read)
Model input: L = 738116, U = 745533, k = 4.
Graph is connected.
Model input: total population = 2967297
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.60862991829158e+04, norm = 2.82940952870843e+00, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 1.60871132362464e+04, norm = 1.41598981764504e+00, diff = 1.42958928645154e+00
iter = 3, step = 1.14000000000000e+00, func = 1.60874975255017e+04, norm = 7.13719773666481e-01, diff = 6.14050567976573e-01
iter = 4, step = 1.14000000000000e+00, func = 1.60875222827901e+04, norm = 3.58185734192723e-01, diff = 4.59075915753948e-01
iter = 5, step = 1.14000000000000e+00, func = 1.60876807040393e+04, norm = 7.24374176800993e-01, diff = 7.51171271690894e-01
iter = 6, step = 1.08300000000000e+00, func = 1.60868722826853e+04, norm = 1.11600437905749e+00, diff = 6.00136279273856e-01
iter = 7, step = 1.29960000000000e+00, func = 1.60873228634047e+04, norm = 7.56553244061138e-01, diff = 9.99131786027760e-01
iter = 8, step = 1.29960000000000e+00, func = 1.60876211668688e+04, norm = 3.78474693659048e-01, diff = 3.81912917880313e-01
iter = 9, step = 1.23462000000000e+00, func = 1.60876787392487e+04, norm = 1.60046440060283e-01, diff = 3.09391117231930e-01
iter = 10, step = 1.17288900000000e+00, func = 1.60876594919691e+04, norm = 1.28558574915659e-01, diff = 5.06475354142259e-01
iter = 11, step = 1.17288900000000e+00, func = 1.60876589694795e+04, norm = 9.76487428297230e-02, diff = 9.08751090324253e-01
iter = 12, step = 1.17288900000000e+00, func = 1.60876779959770e+04, norm = 4.95254658311842e-02, diff = 1.22745588987621e+00
iter = 13, step = 1.11424455000000e+00, func = 1.60876779540914e+04, norm = 5.86876890569656e-02, diff = 8.90404324217672e-01
iter = 14, step = 1.05853232250000e+00, func = 1.60876744528667e+04, norm = 8.75563355763578e-02, diff = 6.62584004251146e-01
iter = 15, step = 1.00560570637500e+00, func = 1.60876823424032e+04, norm = 5.13370704478238e-02, diff = 5.97016680503710e-01
iter = 16, step = 9.55325421056250e-01, func = 1.60876877234737e+04, norm = 3.91258783587353e-02, diff = 7.96030948922912e-01
iter = 17, step = 9.07559150003437e-01, func = 1.60876931734229e+04, norm = 2.44553527342372e-02, diff = 5.33409698881010e-01
iter = 18, step = 8.62181192503265e-01, func = 1.60876946627733e+04, norm = 5.23262680865046e-02, diff = 4.46358218438084e-01
iter = 19, step = 8.19072132878102e-01, func = 1.60877023333602e+04, norm = 3.71847589814729e-02, diff = 4.35134590053282e-01
iter = 20, step = 7.78118526234197e-01, func = 1.60876977274013e+04, norm = 2.88062689720096e-02, diff = 5.47026681887620e-01
iter = 21, step = 7.78118526234197e-01, func = 1.60877016033525e+04, norm = 2.57363208363713e-02, diff = 1.00198533110358e+00
iter = 22, step = 7.39212599922487e-01, func = 1.60876969862650e+04, norm = 4.29948087151783e-02, diff = 3.31559057670223e-01
iter = 23, step = 7.02251969926363e-01, func = 1.60877059880394e+04, norm = 3.42907956585562e-02, diff = 3.93382101765242e-01
iter = 24, step = 6.67139371430045e-01, func = 1.60877060769925e+04, norm = 3.03171939056913e-02, diff = 3.80053674867753e-01
iter = 25, step = 6.33782402858542e-01, func = 1.60877059427623e+04, norm = 2.91632716666329e-02, diff = 1.62712538045949e-01
iter = 26, step = 6.02093282715615e-01, func = 1.60877088440633e+04, norm = 1.54448663529183e-02, diff = 1.76150907414377e-01
iter = 27, step = 5.71988618579834e-01, func = 1.60877082898774e+04, norm = 1.85498059203803e-02, diff = 2.55514504143945e-01
iter = 28, step = 5.43389187650843e-01, func = 1.60877054514263e+04, norm = 2.29025751164711e-02, diff = 2.24008514452227e-01
iter = 29, step = 5.16219728268300e-01, func = 1.60877074065633e+04, norm = 2.46527627058800e-02, diff = 2.02430689520332e-01
iter = 30, step = 5.16219728268300e-01, func = 1.60877071486833e+04, norm = 2.38733256910652e-02, diff = 4.69137847986497e-01
iter = 31, step = 4.90408741854885e-01, func = 1.60877098352559e+04, norm = 1.44681960627274e-02, diff = 1.64965168721557e-01
iter = 32, step = 4.65888304762141e-01, func = 1.60877099059759e+04, norm = 1.12932888185212e-02, diff = 1.23297260714333e-01
iter = 33, step = 4.42593889524034e-01, func = 1.60877108194225e+04, norm = 1.21225407567782e-02, diff = 1.34775346729387e-01
iter = 34, step = 4.20464195047832e-01, func = 1.60877106928114e+04, norm = 1.10256035087080e-02, diff = 6.67397588071204e-02
iter = 35, step = 3.99440985295441e-01, func = 1.60877116003899e+04, norm = 9.29705551615512e-03, diff = 9.05481302427658e-02
iter = 36, step = 3.79468936030669e-01, func = 1.60877101328218e+04, norm = 1.13147453635015e-02, diff = 6.50068853841672e-02
iter = 37, step = 3.79468936030669e-01, func = 1.60877114001422e+04, norm = 9.74261170136851e-03, diff = 1.52598264790200e-01
iter = 38, step = 3.60495489229135e-01, func = 1.60877114057681e+04, norm = 7.73299159602692e-03, diff = 6.50295030043308e-02
iter = 39, step = 3.42470714767678e-01, func = 1.60877108118089e+04, norm = 9.44494913146660e-03, diff = 5.45911449849812e-02
iter = 40, step = 3.42470714767678e-01, func = 1.60877116362869e+04, norm = 6.86521165599559e-03, diff = 8.24960614355124e-02
iter = 41, step = 3.25347179029294e-01, func = 1.60877119532581e+04, norm = 4.10664694557268e-03, diff = 2.98352647819548e-02
iter = 42, step = 3.09079820077830e-01, func = 1.60877120872452e+04, norm = 7.50369407857784e-03, diff = 3.04957530026916e-02
iter = 43, step = 2.93625829073938e-01, func = 1.60877125063182e+04, norm = 5.24065679369783e-03, diff = 2.87192676439622e-02
iter = 44, step = 2.78944537620241e-01, func = 1.60877119753572e+04, norm = 5.55971216376979e-03, diff = 3.27368041307370e-02
iter = 45, step = 2.64997310739229e-01, func = 1.60877122230422e+04, norm = 4.61861744330886e-03, diff = 1.97189528807664e-02
iter = 46, step = 2.64997310739229e-01, func = 1.60877122537930e+04, norm = 4.26068590672605e-03, diff = 4.27233303390186e-02
iter = 47, step = 2.51747445202268e-01, func = 1.60877122281713e+04, norm = 4.29963389170857e-03, diff = 1.47886727292843e-02
iter = 48, step = 2.51747445202268e-01, func = 1.60877124746745e+04, norm = 3.86913016379694e-03, diff = 3.88901044942318e-02
iter = 49, step = 2.51747445202268e-01, func = 1.60877124865304e+04, norm = 3.81770178393810e-03, diff = 6.03014235751514e-02
iter = 50, step = 2.39160072942154e-01, func = 1.60877125690765e+04, norm = 7.93568720712102e-03, diff = 1.55398591638356e-02
iter = 51, step = 2.27202069295047e-01, func = 1.60877125857178e+04, norm = 4.82717671057885e-03, diff = 3.55857784445748e-02
iter = 52, step = 2.15841965830294e-01, func = 1.60877121653086e+04, norm = 4.71001753596733e-03, diff = 3.35325008667445e-02
iter = 53, step = 2.15841965830294e-01, func = 1.60877125510480e+04, norm = 2.22707316662206e-03, diff = 3.99468758963170e-02
iter = 54, step = 2.05049867538780e-01, func = 1.60877125929364e+04, norm = 2.82738857449999e-03, diff = 1.12893676819242e-02
iter = 55, step = 1.94797374161841e-01, func = 1.60877126935752e+04, norm = 1.89454910383445e-03, diff = 1.02411295031690e-02
iter = 56, step = 1.94797374161841e-01, func = 1.60877127487786e+04, norm = 1.76090240073066e-03, diff = 1.82289822986848e-02
iter = 57, step = 1.94797374161841e-01, func = 1.60877127486139e+04, norm = 1.35726490058643e-03, diff = 1.00236233207506e-02
iter = 58, step = 1.85057505453749e-01, func = 1.60877126599431e+04, norm = 1.62711200942828e-03, diff = 6.63035222120673e-03
iter = 59, step = 1.75804630181061e-01, func = 1.60877126992560e+04, norm = 1.68192617976207e-03, diff = 7.81243748636214e-03
iter = 60, step = 1.75804630181061e-01, func = 1.60877128232105e+04, norm = 1.39570425134966e-03, diff = 8.07176534143185e-03
iter = 61, step = 1.67014398672008e-01, func = 1.60877128288255e+04, norm = 1.13803393303349e-03, diff = 5.99938799683175e-03
iter = 62, step = 1.58663678738408e-01, func = 1.60877127114053e+04, norm = 2.15141544003594e-03, diff = 4.01078758232529e-03
iter = 63, step = 1.58663678738408e-01, func = 1.60877128549589e+04, norm = 2.60350879773297e-03, diff = 1.11114663167778e-02
iter = 64, step = 1.50730494801487e-01, func = 1.60877128798254e+04, norm = 1.53726630760826e-03, diff = 7.77579977798395e-03
iter = 65, step = 1.43193970061413e-01, func = 1.60877128629498e+04, norm = 1.03186054436342e-03, diff = 1.96432391620316e-03
iter = 66, step = 1.36034271558342e-01, func = 1.60877128747301e+04, norm = 8.08237537937299e-04, diff = 3.71431151165802e-03
iter = 67, step = 1.36034271558342e-01, func = 1.60877128944384e+04, norm = 7.82239461239188e-04, diff = 4.17129320428744e-03
iter = 68, step = 1.29232557980425e-01, func = 1.60877129100902e+04, norm = 9.19378403591557e-04, diff = 2.11114874079391e-03
iter = 69, step = 1.22770930081404e-01, func = 1.60877128858556e+04, norm = 9.61035636432163e-04, diff = 1.37632483120742e-03
iter = 70, step = 1.22770930081404e-01, func = 1.60877129088360e+04, norm = 6.92044947630026e-04, diff = 2.32544197932781e-03
iter = 71, step = 1.16632383577334e-01, func = 1.60877129119975e+04, norm = 5.87172990149092e-04, diff = 1.42670557261247e-03
iter = 72, step = 1.16632383577334e-01, func = 1.60877129106434e+04, norm = 7.87826261078543e-04, diff = 2.67505650511327e-03
iter = 73, step = 1.10800764398467e-01, func = 1.60877129297676e+04, norm = 4.44290097515608e-04, diff = 1.44367968388611e-03
iter = 74, step = 1.05260726178544e-01, func = 1.60877129150762e+04, norm = 5.00535630060705e-04, diff = 1.31150530837741e-03
iter = 75, step = 1.05260726178544e-01, func = 1.60877129200425e+04, norm = 6.62879474404125e-04, diff = 1.12346287161867e-03
iter = 76, step = 1.05260726178544e-01, func = 1.60877129228827e+04, norm = 8.49806669649848e-04, diff = 2.05836190939030e-03
iter = 77, step = 9.99976898696164e-02, func = 1.60877129265660e+04, norm = 4.88921752707508e-04, diff = 1.66022144927376e-03
iter = 78, step = 9.99976898696164e-02, func = 1.60877129281393e+04, norm = 3.59118463455707e-04, diff = 1.63830801253080e-03
iter = 79, step = 9.49978053761356e-02, func = 1.60877129325954e+04, norm = 3.49922711647619e-04, diff = 7.16645578763531e-04
iter = 80, step = 9.02479151073288e-02, func = 1.60877129373230e+04, norm = 2.56099908199600e-04, diff = 5.21035319754418e-04
iter = 81, step = 8.57355193519624e-02, func = 1.60877129395638e+04, norm = 2.54223453953481e-04, diff = 7.27062628013808e-04
iter = 82, step = 8.57355193519624e-02, func = 1.60877129353651e+04, norm = 3.32456165204270e-04, diff = 8.53419734612418e-04
iter = 83, step = 8.14487433843643e-02, func = 1.60877129405164e+04, norm = 2.16751101984427e-04, diff = 4.91546858264404e-04
iter = 84, step = 7.73763062151460e-02, func = 1.60877129438366e+04, norm = 3.42521551026737e-04, diff = 2.61066798178418e-04
iter = 85, step = 7.35074909043887e-02, func = 1.60877129449775e+04, norm = 2.02796156052846e-04, diff = 3.41460146816036e-04
iter = 86, step = 6.98321163591693e-02, func = 1.60877129484502e+04, norm = 1.38096850748907e-04, diff = 3.10116955795209e-04
iter = 87, step = 6.63405105412108e-02, func = 1.60877129471368e+04, norm = 1.60137973858746e-04, diff = 2.53318501881116e-04
iter = 88, step = 6.30234850141503e-02, func = 1.60877129481033e+04, norm = 1.31935148131477e-04, diff = 1.72661007268049e-04
iter = 89, step = 5.98723107634428e-02, func = 1.60877129486236e+04, norm = 2.63319848685413e-04, diff = 1.77594019876873e-04
iter = 90, step = 5.98723107634428e-02, func = 1.60877129502893e+04, norm = 1.68872758755849e-04, diff = 5.27444587359427e-04
iter = 91, step = 5.68786952252706e-02, func = 1.60877129490989e+04, norm = 1.86256812948795e-04, diff = 1.80304404461077e-04
iter = 92, step = 5.40347604640071e-02, func = 1.60877129478737e+04, norm = 2.24091350614660e-04, diff = 1.81017125500592e-04
iter = 93, step = 5.40347604640071e-02, func = 1.60877129501041e+04, norm = 1.03809870928185e-04, diff = 2.53508183504900e-04
iter = 94, step = 5.13330224408067e-02, func = 1.60877129496274e+04, norm = 1.01903673229845e-04, diff = 1.06387707617862e-04
iter = 95, step = 4.87663713187664e-02, func = 1.60877129494543e+04, norm = 9.45554686862107e-05, diff = 1.01187465475053e-04
iter = 96, step = 4.87663713187664e-02, func = 1.60877129501388e+04, norm = 1.05935476613942e-04, diff = 1.33494735354724e-04
iter = 97, step = 4.63280527528281e-02, func = 1.60877129507747e+04, norm = 6.90324766996615e-05, diff = 1.35998619384193e-04
iter = 98, step = 4.40116501151867e-02, func = 1.60877129505557e+04, norm = 5.40565736174949e-05, diff = 7.31487339438451e-05
iter = 99, step = 4.40116501151867e-02, func = 1.60877129496050e+04, norm = 1.19337385325050e-04, diff = 1.20940589920223e-04
iter = 100, step = 4.40116501151867e-02, func = 1.60877129514845e+04, norm = 7.12320608199270e-05, diff = 8.59935772217608e-05
iter = 101, step = 4.18110676094273e-02, func = 1.60877129512616e+04, norm = 7.34348361279546e-05, diff = 5.11670667399501e-05
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.608771e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 82
  UB from restricted IP = 59026.8 using centers : 4 51 11 69 
  UB from restricted IP = 21822.3 using centers : 38 0 1 16 
  UB from restricted IP = 18420.7 using centers : 13 34 1 80 
In iteration 0 of HessHeuristic, objective value of incumbent is = 18420.7
  UB from restricted IP = 40528.5 using centers : 18 52 69 65 
  UB from restricted IP = 17254.6 using centers : 34 13 6 66 
In iteration 1 of HessHeuristic, objective value of incumbent is = 17254.6
  UB from restricted IP = 147900 using centers : 25 33 2 34 
  UB from restricted IP = 21994.1 using centers : 35 24 45 10 
  UB from restricted IP = 20861.2 using centers : 35 13 45 10 
In iteration 2 of HessHeuristic, objective value of incumbent is = 17254.6
  UB from restricted IP = 57856.9 using centers : 9 12 51 53 
  UB from restricted IP = 22141.1 using centers : 71 54 0 38 
  UB from restricted IP = 17105.4 using centers : 71 7 34 13 
  UB from restricted IP = 16142 using centers : 71 35 34 13 
In iteration 3 of HessHeuristic, objective value of incumbent is = 16142
  UB from restricted IP = 47576 using centers : 27 18 45 20 
  UB from restricted IP = 21287.9 using centers : 66 31 73 13 
  UB from restricted IP = 19884.2 using centers : 35 31 15 13 
  UB from restricted IP = 19716.1 using centers : 35 76 15 13 
In iteration 4 of HessHeuristic, objective value of incumbent is = 16142
  UB from restricted IP = 68241.3 using centers : 2 71 6 65 
  UB from restricted IP = 18440.1 using centers : 34 58 59 66 
  UB from restricted IP = 17008 using centers : 34 58 13 66 
In iteration 5 of HessHeuristic, objective value of incumbent is = 16142
  UB from restricted IP = 101361 using centers : 17 40 28 58 
  UB from restricted IP = 21962.6 using centers : 60 39 10 38 
  UB from restricted IP = 18376 using centers : 7 39 40 13 
  UB from restricted IP = 17488.6 using centers : 35 39 26 13 
  UB from restricted IP = 16576.7 using centers : 35 71 26 13 
  UB from restricted IP = 16142 using centers : 35 71 34 13 
In iteration 6 of HessHeuristic, objective value of incumbent is = 16142
  UB from restricted IP = 55286.9 using centers : 45 2 55 38 
  UB from restricted IP = 17254.6 using centers : 6 34 66 13 
In iteration 7 of HessHeuristic, objective value of incumbent is = 16142
  UB from restricted IP = 29219.2 using centers : 43 56 19 62 
  UB from restricted IP = 17254.6 using centers : 6 66 34 13 
In iteration 8 of HessHeuristic, objective value of incumbent is = 16142
  UB from restricted IP = 64062.1 using centers : 48 44 45 51 
  UB from restricted IP = 18332.7 using centers : 7 38 71 34 
  UB from restricted IP = 16142 using centers : 35 13 71 34 
In iteration 9 of HessHeuristic, objective value of incumbent is = 16142
UB at end of HessHeuristic = 16142
UB of heuristicSolution = 16142
Best solution after 10 of HessHeuristic is 16142.04

Beginning LOCAL SEARCH with UB = 16142

Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 82
  checking neighbors of node 13
  checking neighbors of node 34
  checking neighbors of node 35
  checking neighbors of node 71
UB at end of local search heuristic = 16142
UB of heuristicSolution = 16142
Best solution after local search is 16142.04
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 82
Optimize a model with 738 rows, 1944 columns and 6402 nonzeros
Variable types: 1616 continuous, 328 integer (328 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+05]
  Objective range  [2e+01, 4e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

MIP start produced solution with objective 16142 (0.00s)
Loaded MIP start with objective 16142

Presolve removed 48 rows and 244 columns
Presolve time: 0.01s
Presolved: 690 rows, 1700 columns, 5685 nonzeros
Variable types: 1396 continuous, 304 integer (304 binary)

Root relaxation: objective 1.608771e+04, 159 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0     cutoff    0      16142.0381 16142.0381  0.00%     -    0s

Explored 0 nodes (160 simplex iterations) in 0.02 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 16142 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.614203807300e+04, best bound 1.614203807300e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 16142 using centers : 13 34 35 71 
UB at end of ContiguityHeuristic = 16142
UB of (contiguous) heuristicSolution = 16142

Number of variables fixed to zero = 6620
Number of variables fixed to one  = 0
Number of variables not fixed     = 104
Number of centers left            = 4
Percentage of vars fixed = 0.98
Academic license - for non-commercial use only
Build hess : created 104 variables
Optimize a model with 429 rows, 186 columns and 666 nonzeros
Variable types: 82 continuous, 104 integer (104 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [2e+01, 1e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]

Loaded MIP start with objective 16142

Presolve removed 424 rows and 163 columns
Presolve time: 0.00s
Presolved: 5 rows, 23 columns, 42 nonzeros
Variable types: 0 continuous, 23 integer (19 binary)

Root relaxation: objective 1.608771e+04, 3 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0     cutoff    0      16142.0381 16142.0381  0.00%     -    0s

Explored 0 nodes (3 simplex iterations) in 0.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 16142 

Optimal solution found (tolerance 0.00e+00)
Best objective 1.614203807300e+04, best bound 1.614203807300e+04, gap 0.0000%
IP duration time: 0.000683 seconds
Total time elapsed: 0.494403 seconds
Number of callbacks: 1
Time in callbacks: 0.000020 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running MT'
Running MT
+ /home/lykhovyd/progs/districting/districting myconfig.txt MT /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MT.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/MT/counties/graph/MT.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/MT/counties/graph/MT_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/MT/counties/graph/MT.population
state[2]        = MT
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/MT.ralg_hot
nr_comp = 1
graph: 56 nodes, 138 edges (read)
Model input: L = 984468, U = 994362, k = 1.
Graph is connected.
Model input: total population = 989415
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 5.66900436980948e+04, norm = 1.41424515403759e-02, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 5.66900477634086e+04, norm = 7.07122577018797e-03, diff = 1.42500000000000e+00
iter = 3, step = 1.14000000000000e+00, func = 5.66900497439930e+04, norm = 3.53561288509399e-03, diff = 5.70000000000000e-01
iter = 4, step = 1.14000000000000e+00, func = 5.66900497787081e+04, norm = 1.76780644254699e-03, diff = 2.85000000000000e-01
iter = 5, step = 1.14000000000000e+00, func = 5.66900507516426e+04, norm = 8.83903221273496e-04, diff = 1.42500000000000e-01
iter = 6, step = 1.08300000000000e+00, func = 5.66900505344453e+04, norm = 4.41951610636749e-04, diff = 3.56250000000000e-02
iter = 7, step = 1.08300000000000e+00, func = 5.66900507642382e+04, norm = 2.20975805318374e-04, diff = 3.38437499999999e-02
iter = 8, step = 1.02885000000000e+00, func = 5.66900507139328e+04, norm = 1.10487902659187e-04, diff = 8.46093749999994e-03
iter = 9, step = 1.02885000000000e+00, func = 5.66900507672297e+04, norm = 5.52439513295933e-05, diff = 8.03789062500000e-03
iter = 10, step = 9.77407500000000e-01, func = 5.66900507565611e+04, norm = 2.76219756647967e-05, diff = 2.00947265625002e-03
iter = 11, step = 9.77407500000000e-01, func = 5.66900507679401e+04, norm = 1.38109878323982e-05, diff = 1.90899902343746e-03
iter = 12, step = 9.28537125000000e-01, func = 5.66900507666852e+04, norm = 6.90549391619932e-06, diff = 4.77249755859394e-04
iter = 13, step = 9.28537125000000e-01, func = 5.66900507681088e+04, norm = 3.45274695809943e-06, diff = 4.53387268066409e-04
iter = 14, step = 8.82110268750000e-01, func = 5.66900507688926e+04, norm = 7.07087228220431e-03, diff = 1.13346817016580e-04
iter = 15, step = 8.38004755312500e-01, func = 5.66900476504631e+04, norm = 7.07087238652535e-03, diff = 4.41055144431186e-01
iter = 16, step = 1.00560570637500e+00, func = 5.66900494434687e+04, norm = 3.53543619326267e-03, diff = 6.28503580814441e-01
iter = 17, step = 1.00560570637500e+00, func = 5.66900503169041e+04, norm = 1.76771809663134e-03, diff = 2.51401432325776e-01
iter = 18, step = 1.00560570637500e+00, func = 5.66900503322823e+04, norm = 8.83859048315668e-04, diff = 1.25700716162888e-01
iter = 19, step = 1.00560570637500e+00, func = 5.66900507613110e+04, norm = 4.41929524157834e-04, diff = 6.28503580814441e-02
iter = 20, step = 9.55325421056250e-01, func = 5.66900506655875e+04, norm = 2.20964762078917e-04, diff = 1.57125895203610e-02
iter = 21, step = 9.55325421056250e-01, func = 5.66900507668661e+04, norm = 1.10482381039459e-04, diff = 1.49269600443430e-02
iter = 22, step = 9.07559150003437e-01, func = 5.66900507447476e+04, norm = 5.52411905197293e-05, diff = 3.73174001108574e-03
iter = 23, step = 9.07559150003437e-01, func = 5.66900507681854e+04, norm = 2.76205952598646e-05, diff = 3.54515301053145e-03
iter = 24, step = 8.62181192503265e-01, func = 5.66900507635480e+04, norm = 1.38102976299323e-05, diff = 8.86288252632864e-04
iter = 25, step = 8.62181192503265e-01, func = 5.66900507684988e+04, norm = 6.90514881496616e-06, diff = 8.41973840001220e-04
iter = 26, step = 8.19072132878102e-01, func = 5.66900507680131e+04, norm = 3.45257440748308e-06, diff = 2.10493460000305e-04
iter = 27, step = 8.19072132878102e-01, func = 5.66900507685732e+04, norm = 1.72628720374154e-06, diff = 1.99968787000290e-04
iter = 28, step = 7.78118526234197e-01, func = 5.66900507689104e+04, norm = 9.65062459087711e-07, diff = 4.99921967500725e-05
iter = 29, step = 7.39212599922487e-01, func = 5.66900507686650e+04, norm = 1.09183806681770e-06, diff = 6.39495287607434e-05
iter = 30, step = 7.39212599922487e-01, func = 5.66900507689317e+04, norm = 5.45919033408848e-07, diff = 6.07520523227063e-05
iter = 31, step = 7.02251969926363e-01, func = 5.66900507689675e+04, norm = 2.72959516704424e-07, diff = 1.51880130806766e-05
iter = 32, step = 6.67139371430044e-01, func = 5.66900507689546e+04, norm = 3.53858975599028e-07, diff = 7.21430621332137e-06
iter = 33, step = 6.33782402858542e-01, func = 5.66900507689254e+04, norm = 3.60631368197472e-07, diff = 1.70909318610479e-05
iter = 34, step = 6.33782402858542e-01, func = 5.66900507689605e+04, norm = 1.80315684098736e-07, diff = 1.62363852679955e-05
iter = 35, step = 6.02093282715615e-01, func = 5.66900507689816e+04, norm = 8.10357627051223e-08, diff = 4.05909631699888e-06
iter = 36, step = 5.71988618579834e-01, func = 5.66900507689916e+04, norm = 8.97382908615809e-08, diff = 4.18747965885345e-06
iter = 37, step = 5.43389187650842e-01, func = 5.66900507689956e+04, norm = 4.60735148478562e-08, diff = 1.98905283795539e-06
iter = 38, step = 5.16219728268300e-01, func = 5.66900507689925e+04, norm = 3.23725413450072e-08, diff = 1.74255104738660e-06
iter = 39, step = 4.90408741854885e-01, func = 5.66900507689904e+04, norm = 2.26171854406245e-08, diff = 1.01736275446058e-06
iter = 40, step = 4.90408741854885e-01, func = 5.66900507689976e+04, norm = 1.61103282460064e-08, diff = 1.47617633172270e-06
iter = 41, step = 4.65888304762141e-01, func = 5.66900507689989e+04, norm = 1.12952265253788e-08, diff = 4.99029806768637e-07
iter = 42, step = 4.42593889524034e-01, func = 5.66900507689984e+04, norm = 8.05277934242989e-09, diff = 3.45140229057573e-07
iter = 43, step = 4.20464195047832e-01, func = 5.66900507689985e+04, norm = 5.64719505889741e-09, diff = 2.27014775395778e-07
iter = 44, step = 4.20464195047832e-01, func = 5.66900507689996e+04, norm = 4.02631512405708e-09, diff = 3.10275039434809e-07
iter = 45, step = 3.99440985295441e-01, func = 5.66900507689994e+04, norm = 2.82358445958208e-09, diff = 1.08050446465331e-07
iter = 46, step = 3.79468936030669e-01, func = 5.66900507689998e+04, norm = 2.01315523238538e-09, diff = 7.36184778293327e-08
iter = 47, step = 3.79468936030669e-01, func = 5.66900507689998e+04, norm = 1.73352428890859e-09, diff = 9.75648899492596e-08
iter = 48, step = 3.79468936030669e-01, func = 5.66900507690000e+04, norm = 1.00114771346559e-09, diff = 4.87824449746298e-08
iter = 49, step = 3.60495489229135e-01, func = 5.66900507690000e+04, norm = 7.53065979737790e-10, diff = 2.90215516876524e-08
iter = 50, step = 3.42470714767678e-01, func = 5.66900507690001e+04, norm = 4.79128954625753e-10, diff = 1.46783947921778e-08
iter = 51, step = 3.25347179029294e-01, func = 5.66900507689999e+04, norm = 3.72200551692622e-10, diff = 1.19722694537905e-08
iter = 52, step = 3.09079820077830e-01, func = 5.66900507690001e+04, norm = 2.38862254310089e-10, diff = 7.01708652632403e-09
iter = 53, step = 2.93625829073938e-01, func = 5.66900507690000e+04, norm = 2.23228174990155e-10, diff = 5.28722118262759e-09
iter = 54, step = 2.93625829073938e-01, func = 5.66900507690000e+04, norm = 1.11614087495078e-10, diff = 5.02286012349621e-09
iter = 55, step = 2.93625829073938e-01, func = 5.66900507690000e+04, norm = 1.06944596399676e-10, diff = 2.51143006174811e-09
iter = 56, step = 2.78944537620241e-01, func = 5.66900507690001e+04, norm = 1.09746410731523e-10, diff = 2.29814927017492e-09
iter = 57, step = 2.78944537620241e-01, func = 5.66900507690000e+04, norm = 5.48732053657613e-11, diff = 2.18324180666618e-09
iter = 58, step = 2.64997310739229e-01, func = 5.66900507690001e+04, norm = 2.97454275599933e-11, diff = 5.45810451666544e-10
iter = 59, step = 2.51747445202268e-01, func = 5.66900507690001e+04, norm = 2.45502184843687e-11, diff = 6.48464963248900e-10
iter = 60, step = 2.39160072942154e-01, func = 5.66900507690001e+04, norm = 1.43207453573976e-11, diff = 3.12256818347318e-10
iter = 61, step = 2.27202069295047e-01, func = 5.66900507690001e+04, norm = 1.21539511228592e-11, diff = 2.72046698978277e-10
iter = 62, step = 2.15841965830294e-01, func = 5.66900507690001e+04, norm = 7.14241646186263e-12, diff = 1.49385554499873e-10
iter = 63, step = 2.05049867538780e-01, func = 5.66900507690001e+04, norm = 6.07315013850995e-12, diff = 1.20693448690152e-10
iter = 64, step = 1.94797374161841e-01, func = 5.66900507690001e+04, norm = 4.66347958603504e-12, diff = 6.83945868365698e-11
iter = 65, step = 1.85057505453749e-01, func = 5.66900507690001e+04, norm = 2.33173979301752e-12, diff = 3.24874287473706e-11
B(grad) is 0, break
ralg done, iterations : 66, matrix resets : 0
f_optimal = 5.669005e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 56
  UB from restricted IP = 147319 using centers : 4 
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 0 of HessHeuristic, objective value of incumbent is = 56690.1
  UB from restricted IP = 147319 using centers : 4 
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 1 of HessHeuristic, objective value of incumbent is = 56690.1
  UB from restricted IP = 57485.6 using centers : 19 
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 2 of HessHeuristic, objective value of incumbent is = 56690.1
  UB from restricted IP = 142094 using centers : 11 
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 3 of HessHeuristic, objective value of incumbent is = 56690.1
  UB from restricted IP = 351273 using centers : 37 
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 4 of HessHeuristic, objective value of incumbent is = 56690.1
  UB from restricted IP = 107363 using centers : 22 
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 5 of HessHeuristic, objective value of incumbent is = 56690.1
  UB from restricted IP = 109660 using centers : 46 
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 6 of HessHeuristic, objective value of incumbent is = 56690.1
  UB from restricted IP = 80906.4 using centers : 54 
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 7 of HessHeuristic, objective value of incumbent is = 56690.1
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 8 of HessHeuristic, objective value of incumbent is = 56690.1
  UB from restricted IP = 84674.7 using centers : 2 
  UB from restricted IP = 56690.1 using centers : 8 
In iteration 9 of HessHeuristic, objective value of incumbent is = 56690.1
UB at end of HessHeuristic = 56690.1
UB of heuristicSolution = 56690.1
Best solution after 10 of HessHeuristic is 56690.05

Beginning LOCAL SEARCH with UB = 56690.1

Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 56
  checking neighbors of node 8
UB at end of local search heuristic = 56690.1
UB of heuristicSolution = 56690.1
Best solution after local search is 56690.05
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 56
Optimize a model with 168 rows, 332 columns and 1082 nonzeros
Variable types: 276 continuous, 56 integer (56 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+05]
  Objective range  [1e+01, 8e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+06]

Loaded MIP start with objective 56690.1

Presolve removed 58 rows and 64 columns
Presolve time: 0.00s
Presolved: 110 rows, 268 columns, 796 nonzeros
Variable types: 268 continuous, 0 integer (0 binary)

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 56690.1 

Optimal solution found (tolerance 1.00e-04)
Best objective 5.669005076900e+04, best bound 5.669005076900e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 56690.1 using centers : 8 
UB at end of ContiguityHeuristic = 56690.1
UB of (contiguous) heuristicSolution = 56690.1

Number of variables fixed to zero = 3080
Number of variables fixed to one  = 0
Number of variables not fixed     = 56
Number of centers left            = 1
Percentage of vars fixed = 0.98
Academic license - for non-commercial use only
Build hess : created 56 variables
Optimize a model with 280 rows, 112 columns and 393 nonzeros
Variable types: 56 continuous, 56 integer (56 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+06]
  Objective range  [1e+01, 8e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]

Loaded MIP start with objective 56690.1

Presolve removed 280 rows and 112 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 1: 56690.1 

Optimal solution found (tolerance 0.00e+00)
Best objective 5.669005076900e+04, best bound 5.669005076900e+04, gap 0.0000%
IP duration time: 0.000366 seconds
Total time elapsed: 0.034125 seconds
Number of callbacks: 1
Time in callbacks: 0.000010 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running NC'
Running NC
+ /home/lykhovyd/progs/districting/districting myconfig.txt NC /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NC.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/NC/counties/graph/NC.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/NC/counties/graph/NC_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/NC/counties/graph/NC.population
state[2]        = NC
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NC.ralg_hot
nr_comp = 1
graph: 100 nodes, 244 edges (read)
Model input: L = 729832, U = 737166, k = 13.
Graph is connected.
Model input: total population = 9535483
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.62636231297443e+04, norm = 1.20442927762596e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.62639748848062e+04, norm = 8.08377886415499e+00, diff = 8.77445536109093e-01
iter = 3, step = 8.57375000000000e-01, func = 1.62631726558710e+04, norm = 6.79904719046956e+00, diff = 6.95644452775405e-01
iter = 4, step = 8.14506250000000e-01, func = 1.62638150332053e+04, norm = 5.92084353595596e+00, diff = 6.02970417062991e-01
iter = 5, step = 7.73780937500000e-01, func = 1.62641501368809e+04, norm = 5.20682884657649e+00, diff = 6.26495328096864e-01
iter = 6, step = 7.35091890625000e-01, func = 1.62639636333536e+04, norm = 5.85259048948641e+00, diff = 5.86903069880483e-01
iter = 7, step = 6.98337296093750e-01, func = 1.62638863062657e+04, norm = 5.05524699775542e+00, diff = 5.43546841036404e-01
iter = 8, step = 6.63420431289062e-01, func = 1.62642171565858e+04, norm = 5.05265441495944e+00, diff = 4.85426845877435e-01
iter = 9, step = 6.30249409724609e-01, func = 1.62640420540550e+04, norm = 5.68911697089620e+00, diff = 4.83826933367810e-01
iter = 10, step = 5.98736939238379e-01, func = 1.62645682111086e+04, norm = 7.58107115180431e+00, diff = 4.42147757774574e-01
iter = 11, step = 5.68800092276460e-01, func = 1.62645877073341e+04, norm = 5.83394537663182e+00, diff = 3.79055243980376e-01
iter = 12, step = 5.40360087662637e-01, func = 1.62645109609013e+04, norm = 5.93128307415753e+00, diff = 4.67308933075367e-01
iter = 13, step = 5.13342083279505e-01, func = 1.62643842461599e+04, norm = 4.75633797528448e+00, diff = 3.90791037791877e-01
iter = 14, step = 4.87674979115529e-01, func = 1.62647273884087e+04, norm = 4.34784306223150e+00, diff = 3.25231542223583e-01
iter = 15, step = 4.63291230159753e-01, func = 1.62647750304104e+04, norm = 4.74124735914723e+00, diff = 3.22439361037323e-01
iter = 16, step = 4.40126668651765e-01, func = 1.62646620980794e+04, norm = 4.32964328658167e+00, diff = 3.13488225340863e-01
iter = 17, step = 4.18120335219177e-01, func = 1.62648362737486e+04, norm = 3.66420973535742e+00, diff = 2.95593620921841e-01
iter = 18, step = 3.97214318458218e-01, func = 1.62647049699222e+04, norm = 4.85253536564940e+00, diff = 2.96276682935763e-01
iter = 19, step = 3.77353602535307e-01, func = 1.62646580170712e+04, norm = 4.68787302316898e+00, diff = 2.66796613965619e-01
iter = 20, step = 3.58485922408542e-01, func = 1.62649560364418e+04, norm = 3.62986919049740e+00, diff = 2.50385150071989e-01
iter = 21, step = 3.40561626288115e-01, func = 1.62650607639583e+04, norm = 4.30170612282258e+00, diff = 2.51441241938077e-01
iter = 22, step = 3.23533544973709e-01, func = 1.62649722056834e+04, norm = 3.76687302653763e+00, diff = 2.17120719075033e-01
iter = 23, step = 3.07356867725023e-01, func = 1.62649680862369e+04, norm = 4.31142128832921e+00, diff = 2.16284354212918e-01
iter = 24, step = 2.91989024338772e-01, func = 1.62649795759630e+04, norm = 4.19983643258065e+00, diff = 2.05190979456113e-01
iter = 25, step = 2.77389573121834e-01, func = 1.62650819792514e+04, norm = 4.29941160381499e+00, diff = 1.91457463189546e-01
iter = 26, step = 2.63520094465742e-01, func = 1.62652299045538e+04, norm = 3.27935996660971e+00, diff = 1.81057995234264e-01
iter = 27, step = 2.50344089742455e-01, func = 1.62650977259472e+04, norm = 4.12517679701090e+00, diff = 1.86456111552960e-01
iter = 28, step = 2.37826885255332e-01, func = 1.62650511247994e+04, norm = 3.61360330359765e+00, diff = 1.57606490428829e-01
iter = 29, step = 2.25935540992565e-01, func = 1.62650837950511e+04, norm = 3.57738117317586e+00, diff = 1.70084197336047e-01
iter = 30, step = 2.14638763942937e-01, func = 1.62652586787197e+04, norm = 2.52414244992496e+00, diff = 1.41240583243371e-01
iter = 31, step = 2.03906825745790e-01, func = 1.62651724400714e+04, norm = 3.38526357717878e+00, diff = 1.44437605789177e-01
iter = 32, step = 1.93711484458501e-01, func = 1.62652563368645e+04, norm = 2.67202488681859e+00, diff = 1.15552650978068e-01
iter = 33, step = 1.84025910235576e-01, func = 1.62652798759747e+04, norm = 2.61635276889435e+00, diff = 1.18189989024254e-01
iter = 34, step = 1.74824614723797e-01, func = 1.62653209403918e+04, norm = 2.38114840726072e+00, diff = 1.03131049619444e-01
iter = 35, step = 1.66083383987607e-01, func = 1.62652575699197e+04, norm = 3.36213716462151e+00, diff = 9.87288499503695e-02
iter = 36, step = 1.57779214788227e-01, func = 1.62653218260955e+04, norm = 2.65845926163172e+00, diff = 9.70053059873688e-02
iter = 37, step = 1.49890254048815e-01, func = 1.62653025671912e+04, norm = 3.20730225488562e+00, diff = 7.83712817616218e-02
iter = 38, step = 1.42395741346375e-01, func = 1.62653188281227e+04, norm = 2.99352720733078e+00, diff = 9.06556484709787e-02
iter = 39, step = 1.35275954279056e-01, func = 1.62653163841384e+04, norm = 2.90653985051021e+00, diff = 9.23466415208316e-02
iter = 40, step = 1.35275954279056e-01, func = 1.62652914156061e+04, norm = 2.65968913413495e+00, diff = 1.48736051709886e-01
iter = 41, step = 1.28512156565103e-01, func = 1.62653437995483e+04, norm = 2.10775813959707e+00, diff = 6.72781770017626e-02
iter = 42, step = 1.22086548736848e-01, func = 1.62653637507961e+04, norm = 2.50334521568205e+00, diff = 6.64509212550560e-02
iter = 43, step = 1.15982221300006e-01, func = 1.62653425338382e+04, norm = 2.57544749976048e+00, diff = 6.62778813930034e-02
iter = 44, step = 1.10183110235005e-01, func = 1.62653923584782e+04, norm = 1.94338135949404e+00, diff = 6.57130877387041e-02
iter = 45, step = 1.04673954723255e-01, func = 1.62653766685913e+04, norm = 2.55501361904779e+00, diff = 6.37823011232861e-02
iter = 46, step = 9.94402569870922e-02, func = 1.62654046615651e+04, norm = 2.16559109803210e+00, diff = 4.63645597523676e-02
iter = 47, step = 9.44682441377376e-02, func = 1.62654214533890e+04, norm = 1.52670088262969e+00, diff = 5.57016753904738e-02
iter = 48, step = 8.97448319308507e-02, func = 1.62653939214087e+04, norm = 2.12942234258865e+00, diff = 4.90554214699666e-02
iter = 49, step = 8.52575903343082e-02, func = 1.62654228887180e+04, norm = 1.47441514075564e+00, diff = 4.58493800051344e-02
iter = 50, step = 8.09947108175928e-02, func = 1.62654231476439e+04, norm = 1.80538574163588e+00, diff = 3.24885809363633e-02
iter = 51, step = 7.69449752767131e-02, func = 1.62654326896732e+04, norm = 1.59005103839468e+00, diff = 3.89985533053849e-02
iter = 52, step = 7.30977265128775e-02, func = 1.62654341639533e+04, norm = 1.57691575662548e+00, diff = 3.66005384243156e-02
iter = 53, step = 6.94428401872336e-02, func = 1.62654203586356e+04, norm = 1.83298869434650e+00, diff = 3.28211864919196e-02
iter = 54, step = 6.59706981778719e-02, func = 1.62654382764060e+04, norm = 1.41666382468119e+00, diff = 3.19407789499576e-02
iter = 55, step = 6.26721632689783e-02, func = 1.62654413409059e+04, norm = 1.45365737137295e+00, diff = 2.79683767741438e-02
iter = 56, step = 5.95385551055294e-02, func = 1.62654482026826e+04, norm = 1.66107199345474e+00, diff = 2.91191217755242e-02
iter = 57, step = 5.65616273502529e-02, func = 1.62654478133036e+04, norm = 1.58467272911630e+00, diff = 3.04691695871969e-02
iter = 58, step = 5.37335459827403e-02, func = 1.62654509034041e+04, norm = 1.69114040669837e+00, diff = 2.47871690111165e-02
iter = 59, step = 5.10468686836033e-02, func = 1.62654649529088e+04, norm = 1.63702039945846e+00, diff = 2.09342885534096e-02
iter = 60, step = 4.84945252494231e-02, func = 1.62654511246013e+04, norm = 1.36766244558579e+00, diff = 1.99632578573973e-02
iter = 61, step = 4.84945252494231e-02, func = 1.62654525073484e+04, norm = 1.21507741264053e+00, diff = 3.93865919011998e-02
iter = 62, step = 4.60697989869519e-02, func = 1.62654571938888e+04, norm = 1.18969494628874e+00, diff = 1.71561049423803e-02
iter = 63, step = 4.37663090376043e-02, func = 1.62654590058686e+04, norm = 1.27055064150358e+00, diff = 1.66433279344714e-02
iter = 64, step = 4.15779935857241e-02, func = 1.62654696093077e+04, norm = 1.95385235927104e+00, diff = 1.64817317050985e-02
iter = 65, step = 3.94990939064379e-02, func = 1.62654653901133e+04, norm = 1.38071826696688e+00, diff = 2.36856762166279e-02
iter = 66, step = 3.75241392111160e-02, func = 1.62654670903102e+04, norm = 1.33265874762428e+00, diff = 1.73858911726832e-02
iter = 67, step = 3.56479322505602e-02, func = 1.62654725323722e+04, norm = 9.50346822471943e-01, diff = 1.25081771676683e-02
iter = 68, step = 3.38655356380322e-02, func = 1.62654694556265e+04, norm = 1.27530561214130e+00, diff = 1.40766182582177e-02
iter = 69, step = 3.21722588561306e-02, func = 1.62654701403614e+04, norm = 1.11098591718954e+00, diff = 1.40926599166559e-02
iter = 70, step = 3.05636459133241e-02, func = 1.62654741749746e+04, norm = 9.27034978010810e-01, diff = 1.27661199640607e-02
iter = 71, step = 2.90354636176579e-02, func = 1.62654791591179e+04, norm = 7.17454824956282e-01, diff = 1.02361275662088e-02
iter = 72, step = 2.75836904367750e-02, func = 1.62654783652895e+04, norm = 9.79144353035418e-01, diff = 1.15219583336809e-02
iter = 73, step = 2.62045059149362e-02, func = 1.62654773799136e+04, norm = 1.00534647523215e+00, diff = 1.03914916145107e-02
iter = 74, step = 2.48942806191894e-02, func = 1.62654820168439e+04, norm = 8.82114393483556e-01, diff = 8.97498706166579e-03
iter = 75, step = 2.36495665882299e-02, func = 1.62654802158866e+04, norm = 1.03899615890316e+00, diff = 1.10108155862285e-02
iter = 76, step = 2.24670882588184e-02, func = 1.62654838872498e+04, norm = 8.36850435454388e-01, diff = 8.84095174580565e-03
iter = 77, step = 2.13437338458775e-02, func = 1.62654833590315e+04, norm = 1.00428877238237e+00, diff = 8.11563609740519e-03
iter = 78, step = 2.02765471535836e-02, func = 1.62654854985000e+04, norm = 7.37232845957908e-01, diff = 7.42792227577011e-03
iter = 79, step = 1.92627197959044e-02, func = 1.62654844440606e+04, norm = 7.94885457229014e-01, diff = 6.98146551975666e-03
iter = 80, step = 1.82995838061092e-02, func = 1.62654837769208e+04, norm = 9.11254109930704e-01, diff = 7.47357254902502e-03
iter = 81, step = 1.73846046158038e-02, func = 1.62654863480734e+04, norm = 9.37635912103514e-01, diff = 5.55970818180945e-03
iter = 82, step = 1.65153743850136e-02, func = 1.62654883198297e+04, norm = 6.68678383759479e-01, diff = 6.05183460555974e-03
iter = 83, step = 1.56896056657629e-02, func = 1.62654861506270e+04, norm = 9.33520828404092e-01, diff = 6.82878192184511e-03
iter = 84, step = 1.49051253824747e-02, func = 1.62654870635612e+04, norm = 7.96927093960151e-01, diff = 5.24439205818117e-03
iter = 85, step = 1.41598691133510e-02, func = 1.62654886441131e+04, norm = 6.22931754961799e-01, diff = 5.40653385416991e-03
iter = 86, step = 1.34518756576835e-02, func = 1.62654890288669e+04, norm = 6.92939232756036e-01, diff = 5.25329914919819e-03
iter = 87, step = 1.27792818747993e-02, func = 1.62654887504368e+04, norm = 6.73199357463382e-01, diff = 4.05903989929596e-03
iter = 88, step = 1.21403177810593e-02, func = 1.62654896508714e+04, norm = 6.57317618318067e-01, diff = 5.79029508170990e-03
iter = 89, step = 1.15333018920064e-02, func = 1.62654900328467e+04, norm = 5.50316303793466e-01, diff = 4.53798147444753e-03
iter = 90, step = 1.09566367974060e-02, func = 1.62654901286090e+04, norm = 5.77524572693665e-01, diff = 4.43678960775653e-03
iter = 91, step = 1.04088049575357e-02, func = 1.62654898899437e+04, norm = 7.44757633739296e-01, diff = 3.40293609695814e-03
iter = 92, step = 9.88836470965895e-03, func = 1.62654903764065e+04, norm = 6.55100638061090e-01, diff = 3.07394040346897e-03
iter = 93, step = 9.39394647417600e-03, func = 1.62654905765840e+04, norm = 6.38777876422861e-01, diff = 3.40598704515967e-03
iter = 94, step = 8.92424915046720e-03, func = 1.62654910050831e+04, norm = 7.44039384894701e-01, diff = 3.39374707839315e-03
iter = 95, step = 8.47803669294384e-03, func = 1.62654917759735e+04, norm = 6.03628328313940e-01, diff = 2.54934421010271e-03
iter = 96, step = 8.05413485829665e-03, func = 1.62654916140557e+04, norm = 6.04494947172695e-01, diff = 2.81398186029387e-03
iter = 97, step = 7.65142811538181e-03, func = 1.62654919556348e+04, norm = 7.35867704096618e-01, diff = 2.92552489752285e-03
iter = 98, step = 7.26885670961272e-03, func = 1.62654920268946e+04, norm = 6.81208999359471e-01, diff = 3.26601363079321e-03
iter = 99, step = 6.90541387413209e-03, func = 1.62654920236309e+04, norm = 5.13084412107441e-01, diff = 3.55622176537635e-03
iter = 100, step = 6.56014318042548e-03, func = 1.62654921364213e+04, norm = 4.45959187455573e-01, diff = 2.99252562580127e-03
iter = 101, step = 6.23213602140421e-03, func = 1.62654924039270e+04, norm = 4.19042353020793e-01, diff = 2.44246409988580e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.626551e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 13, while k = 13 and n = 100
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 4.03652e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 10000
Number of centers left            = 100
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 10000 variables
Optimize a model with 10301 rows, 10100 columns and 40400 nonzeros
Variable types: 100 continuous, 10000 integer (10000 binary)
Coefficient statistics:
  Matrix range     [1e+00, 9e+05]
  Objective range  [1e+00, 2e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+01]
Presolve removed 0 rows and 202 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.006435 seconds
Total time elapsed: 0.126183 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running ND'
Running ND
+ /home/lykhovyd/progs/districting/districting myconfig.txt ND /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/ND.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/ND/counties/graph/ND.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/ND/counties/graph/ND_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/ND/counties/graph/ND.population
state[2]        = ND
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/ND.ralg_hot
nr_comp = 1
graph: 53 nodes, 132 edges (read)
Model input: L = 669229, U = 675953, k = 1.
Graph is connected.
Model input: total population = 672591
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.12454474736852e+04, norm = 1.41386494809025e-02, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 2.12454515385269e+04, norm = 7.06932474045124e-03, diff = 1.42500000000000e+00
iter = 3, step = 1.14000000000000e+00, func = 2.12454535179579e+04, norm = 3.53466237022562e-03, diff = 5.70000000000000e-01
iter = 4, step = 1.14000000000000e+00, func = 2.12454535532845e+04, norm = 1.76733118511281e-03, diff = 2.85000000000000e-01
iter = 5, step = 1.14000000000000e+00, func = 2.12454545253367e+04, norm = 8.83665592556406e-04, diff = 1.42500000000000e-01
iter = 6, step = 1.08300000000000e+00, func = 2.12454543088186e+04, norm = 4.41832796278203e-04, diff = 3.56250000000000e-02
iter = 7, step = 1.08300000000000e+00, func = 2.12454545379289e+04, norm = 2.20916398139102e-04, diff = 3.38437500000000e-02
iter = 8, step = 1.02885000000000e+00, func = 2.12454544882579e+04, norm = 1.10458199069551e-04, diff = 8.46093750000000e-03
iter = 9, step = 1.02885000000000e+00, func = 2.12454545409196e+04, norm = 5.52290995347748e-05, diff = 8.03789062499991e-03
iter = 10, step = 9.77407500000000e-01, func = 2.12454545308748e+04, norm = 2.76145497673875e-05, diff = 2.00947265624997e-03
iter = 11, step = 9.77407500000000e-01, func = 2.12454545416298e+04, norm = 1.38072748836934e-05, diff = 1.90899902343736e-03
iter = 12, step = 9.28537125000000e-01, func = 2.12454545409963e+04, norm = 6.90363744184712e-06, diff = 4.77249755859394e-04
iter = 13, step = 9.28537125000000e-01, func = 2.12454545417985e+04, norm = 3.45181872092304e-06, diff = 4.53387268066385e-04
iter = 14, step = 9.28537125000000e-01, func = 2.12454545425988e+04, norm = 1.72590936046255e-06, diff = 2.26693634033265e-04
iter = 15, step = 9.28537125000000e-01, func = 2.12454545425997e+04, norm = 8.62954680231217e-07, diff = 1.13346817016621e-04
iter = 16, step = 9.28537125000000e-01, func = 2.12454545429995e+04, norm = 4.31477340115909e-07, diff = 5.66734085083859e-05
iter = 17, step = 8.82110268750000e-01, func = 2.12454545429003e+04, norm = 2.15738670057919e-07, diff = 1.41683521270917e-05
iter = 18, step = 1.05853232250000e+00, func = 2.12454545429569e+04, norm = 1.07869335029802e-07, diff = 2.01899017812328e-05
iter = 19, step = 1.05853232250000e+00, func = 2.12454545429859e+04, norm = 5.39346675144098e-08, diff = 8.07596071250017e-06
iter = 20, step = 1.00560570637500e+00, func = 2.12454545429998e+04, norm = 2.69673337566309e-08, diff = 2.01899017808529e-06
iter = 21, step = 9.55325421056250e-01, func = 2.12454545429934e+04, norm = 1.34836668787984e-08, diff = 9.59020334872680e-07
iter = 22, step = 1.14639050526750e+00, func = 2.12454545429969e+04, norm = 6.74183343978810e-09, diff = 1.36660397721723e-06
iter = 23, step = 1.14639050526750e+00, func = 2.12454545429992e+04, norm = 3.37091672079766e-09, diff = 5.46641602951754e-07
iter = 24, step = 1.08907098000412e+00, func = 2.12454545429998e+04, norm = 1.68545836136810e-09, diff = 1.36660727485038e-07
iter = 25, step = 1.03461743100392e+00, func = 2.12454545429997e+04, norm = 8.42729180655937e-10, diff = 6.49145148312280e-08
iter = 26, step = 9.82886559453722e-01, func = 2.12454545429999e+04, norm = 7.06897148376428e-03, diff = 3.08637705071613e-08
iter = 27, step = 9.33742231481036e-01, func = 2.12454510690015e+04, norm = 7.06897148376429e-03, diff = 4.91443279726862e-01
iter = 28, step = 1.12049067777724e+00, func = 2.12454530665505e+04, norm = 3.53448574188215e-03, diff = 7.00306673610778e-01
iter = 29, step = 1.12049067777724e+00, func = 2.12454540392703e+04, norm = 1.76724287094107e-03, diff = 2.80122669444311e-01
iter = 30, step = 1.12049067777724e+00, func = 2.12454540566401e+04, norm = 8.83621435470537e-04, diff = 1.40061334722156e-01
iter = 31, step = 1.12049067777724e+00, func = 2.12454545343151e+04, norm = 4.41810717735268e-04, diff = 7.00306673610778e-02
iter = 32, step = 1.06446614388838e+00, func = 2.12454544279237e+04, norm = 2.20905358867634e-04, diff = 1.75076668402695e-02
iter = 33, step = 1.06446614388838e+00, func = 2.12454545405031e+04, norm = 1.10452679433817e-04, diff = 1.66322834982560e-02
iter = 34, step = 1.01124283669396e+00, func = 2.12454545161036e+04, norm = 5.52263397169086e-05, diff = 4.15807087456399e-03
iter = 35, step = 1.01124283669396e+00, func = 2.12454545419728e+04, norm = 2.76131698584543e-05, diff = 3.95016733083579e-03
iter = 36, step = 9.60680694859264e-01, func = 2.12454545370463e+04, norm = 1.38065849292271e-05, diff = 9.87541832708948e-04
iter = 37, step = 9.60680694859264e-01, func = 2.12454545423218e+04, norm = 6.90329246461357e-06, diff = 9.38164741073501e-04
iter = 38, step = 9.12646660116301e-01, func = 2.12454545420202e+04, norm = 3.45164623230678e-06, diff = 2.34541185268375e-04
iter = 39, step = 9.12646660116301e-01, func = 2.12454545424047e+04, norm = 1.72582311615339e-06, diff = 2.22814126004957e-04
iter = 40, step = 9.12646660116301e-01, func = 2.12454545428077e+04, norm = 8.62911558076696e-07, diff = 1.11407063002478e-04
iter = 41, step = 8.67014327110486e-01, func = 2.12454545429954e+04, norm = 4.31455779038348e-07, diff = 2.78517657506196e-05
iter = 42, step = 8.23663610754961e-01, func = 2.12454545429111e+04, norm = 2.15727889519174e-07, diff = 1.32295887315443e-05
iter = 43, step = 9.88396332905953e-01, func = 2.12454545429556e+04, norm = 1.07863944759587e-07, diff = 1.88521639424506e-05
iter = 44, step = 9.88396332905953e-01, func = 2.12454545429910e+04, norm = 5.39319723797935e-08, diff = 7.54086557698025e-06
iter = 45, step = 9.38976516260656e-01, func = 2.12454545429956e+04, norm = 2.69659861898967e-08, diff = 1.88521639424506e-06
iter = 46, step = 8.92027690447623e-01, func = 2.12454545429980e+04, norm = 1.34829930949484e-08, diff = 8.95477787266404e-07
iter = 47, step = 8.47426305925242e-01, func = 2.12454545429990e+04, norm = 6.74149654747419e-09, diff = 4.25351948951542e-07
iter = 48, step = 8.05054990628980e-01, func = 2.12454545429996e+04, norm = 3.37074827373709e-09, diff = 2.02042175751982e-07
iter = 49, step = 7.64802241097531e-01, func = 2.12454545429997e+04, norm = 1.68537413686855e-09, diff = 9.59700334821916e-08
iter = 50, step = 7.26562129042654e-01, func = 2.12454545429999e+04, norm = 4.71081100716979e-10, diff = 4.55857659040410e-08
iter = 51, step = 6.90234022590521e-01, func = 2.12454545429999e+04, norm = 4.02499804266136e-10, diff = 2.45516697751217e-08
iter = 52, step = 6.55722321460995e-01, func = 2.12454545429998e+04, norm = 2.24388413357132e-10, diff = 1.60591963113645e-08
iter = 53, step = 6.55722321460995e-01, func = 2.12454545429999e+04, norm = 1.98670698757498e-10, diff = 2.33790620742942e-08
iter = 54, step = 6.22936205387945e-01, func = 2.12454545429999e+04, norm = 1.11827107630660e-10, diff = 7.13374545686533e-09
iter = 55, step = 6.22936205387945e-01, func = 2.12454545429999e+04, norm = 1.12772198403405e-10, diff = 1.12880008513588e-08
iter = 56, step = 6.22936205387945e-01, func = 2.12454545430000e+04, norm = 6.54072775454723e-11, diff = 5.64400042567938e-09
iter = 57, step = 5.91789395118548e-01, func = 2.12454545430000e+04, norm = 6.31800929076472e-11, diff = 2.85184394348510e-09
iter = 58, step = 5.62199925362621e-01, func = 2.12454545430000e+04, norm = 2.93435231048450e-11, diff = 1.35462587315542e-09
iter = 59, step = 5.34089929094490e-01, func = 2.12454545429999e+04, norm = 3.02390019845523e-11, diff = 1.29713239978459e-09
iter = 60, step = 5.34089929094490e-01, func = 2.12454545430000e+04, norm = 1.51195009922761e-11, diff = 1.23227577979536e-09
iter = 61, step = 5.34089929094490e-01, func = 2.12454545430000e+04, norm = 1.26208969001622e-11, diff = 6.16137889897681e-10
iter = 62, step = 5.07385432639765e-01, func = 2.12454545430000e+04, norm = 1.30040810227942e-11, diff = 4.97946291258849e-10
iter = 63, step = 6.08862519167718e-01, func = 2.12454545429999e+04, norm = 6.50204051139711e-12, diff = 7.09573465043860e-10
iter = 64, step = 6.08862519167718e-01, func = 2.12454545430000e+04, norm = 3.84232512085177e-12, diff = 2.83829386017544e-10
iter = 65, step = 6.08862519167718e-01, func = 2.12454545430000e+04, norm = 4.14207597044844e-12, diff = 3.75737274473819e-10
iter = 66, step = 6.08862519167718e-01, func = 2.12454545430000e+04, norm = 1.89237177768240e-12, diff = 1.87868637236909e-10
B(grad) is 0, break
ralg done, iterations : 67, matrix resets : 0
f_optimal = 2.124545e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 53
  UB from restricted IP = 35417.5 using centers : 4 
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 0 of HessHeuristic, objective value of incumbent is = 21245.5
  UB from restricted IP = 37897.7 using centers : 29 
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 1 of HessHeuristic, objective value of incumbent is = 21245.5
  UB from restricted IP = 37923.7 using centers : 6 
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 2 of HessHeuristic, objective value of incumbent is = 21245.5
  UB from restricted IP = 81739.1 using centers : 14 
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 3 of HessHeuristic, objective value of incumbent is = 21245.5
  UB from restricted IP = 27834.4 using centers : 37 
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 4 of HessHeuristic, objective value of incumbent is = 21245.5
  UB from restricted IP = 26337 using centers : 47 
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 5 of HessHeuristic, objective value of incumbent is = 21245.5
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 6 of HessHeuristic, objective value of incumbent is = 21245.5
  UB from restricted IP = 31365 using centers : 19 
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 7 of HessHeuristic, objective value of incumbent is = 21245.5
  UB from restricted IP = 28989.9 using centers : 17 
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 8 of HessHeuristic, objective value of incumbent is = 21245.5
  UB from restricted IP = 100023 using centers : 18 
  UB from restricted IP = 21245.5 using centers : 12 
In iteration 9 of HessHeuristic, objective value of incumbent is = 21245.5
UB at end of HessHeuristic = 21245.5
UB of heuristicSolution = 21245.5
Best solution after 10 of HessHeuristic is 21245.45

Beginning LOCAL SEARCH with UB = 21245.5

Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 53
  checking neighbors of node 12
UB at end of local search heuristic = 21245.5
UB of heuristicSolution = 21245.5
Best solution after local search is 21245.45
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 53
Optimize a model with 159 rows, 317 columns and 1034 nonzeros
Variable types: 264 continuous, 53 integer (53 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+05]
  Objective range  [4e+00, 6e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

Loaded MIP start with objective 21245.5

Presolve removed 55 rows and 60 columns
Presolve time: 0.00s
Presolved: 104 rows, 257 columns, 764 nonzeros
Variable types: 257 continuous, 0 integer (0 binary)

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 21245.5 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.124545454300e+04, best bound 2.124545454300e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 21245.5 using centers : 12 
UB at end of ContiguityHeuristic = 21245.5
UB of (contiguous) heuristicSolution = 21245.5

Number of variables fixed to zero = 2756
Number of variables fixed to one  = 0
Number of variables not fixed     = 53
Number of centers left            = 1
Percentage of vars fixed = 0.98
Academic license - for non-commercial use only
Build hess : created 53 variables
Optimize a model with 265 rows, 106 columns and 372 nonzeros
Variable types: 53 continuous, 53 integer (53 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [4e+00, 6e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]

Loaded MIP start with objective 21245.5

Presolve removed 265 rows and 106 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 1: 21245.5 

Optimal solution found (tolerance 0.00e+00)
Best objective 2.124545454300e+04, best bound 2.124545454300e+04, gap 0.0000%
IP duration time: 0.000371 seconds
Total time elapsed: 0.033481 seconds
Number of callbacks: 1
Time in callbacks: 0.000009 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running NE'
Running NE
+ /home/lykhovyd/progs/districting/districting myconfig.txt NE /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NE.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/NE/counties/graph/NE.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/NE/counties/graph/NE_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/NE/counties/graph/NE.population
state[2]        = NE
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NE.ralg_hot
nr_comp = 1
graph: 93 nodes, 231 edges (read)
Model input: L = 605737, U = 611824, k = 3.
Graph is connected.
Model input: total population = 1826341
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.19639412147130e+04, norm = 1.00878926784143e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 2.19635207146334e+04, norm = 1.01364835062638e+00, diff = 4.92893050341382e-01
iter = 3, step = 9.02500000000000e-01, func = 2.19639434780864e+04, norm = 2.65059387495623e-01, diff = 5.25021395372510e-01
iter = 4, step = 8.57375000000000e-01, func = 2.19639039710847e+04, norm = 2.09410724881969e-01, diff = 8.78231591100766e-01
iter = 5, step = 8.14506250000000e-01, func = 2.19639463950017e+04, norm = 1.87242836181808e-01, diff = 1.87132599870108e-01
iter = 6, step = 7.73780937500000e-01, func = 2.19639536278294e+04, norm = 1.07780125235319e-01, diff = 4.05129232405351e-01
iter = 7, step = 7.35091890625000e-01, func = 2.19639516820652e+04, norm = 1.00399800628062e+00, diff = 5.58058574518144e-01
iter = 8, step = 6.98337296093750e-01, func = 2.19635863876837e+04, norm = 1.01009812454518e+00, diff = 3.70076491164588e-01
iter = 9, step = 8.38004755312500e-01, func = 2.19638056910506e+04, norm = 5.09865220843427e-01, diff = 6.98595569957433e-01
iter = 10, step = 8.38004755312500e-01, func = 2.19639133863939e+04, norm = 2.61289020405548e-01, diff = 3.75518401938521e-01
iter = 11, step = 7.96104517546875e-01, func = 2.19639572798302e+04, norm = 9.26763012774542e-02, diff = 2.38885231561421e-01
iter = 12, step = 7.56299291669531e-01, func = 2.19639401674660e+04, norm = 1.11856553486701e-01, diff = 5.16358511629540e-01
iter = 13, step = 7.18484327086054e-01, func = 2.19639610314890e+04, norm = 9.37312142476883e-02, diff = 2.99106830769049e-01
iter = 14, step = 6.82560110731751e-01, func = 2.19639590248049e+04, norm = 6.85264695189275e-02, diff = 3.04179426470042e-01
iter = 15, step = 6.48432105195164e-01, func = 2.19639656691173e+04, norm = 6.40034748121248e-02, diff = 3.48018839126646e-01
iter = 16, step = 6.16010499935406e-01, func = 2.19639676991045e+04, norm = 4.32585793157679e-02, diff = 3.07562407971708e-01
iter = 17, step = 5.85209974938635e-01, func = 2.19639518931457e+04, norm = 7.04359903021333e-02, diff = 3.36724248125739e-01
iter = 18, step = 5.85209974938635e-01, func = 2.19639657939677e+04, norm = 7.78373918051209e-02, diff = 5.31688942109028e-01
iter = 19, step = 5.55949476191704e-01, func = 2.19639637922202e+04, norm = 4.38491657228467e-02, diff = 3.51706252165444e-01
iter = 20, step = 5.28152002382118e-01, func = 2.19639623968457e+04, norm = 4.76430374812674e-02, diff = 3.23414131955362e-01
iter = 21, step = 5.28152002382118e-01, func = 2.19639637842488e+04, norm = 3.71421257862560e-02, diff = 4.81612231558735e-01
iter = 22, step = 5.01744402263012e-01, func = 2.19639591018958e+04, norm = 4.10675427575692e-02, diff = 2.48517042036816e-01
iter = 23, step = 5.01744402263012e-01, func = 2.19639672428817e+04, norm = 3.47252353633755e-02, diff = 5.19682157321143e-01
iter = 24, step = 4.76657182149862e-01, func = 2.19639716221258e+04, norm = 2.12073906492208e-02, diff = 9.10555760941938e-02
iter = 25, step = 4.52824323042369e-01, func = 2.19639715482750e+04, norm = 1.87101965172105e-02, diff = 1.89224745022663e-01
iter = 26, step = 4.30183106890250e-01, func = 2.19639733754024e+04, norm = 1.66786121392288e-02, diff = 1.86970955414586e-01
iter = 27, step = 4.08673951545738e-01, func = 2.19639704672612e+04, norm = 2.60118500153045e-02, diff = 1.81511529534500e-01
iter = 28, step = 3.88240253968451e-01, func = 2.19639722163555e+04, norm = 1.81271861393234e-02, diff = 1.60346277508838e-01
iter = 29, step = 3.68828241270028e-01, func = 2.19639728656619e+04, norm = 1.73269042720686e-02, diff = 9.52903692290597e-02
iter = 30, step = 3.68828241270028e-01, func = 2.19639722275054e+04, norm = 1.70454950809561e-02, diff = 2.28199130886469e-01
iter = 31, step = 3.50386829206527e-01, func = 2.19639720730026e+04, norm = 2.78459832807145e-02, diff = 7.42274903385103e-02
iter = 32, step = 3.32867487746200e-01, func = 2.19639741881989e+04, norm = 1.77438382662537e-02, diff = 8.69639764252890e-02
iter = 33, step = 3.16224113358890e-01, func = 2.19639733314889e+04, norm = 1.38191332225418e-02, diff = 9.76613172377317e-02
iter = 34, step = 3.16224113358890e-01, func = 2.19639738290653e+04, norm = 1.31973876184367e-02, diff = 9.34826100317086e-02
iter = 35, step = 3.00412907690946e-01, func = 2.19639735834099e+04, norm = 1.23700600785737e-02, diff = 7.55615035233954e-02
iter = 36, step = 2.85392262306399e-01, func = 2.19639738136527e+04, norm = 1.24575638066600e-02, diff = 1.05409616566662e-01
iter = 37, step = 2.85392262306399e-01, func = 2.19639743171748e+04, norm = 9.01963317065702e-03, diff = 4.18555630593353e-02
iter = 38, step = 2.71122649191079e-01, func = 2.19639746873859e+04, norm = 7.24130078088414e-03, diff = 5.15917660099429e-02
iter = 39, step = 2.57566516731525e-01, func = 2.19639747814511e+04, norm = 5.78449184497301e-03, diff = 6.47627381649279e-02
iter = 40, step = 2.44688190894948e-01, func = 2.19639746797027e+04, norm = 4.07037198688482e-03, diff = 2.73588984867706e-02
iter = 41, step = 2.32453781350201e-01, func = 2.19639746025679e+04, norm = 9.66576607923575e-03, diff = 4.66664509384743e-02
iter = 42, step = 2.32453781350201e-01, func = 2.19639749833353e+04, norm = 6.43880968135190e-03, diff = 3.93391109669122e-02
iter = 43, step = 2.20831092282691e-01, func = 2.19639749463914e+04, norm = 7.58893771134203e-03, diff = 4.64891960177326e-02
iter = 44, step = 2.09789537668556e-01, func = 2.19639752395146e+04, norm = 4.41853809475305e-03, diff = 3.99242961320022e-02
iter = 45, step = 1.99300060785129e-01, func = 2.19639752604041e+04, norm = 3.87846587173446e-03, diff = 1.53131403926722e-02
iter = 46, step = 1.89335057745872e-01, func = 2.19639751229548e+04, norm = 5.01722250336091e-03, diff = 2.92762659280868e-02
iter = 47, step = 1.79868304858578e-01, func = 2.19639750903612e+04, norm = 4.01036619556037e-03, diff = 1.10756687477460e-02
iter = 48, step = 1.70874889615650e-01, func = 2.19639752455728e+04, norm = 2.97620329739539e-03, diff = 1.99721515228713e-02
iter = 49, step = 1.62331145134867e-01, func = 2.19639753918032e+04, norm = 2.04465038986579e-03, diff = 9.22989391678966e-03
iter = 50, step = 1.54214587878124e-01, func = 2.19639754322847e+04, norm = 2.07552848336251e-03, diff = 6.71398453559932e-03
iter = 51, step = 1.46503858484218e-01, func = 2.19639753139624e+04, norm = 2.41138648151794e-03, diff = 5.24366131484366e-03
iter = 52, step = 1.46503858484218e-01, func = 2.19639753767960e+04, norm = 2.53888950288112e-03, diff = 1.21823783084069e-02
iter = 53, step = 1.46503858484218e-01, func = 2.19639754085607e+04, norm = 2.42999010897644e-03, diff = 1.21318133401275e-02
iter = 54, step = 1.39178665560007e-01, func = 2.19639753081015e+04, norm = 2.74890986014736e-03, diff = 3.85472410429140e-03
iter = 55, step = 1.39178665560007e-01, func = 2.19639754069835e+04, norm = 1.31700684906324e-03, diff = 7.63966158009085e-03
iter = 56, step = 1.39178665560007e-01, func = 2.19639753456539e+04, norm = 1.62899533286331e-03, diff = 6.98662878688487e-03
iter = 57, step = 1.67014398672008e-01, func = 2.19639754426198e+04, norm = 9.42481614762652e-04, diff = 8.54710991682826e-03
iter = 58, step = 1.58663678738408e-01, func = 2.19639754561523e+04, norm = 1.00821994741791e-03, diff = 3.52858569820339e-03
iter = 59, step = 1.58663678738408e-01, func = 2.19639754198748e+04, norm = 3.02930732678019e-03, diff = 7.67441333103155e-03
iter = 60, step = 1.50730494801487e-01, func = 2.19639755065665e+04, norm = 1.62422806856266e-03, diff = 4.04585227523134e-03
iter = 61, step = 1.43193970061413e-01, func = 2.19639754872880e+04, norm = 1.12529178360960e-03, diff = 1.82846403393764e-03
iter = 62, step = 1.36034271558342e-01, func = 2.19639755212911e+04, norm = 8.95548938251026e-04, diff = 4.89901184813924e-03
iter = 63, step = 1.36034271558342e-01, func = 2.19639754955044e+04, norm = 1.17248925308470e-03, diff = 4.24866889093812e-03
iter = 64, step = 1.29232557980425e-01, func = 2.19639755148000e+04, norm = 1.12081019761166e-03, diff = 2.16481868444838e-03
iter = 65, step = 1.22770930081404e-01, func = 2.19639755279501e+04, norm = 7.30938273456463e-04, diff = 1.59630802139896e-03
iter = 66, step = 1.16632383577334e-01, func = 2.19639755350557e+04, norm = 3.74017079907931e-04, diff = 1.48194968161716e-03
iter = 67, step = 1.10800764398467e-01, func = 2.19639755427756e+04, norm = 4.50648024873123e-04, diff = 1.85752907765538e-03
iter = 68, step = 1.05260726178544e-01, func = 2.19639755424517e+04, norm = 5.54334913847589e-04, diff = 1.06927317831484e-03
iter = 69, step = 9.99976898696164e-02, func = 2.19639755527377e+04, norm = 8.32830014857024e-04, diff = 5.83659442127057e-04
iter = 70, step = 9.49978053761355e-02, func = 2.19639755558024e+04, norm = 4.90124975830699e-04, diff = 1.06863657221347e-03
iter = 71, step = 9.02479151073288e-02, func = 2.19639755466203e+04, norm = 4.57616357970939e-04, diff = 1.18666714633452e-03
iter = 72, step = 8.57355193519623e-02, func = 2.19639755441490e+04, norm = 4.02869412848064e-04, diff = 1.69043178368942e-03
iter = 73, step = 8.57355193519623e-02, func = 2.19639755570721e+04, norm = 3.73235767063554e-04, diff = 4.97945615875449e-04
iter = 74, step = 8.14487433843642e-02, func = 2.19639755608664e+04, norm = 3.95421552870145e-04, diff = 1.14570217117260e-03
iter = 75, step = 7.73763062151460e-02, func = 2.19639755564392e+04, norm = 3.96938635107081e-04, diff = 8.68662500296217e-04
iter = 76, step = 7.73763062151460e-02, func = 2.19639755643697e+04, norm = 2.27878664130172e-04, diff = 1.45127041985280e-03
iter = 77, step = 7.35074909043887e-02, func = 2.19639755638697e+04, norm = 1.80884847378317e-04, diff = 4.62579870176495e-04
iter = 78, step = 6.98321163591692e-02, func = 2.19639755647373e+04, norm = 1.76766304125799e-04, diff = 3.53350883080658e-04
iter = 79, step = 6.63405105412108e-02, func = 2.19639755643699e+04, norm = 1.53783651781937e-04, diff = 1.98643522954972e-04
iter = 80, step = 6.30234850141502e-02, func = 2.19639755667869e+04, norm = 3.56641162481138e-04, diff = 6.89950960889661e-04
iter = 81, step = 5.98723107634427e-02, func = 2.19639755670959e+04, norm = 1.96133643847834e-04, diff = 4.11392046160748e-04
iter = 82, step = 5.68786952252706e-02, func = 2.19639755667603e+04, norm = 1.76230436421793e-04, diff = 2.24690214243324e-04
iter = 83, step = 5.40347604640071e-02, func = 2.19639755674365e+04, norm = 1.03706220680329e-04, diff = 2.85246731790876e-04
iter = 84, step = 5.40347604640071e-02, func = 2.19639755688724e+04, norm = 1.92667522913792e-04, diff = 2.07053708033381e-04
iter = 85, step = 5.13330224408067e-02, func = 2.19639755674459e+04, norm = 1.89439679685879e-04, diff = 8.49732967875443e-05
iter = 86, step = 4.87663713187664e-02, func = 2.19639755640565e+04, norm = 2.83575426773825e-04, diff = 1.17807586248161e-04
iter = 87, step = 4.87663713187664e-02, func = 2.19639755678502e+04, norm = 1.81437408151475e-04, diff = 1.91623139470854e-04
iter = 88, step = 4.63280527528280e-02, func = 2.19639755700945e+04, norm = 8.21967342862257e-05, diff = 5.97248328000131e-05
iter = 89, step = 4.40116501151866e-02, func = 2.19639755703949e+04, norm = 8.65979364136768e-05, diff = 7.35963942447607e-05
iter = 90, step = 4.18110676094273e-02, func = 2.19639755704981e+04, norm = 5.71193833233369e-05, diff = 2.66726449314724e-05
iter = 91, step = 3.97205142289559e-02, func = 2.19639755708523e+04, norm = 6.82888573163844e-05, diff = 7.31633119324639e-05
iter = 92, step = 3.77344885175081e-02, func = 2.19639755708648e+04, norm = 6.48158215565206e-05, diff = 3.37973376813720e-05
iter = 93, step = 3.58477640916327e-02, func = 2.19639755710834e+04, norm = 4.17056543693208e-05, diff = 5.82885970098007e-05
iter = 94, step = 3.40553758870511e-02, func = 2.19639755711885e+04, norm = 5.77673418981903e-05, diff = 3.51421132539047e-05
iter = 95, step = 3.23526070926985e-02, func = 2.19639755709141e+04, norm = 9.15639086131844e-05, diff = 2.34722798139822e-05
iter = 96, step = 3.07349767380636e-02, func = 2.19639755714465e+04, norm = 5.89732528427465e-05, diff = 3.30020819877163e-05
iter = 97, step = 2.91982279011604e-02, func = 2.19639755714857e+04, norm = 4.27127828737243e-05, diff = 4.18728473361943e-05
iter = 98, step = 2.77383165061024e-02, func = 2.19639755713621e+04, norm = 3.81973475504384e-05, diff = 1.18672747470104e-05
iter = 99, step = 2.77383165061024e-02, func = 2.19639755715468e+04, norm = 2.68876900762156e-05, diff = 4.10810987247218e-05
iter = 100, step = 2.63514006807973e-02, func = 2.19639755717078e+04, norm = 2.11886365507440e-05, diff = 1.26465568900554e-05
iter = 101, step = 2.50338306467574e-02, func = 2.19639755714371e+04, norm = 7.73753579018592e-05, diff = 1.97998951706991e-05
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.196398e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 3, while k = 3 and n = 93
  UB from restricted IP = 368140 using centers : 92 51 11 
  UB from restricted IP = 23773 using centers : 82 72 47 
  UB from restricted IP = 22112 using centers : 82 43 17 
In iteration 0 of HessHeuristic, objective value of incumbent is = 22112
  UB from restricted IP = 42026.7 using centers : 28 21 10 
  UB from restricted IP = 22112 using centers : 43 82 17 
In iteration 1 of HessHeuristic, objective value of incumbent is = 22112
  UB from restricted IP = 68746.4 using centers : 56 17 91 
  UB from restricted IP = 25444 using centers : 44 17 10 
  UB from restricted IP = 22796.5 using centers : 43 17 47 
  UB from restricted IP = 22112 using centers : 43 17 82 
In iteration 2 of HessHeuristic, objective value of incumbent is = 22112
  UB from restricted IP = 104400 using centers : 57 21 10 
  UB from restricted IP = 22112 using centers : 43 82 17 
In iteration 3 of HessHeuristic, objective value of incumbent is = 22112
  UB from restricted IP = 132419 using centers : 17 70 58 
  UB from restricted IP = 22112 using centers : 17 43 82 
In iteration 4 of HessHeuristic, objective value of incumbent is = 22112
  UB from restricted IP = 135936 using centers : 70 35 41 
  UB from restricted IP = 22112 using centers : 43 82 17 
In iteration 5 of HessHeuristic, objective value of incumbent is = 22112
  UB from restricted IP = 95484.8 using centers : 70 59 87 
  UB from restricted IP = 22112 using centers : 43 82 17 
In iteration 6 of HessHeuristic, objective value of incumbent is = 22112
  UB from restricted IP = 60291.6 using centers : 8 4 59 
  UB from restricted IP = 22796.5 using centers : 43 17 47 
  UB from restricted IP = 22112 using centers : 43 17 82 
In iteration 7 of HessHeuristic, objective value of incumbent is = 22112
  UB from restricted IP = 229064 using centers : 25 1 64 
  UB from restricted IP = 23206.4 using centers : 17 91 47 
  UB from restricted IP = 22796.5 using centers : 17 43 47 
  UB from restricted IP = 22112 using centers : 17 43 82 
In iteration 8 of HessHeuristic, objective value of incumbent is = 22112
  UB from restricted IP = 104492 using centers : 68 21 65 
  UB from restricted IP = 22551.9 using centers : 17 82 91 
  UB from restricted IP = 22112 using centers : 17 82 43 
In iteration 9 of HessHeuristic, objective value of incumbent is = 22112
UB at end of HessHeuristic = 22112
UB of heuristicSolution = 22112
Best solution after 10 of HessHeuristic is 22112.00

Beginning LOCAL SEARCH with UB = 22112

Academic license - for non-commercial use only
# centers = 3, while k = 3 and n = 93
  checking neighbors of node 17
  checking neighbors of node 43
  checking neighbors of node 82
UB at end of local search heuristic = 22112
UB of heuristicSolution = 22112
Best solution after local search is 22112.00
Academic license - for non-commercial use only
# centers = 3, while k = 3 and n = 93
Optimize a model with 651 rows, 1665 columns and 5487 nonzeros
Variable types: 1386 continuous, 279 integer (279 binary)
Coefficient statistics:
  Matrix range     [1e+00, 5e+05]
  Objective range  [2e+00, 5e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]

MIP start did not produce a new incumbent solution

Presolve removed 18 rows and 118 columns
Presolve time: 0.01s
Presolved: 633 rows, 1547 columns, 5161 nonzeros
Variable types: 1279 continuous, 268 integer (268 binary)

Root relaxation: objective 2.196398e+04, 96 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 21963.9756    0    4          - 21963.9756      -     -    0s
Another try with MIP start
     0     0 22014.9495    0    8          - 22014.9495      -     -    0s
H    0     0                    22197.876712 22014.9495  0.82%     -    0s
     0     0 22024.9441    0    5 22197.8767 22024.9441  0.78%     -    0s
     0     0 22027.7826    0    8 22197.8767 22027.7826  0.77%     -    0s
     0     0 22048.2179    0   12 22197.8767 22048.2179  0.67%     -    0s
     0     0 22048.2179    0    3 22197.8767 22048.2179  0.67%     -    0s
     0     0 22048.2179    0    4 22197.8767 22048.2179  0.67%     -    0s
     0     0 22048.2179    0   11 22197.8767 22048.2179  0.67%     -    0s
     0     0 22048.2179    0    8 22197.8767 22048.2179  0.67%     -    0s
H    0     0                    22193.013405 22048.2179  0.65%     -    0s
     0     0 22048.2417    0   11 22193.0134 22048.2417  0.65%     -    0s
     0     0 22048.8533    0   10 22193.0134 22048.8533  0.65%     -    0s
     0     0 22068.9261    0   15 22193.0134 22068.9261  0.56%     -    0s
     0     0 22068.9261    0   15 22193.0134 22068.9261  0.56%     -    0s
     0     0 22071.4902    0   14 22193.0134 22071.4902  0.55%     -    0s
     0     0 22074.0355    0   16 22193.0134 22074.0355  0.54%     -    0s
     0     0 22074.2669    0   16 22193.0134 22074.2669  0.54%     -    0s
     0     0 22080.6765    0   16 22193.0134 22080.6765  0.51%     -    0s
     0     0 22107.7314    0   18 22193.0134 22107.7314  0.38%     -    0s
     0     0 22107.7314    0   18 22193.0134 22107.7314  0.38%     -    0s
     0     0 22184.3257    0   14 22193.0134 22184.3257  0.04%     -    0s
     0     0 22184.3257    0   17 22193.0134 22184.3257  0.04%     -    0s
     0     0 22184.3257    0   17 22193.0134 22184.3257  0.04%     -    0s
     0     0 22184.3257    0   15 22193.0134 22184.3257  0.04%     -    0s
     0     0 22184.3257    0   15 22193.0134 22184.3257  0.04%     -    0s
     0     2 22184.3257    0   15 22193.0134 22184.3257  0.04%     -    0s

Cutting planes:
  Gomory: 1
  Cover: 2
  MIR: 12
  Flow cover: 17

Explored 29 nodes (574 simplex iterations) in 0.10 seconds
Thread count was 8 (of 8 available processors)

Solution count 2: 22193 22197.9 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.219301340500e+04, best bound 2.219301340500e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 22193 using centers : 17 43 82 
UB at end of ContiguityHeuristic = 22193
UB of (contiguous) heuristicSolution = 22193

Number of variables fixed to zero = 8473
Number of variables fixed to one  = 0
Number of variables not fixed     = 176
Number of centers left            = 6
Percentage of vars fixed = 0.98
Academic license - for non-commercial use only
Build hess : created 176 variables
Optimize a model with 543 rows, 269 columns and 989 nonzeros
Variable types: 93 continuous, 176 integer (176 binary)
Coefficient statistics:
  Matrix range     [1e+00, 6e+05]
  Objective range  [2e+00, 4e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 3e+00]

Loaded MIP start with objective 22193

Presolve removed 484 rows and 193 columns
Presolve time: 0.00s
Presolved: 59 rows, 76 columns, 229 nonzeros
Variable types: 0 continuous, 76 integer (72 binary)

Root relaxation: objective 2.196398e+04, 31 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 21963.9756    0    4 22193.0134 21963.9756  1.03%     -    0s
     0     0 22030.2448    0   16 22193.0134 22030.2448  0.73%     -    0s
     0     0 22049.7595    0   22 22193.0134 22049.7595  0.65%     -    0s
     0     0 22069.0331    0   12 22193.0134 22069.0331  0.56%     -    0s
     0     0 22074.9581    0   17 22193.0134 22074.9581  0.53%     -    0s
     0     0 22106.8435    0   26 22193.0134 22106.8435  0.39%     -    0s
     0     0 22118.8827    0   28 22193.0134 22118.8827  0.33%     -    0s
     0     0 22122.1351    0   28 22193.0134 22122.1351  0.32%     -    0s
     0     0 22122.3865    0   29 22193.0134 22122.3865  0.32%     -    0s
     0     0 22128.6109    0    5 22193.0134 22128.6109  0.29%     -    0s
     0     0 22128.6109    0    6 22193.0134 22128.6109  0.29%     -    0s
     0     0 22128.6109    0   16 22193.0134 22128.6109  0.29%     -    0s
     0     0 22128.6109    0   23 22193.0134 22128.6109  0.29%     -    0s
     0     0 22132.2721    0   19 22193.0134 22132.2721  0.27%     -    0s
     0     0 22132.5320    0   27 22193.0134 22132.5320  0.27%     -    0s
     0     0 22132.6942    0   28 22193.0134 22132.6942  0.27%     -    0s
     0     0 22136.9987    0   25 22193.0134 22136.9987  0.25%     -    0s
     0     0 22137.4976    0   26 22193.0134 22137.4976  0.25%     -    0s
     0     0 22137.8290    0   27 22193.0134 22137.8290  0.25%     -    0s
     0     0 22137.9360    0   28 22193.0134 22137.9360  0.25%     -    0s
     0     0 22138.7128    0   27 22193.0134 22138.7128  0.24%     -    0s
     0     0 22138.7370    0   20 22193.0134 22138.7370  0.24%     -    0s
     0     0 22138.7370    0   20 22193.0134 22138.7370  0.24%     -    0s
     0     2 22138.7370    0   20 22193.0134 22138.7370  0.24%     -    0s

Cutting planes:
  Learned: 1
  Gomory: 1
  Cover: 2
  MIR: 7
  StrongCG: 2
  GUB cover: 2
  Lazy constraints: 8

Explored 15 nodes (294 simplex iterations) in 0.02 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 22193 

Optimal solution found (tolerance 0.00e+00)
Best objective 2.219301340500e+04, best bound 2.219301340500e+04, gap 0.0000%
IP duration time: 0.022524 seconds
Total time elapsed: 0.454842 seconds
Number of callbacks: 9
Time in callbacks: 0.000337 seconds
Number of lazy constraints generated: 14
+ for state in $states
+ echo 'Running NH'
Running NH
+ /home/lykhovyd/progs/districting/districting myconfig.txt NH /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NH.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/NH/counties/graph/NH.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/NH/counties/graph/NH_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/NH/counties/graph/NH.population
state[2]        = NH
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NH.ralg_hot
nr_comp = 1
graph: 10 nodes, 19 edges (read)
Model input: L = 654944, U = 661526, k = 2.
Graph is connected.
Model input: total population = 1316470
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.59616642796975e+03, norm = 2.14790220621380e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 2.59688335230562e+03, norm = 7.64512559565075e-01, diff = 1.16393821265152e+00
iter = 3, step = 9.02500000000000e-01, func = 2.59705667857642e+03, norm = 6.25811896253804e-01, diff = 7.93598809271521e-01
iter = 4, step = 8.57375000000000e-01, func = 2.59696678869639e+03, norm = 4.95552976559808e-01, diff = 5.96533313354513e-01
iter = 5, step = 8.14506250000000e-01, func = 2.59692708617047e+03, norm = 3.73351721631823e-01, diff = 4.29999215014559e-01
iter = 6, step = 9.77407500000000e-01, func = 2.59702844668890e+03, norm = 3.14132384262145e-01, diff = 7.03651160346789e-01
iter = 7, step = 9.28537125000000e-01, func = 2.59708166325458e+03, norm = 1.77545012390056e-01, diff = 2.14756636793120e-01
iter = 8, step = 1.11424455000000e+00, func = 2.59709766375756e+03, norm = 3.41230994320114e-01, diff = 9.76547818843227e-01
iter = 9, step = 1.05853232250000e+00, func = 2.59694561676457e+03, norm = 4.42990018644872e-01, diff = 5.70386376406635e-01
iter = 10, step = 1.05853232250000e+00, func = 2.59710731933403e+03, norm = 2.21495009322436e-01, diff = 5.42808104323344e-01
iter = 11, step = 1.00560570637500e+00, func = 2.59711460863040e+03, norm = 4.44945652980181e-01, diff = 1.34666797780633e-01
iter = 12, step = 9.55325421056250e-01, func = 2.59697273709427e+03, norm = 4.49003219646817e-01, diff = 3.70639326687973e-01
iter = 13, step = 9.55325421056250e-01, func = 2.59712992939653e+03, norm = 2.24501609823408e-01, diff = 3.55326548993955e-01
iter = 14, step = 9.07559150003437e-01, func = 2.59713551363452e+03, norm = 7.63857885222899e-02, diff = 8.72049433279614e-02
iter = 15, step = 8.62181192503265e-01, func = 2.59710609215580e+03, norm = 7.94785289124242e-02, diff = 9.75970123934899e-02
iter = 16, step = 1.03461743100392e+00, func = 2.59713532334724e+03, norm = 5.53641490341935e-02, diff = 1.34211648424838e-01
iter = 17, step = 9.82886559453722e-01, func = 2.59714447341021e+03, norm = 3.04638410716649e-02, diff = 4.11108648850127e-02
iter = 18, step = 9.82886559453722e-01, func = 2.59713551486215e+03, norm = 3.48831959181319e-02, diff = 8.93850867676612e-02
iter = 19, step = 9.82886559453722e-01, func = 2.59715504391098e+03, norm = 1.62762111462833e-02, diff = 8.60645141957311e-02
iter = 20, step = 9.33742231481036e-01, func = 2.59715473478802e+03, norm = 1.52193534482892e-02, diff = 4.56497229972624e-02
iter = 21, step = 1.12049067777724e+00, func = 2.59713975357827e+03, norm = 5.25193454203101e-02, diff = 3.61302312936151e-01
iter = 22, step = 1.06446614388838e+00, func = 2.59715409486970e+03, norm = 2.70178753999670e-02, diff = 1.07287765194727e-01
iter = 23, step = 1.01124283669396e+00, func = 2.59715396498033e+03, norm = 7.88731725613406e-03, diff = 2.99479754825213e-02
iter = 24, step = 1.01124283669396e+00, func = 2.59715110469004e+03, norm = 3.35776918653596e-02, diff = 8.16578575292003e-02
iter = 25, step = 9.60680694859264e-01, func = 2.59715980934689e+03, norm = 1.69583329456644e-02, diff = 5.90692679535684e-02
iter = 26, step = 9.12646660116301e-01, func = 2.59716089082504e+03, norm = 6.25864530336818e-03, diff = 4.74608995897215e-03
iter = 27, step = 8.67014327110486e-01, func = 2.59715967777978e+03, norm = 4.35184406364654e-03, diff = 1.14176702205723e-02
iter = 28, step = 8.23663610754961e-01, func = 2.59716104796837e+03, norm = 1.35870838522152e-02, diff = 1.33264447346798e-02
iter = 29, step = 7.82480430217213e-01, func = 2.59716093975597e+03, norm = 7.13826721653772e-03, diff = 1.92353308870524e-02
iter = 30, step = 7.43356408706352e-01, func = 2.59716059688121e+03, norm = 2.76126767339776e-03, diff = 6.01504261470920e-03
iter = 31, step = 7.06188588271035e-01, func = 2.59716136843114e+03, norm = 1.99867662317327e-03, diff = 4.38510401256650e-03
iter = 32, step = 7.06188588271035e-01, func = 2.59716028482794e+03, norm = 8.56118386758387e-03, diff = 1.35582635487759e-02
iter = 33, step = 6.70879158857483e-01, func = 2.59716119196743e+03, norm = 4.43793741933467e-03, diff = 1.05110201640788e-02
iter = 34, step = 6.37335200914609e-01, func = 2.59716125080155e+03, norm = 1.32140498412245e-03, diff = 1.54867028232744e-03
iter = 35, step = 6.37335200914609e-01, func = 2.59716166335206e+03, norm = 9.79687680354677e-04, diff = 4.08332936172591e-03
iter = 36, step = 6.05468440868878e-01, func = 2.59716165671745e+03, norm = 8.05770210010672e-04, diff = 2.65041780560796e-03
iter = 37, step = 6.05468440868878e-01, func = 2.59716179161116e+03, norm = 4.78429427735965e-04, diff = 6.23637740565740e-03
iter = 38, step = 5.75195018825434e-01, func = 2.59716180246169e+03, norm = 3.61028604658991e-04, diff = 3.80179419840958e-03
iter = 39, step = 5.46435267884163e-01, func = 2.59716065336937e+03, norm = 4.15486131051672e-03, diff = 4.76475636268514e-03
iter = 40, step = 5.46435267884163e-01, func = 2.59716184451178e+03, norm = 2.07743065525836e-03, diff = 6.66333171163425e-03
iter = 41, step = 5.19113504489955e-01, func = 2.59716187120268e+03, norm = 2.62290468707983e-04, diff = 2.64668169727706e-04
iter = 42, step = 4.93157829265457e-01, func = 2.59716188155987e+03, norm = 1.75024681551516e-04, diff = 5.83489322750360e-04
iter = 43, step = 4.68499937802184e-01, func = 2.59716188500593e+03, norm = 1.28067653485138e-04, diff = 6.34253468831674e-04
iter = 44, step = 4.68499937802184e-01, func = 2.59716186086042e+03, norm = 2.00710115656332e-03, diff = 1.52458630766061e-03
iter = 45, step = 4.45074940912075e-01, func = 2.59716154579407e+03, norm = 2.05505117762598e-03, diff = 1.78838736841421e-03
iter = 46, step = 4.45074940912075e-01, func = 2.59716188432600e+03, norm = 7.51473818520979e-04, diff = 2.25237095469083e-03
iter = 47, step = 4.22821193866471e-01, func = 2.59716190273836e+03, norm = 9.04092013281156e-05, diff = 3.85044834628911e-04
iter = 48, step = 4.01680134173147e-01, func = 2.59716190796214e+03, norm = 5.78336439122263e-05, diff = 5.81738788010119e-04
iter = 49, step = 3.81596127464490e-01, func = 2.59716188503638e+03, norm = 6.46051104009922e-04, diff = 5.48989441205315e-04
iter = 50, step = 3.62516321091265e-01, func = 2.59716190462062e+03, norm = 3.25784223704665e-04, diff = 4.21116416210285e-04
iter = 51, step = 3.44390505036702e-01, func = 2.59716191401155e+03, norm = 4.87141468839948e-05, diff = 1.88850944034651e-04
iter = 52, step = 3.27170979784867e-01, func = 2.59716191194544e+03, norm = 4.02270950273306e-05, diff = 2.53502686339081e-04
iter = 53, step = 3.10812430795624e-01, func = 2.59716190124069e+03, norm = 3.75665344620579e-04, diff = 2.84038705715030e-04
iter = 54, step = 2.95271809255842e-01, func = 2.59716191603398e+03, norm = 1.87832672310295e-04, diff = 1.99905344479064e-04
iter = 55, step = 2.80508218793050e-01, func = 2.59716191802419e+03, norm = 2.01061565185512e-05, diff = 5.97289421266364e-05
iter = 56, step = 2.80508218793050e-01, func = 2.59716190110716e+03, norm = 1.62838239465121e-04, diff = 2.51596338963673e-04
iter = 57, step = 2.66482807853398e-01, func = 2.59716191951384e+03, norm = 8.17546672603464e-05, diff = 7.83402060343527e-05
iter = 58, step = 2.53158667460728e-01, func = 2.59716192050575e+03, norm = 1.00072594685322e-05, diff = 3.37855527326451e-05
iter = 59, step = 2.40500734087691e-01, func = 2.59716190674435e+03, norm = 1.02454371080581e-04, diff = 6.68765959563035e-05
iter = 60, step = 2.40500734087691e-01, func = 2.59716192059593e+03, norm = 5.34963601799124e-05, diff = 7.66709053823040e-05
iter = 61, step = 2.28475697383307e-01, func = 2.59716191718435e+03, norm = 3.00257704750022e-05, diff = 1.26103147788154e-05
iter = 62, step = 2.74170836859968e-01, func = 2.59716191921205e+03, norm = 1.50128852374858e-05, diff = 1.96976752688273e-05
iter = 63, step = 2.74170836859968e-01, func = 2.59716192056026e+03, norm = 7.50644261874890e-06, diff = 1.03205636680326e-05
iter = 64, step = 2.60462295016970e-01, func = 2.59716192051635e+03, norm = 3.12869525674569e-06, diff = 8.27896678799443e-06
iter = 65, step = 2.47439180266121e-01, func = 2.59716191988223e+03, norm = 4.36743547643711e-05, diff = 1.00567550814789e-05
iter = 66, step = 2.35067221252815e-01, func = 2.59716191720906e+03, norm = 4.34423109787802e-05, diff = 1.96043730247068e-05
iter = 67, step = 2.23313860190174e-01, func = 2.59716192059879e+03, norm = 1.68864210966689e-05, diff = 1.39646490724484e-05
iter = 68, step = 2.12148167180666e-01, func = 2.59716192057660e+03, norm = 3.01749968126377e-06, diff = 3.59751441677630e-06
iter = 69, step = 2.12148167180666e-01, func = 2.59716192029248e+03, norm = 8.72260964532492e-06, diff = 9.94242851456299e-06
iter = 70, step = 2.01540758821632e-01, func = 2.59716192090774e+03, norm = 4.48206438449242e-06, diff = 3.06485871358746e-06
iter = 71, step = 1.91463720880551e-01, func = 2.59716192082081e+03, norm = 1.48198585465281e-05, diff = 3.73425921524823e-06
iter = 72, step = 1.81890534836523e-01, func = 2.59716192081377e+03, norm = 7.57899954405285e-06, diff = 4.94445008206172e-06
iter = 73, step = 1.72796008094697e-01, func = 2.59716192089798e+03, norm = 1.47201161680030e-06, diff = 5.76876892402706e-07
iter = 74, step = 1.64156207689962e-01, func = 2.59716192084070e+03, norm = 1.47567403302504e-06, diff = 4.22203081581939e-07
iter = 75, step = 1.64156207689962e-01, func = 2.59716192091497e+03, norm = 1.03073806653956e-06, diff = 9.65163624767885e-07
iter = 76, step = 1.64156207689962e-01, func = 2.59716192089374e+03, norm = 2.30629187573900e-06, diff = 1.88275726968866e-06
iter = 77, step = 1.55948397305464e-01, func = 2.59716192094649e+03, norm = 1.21402603016665e-06, diff = 6.24962306559387e-07
iter = 78, step = 1.48150977440191e-01, func = 2.59716192095576e+03, norm = 5.70382742628915e-07, diff = 4.55996139268777e-07
iter = 79, step = 1.40743428568181e-01, func = 2.59716192095685e+03, norm = 4.69779412480172e-07, diff = 8.47783930335773e-07
iter = 80, step = 1.33706257139772e-01, func = 2.59716192081833e+03, norm = 3.77359823200938e-06, diff = 7.75513860342145e-07
iter = 81, step = 1.27020944282784e-01, func = 2.59716192098987e+03, norm = 1.89814681666066e-06, diff = 8.68333532618897e-07
iter = 82, step = 1.20669897068644e-01, func = 2.59716192098042e+03, norm = 3.25790687290618e-07, diff = 8.80383269534710e-08
iter = 83, step = 1.14636402215212e-01, func = 2.59716192098852e+03, norm = 2.14638676294350e-07, diff = 1.36947627306105e-07
iter = 84, step = 1.08904582104452e-01, func = 2.59716192099316e+03, norm = 9.47756213897555e-07, diff = 1.13835526821787e-07
iter = 85, step = 1.03459352999229e-01, func = 2.59716192099233e+03, norm = 5.25336003892729e-07, diff = 1.76162746261337e-07
iter = 86, step = 9.82863853492676e-02, func = 2.59716192099110e+03, norm = 2.13738427734139e-07, diff = 4.73834167325763e-08
iter = 87, step = 1.17943662419121e-01, func = 2.59716192099189e+03, norm = 6.01974555125751e-07, diff = 2.55714693540772e-07
iter = 88, step = 1.12046479298165e-01, func = 2.59716192098870e+03, norm = 3.14903603383426e-07, diff = 1.21854825227259e-07
iter = 89, step = 1.06444155333257e-01, func = 2.59716192099530e+03, norm = 9.41874912673347e-08, diff = 1.63974192302455e-08
iter = 90, step = 1.01121947566594e-01, func = 2.59716192099591e+03, norm = 9.42574249805734e-08, diff = 2.16977924711424e-08
iter = 91, step = 1.01121947566594e-01, func = 2.59716192099727e+03, norm = 4.71287124911737e-08, diff = 5.28509362882859e-08
iter = 92, step = 9.60658501882642e-02, func = 2.59716192099706e+03, norm = 4.03967256029371e-08, diff = 3.89582879823567e-08
iter = 93, step = 9.12625576788510e-02, func = 2.59716192099388e+03, norm = 2.57184457572291e-07, diff = 4.45720030727508e-08
iter = 94, step = 8.66994297949085e-02, func = 2.59716192099867e+03, norm = 1.28592228786145e-07, diff = 3.98514640936388e-08
iter = 95, step = 8.23644583051630e-02, func = 2.59716192099831e+03, norm = 4.14042795995444e-08, diff = 1.45380960323078e-08
iter = 96, step = 8.23644583051630e-02, func = 2.59716192099915e+03, norm = 2.07021398068073e-08, diff = 2.98395928187059e-08
iter = 97, step = 7.82462353899049e-02, func = 2.59716192099760e+03, norm = 1.55899460835467e-07, diff = 3.34134945311983e-08
iter = 98, step = 7.43339236204096e-02, func = 2.59716192099950e+03, norm = 7.79497304177334e-08, diff = 2.10631266213222e-08
iter = 99, step = 7.43339236204096e-02, func = 2.59716192099915e+03, norm = 6.54335066793991e-08, diff = 1.44205599194495e-08
iter = 100, step = 7.06172274393892e-02, func = 2.59716192099951e+03, norm = 3.38082191500609e-08, diff = 8.16781671825056e-09
iter = 101, step = 8.47406729272670e-02, func = 2.59716192099937e+03, norm = 1.00520620208513e-08, diff = 7.17092258385969e-09
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.597162e+03
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 10
  UB from restricted IP = 7029.89 using centers : 4 3 
  UB from restricted IP = 3641.24 using centers : 8 1 
In iteration 0 of HessHeuristic, objective value of incumbent is = 3641.24
  UB from restricted IP = 10334.5 using centers : 0 5 
  UB from restricted IP = 3728 using centers : 6 1 
In iteration 1 of HessHeuristic, objective value of incumbent is = 3641.24
  UB from restricted IP = 21092.4 using centers : 5 7 
  UB from restricted IP = 3641.24 using centers : 1 8 
In iteration 2 of HessHeuristic, objective value of incumbent is = 3641.24
  UB from restricted IP = 6073.4 using centers : 4 6 
  UB from restricted IP = 3641.24 using centers : 8 1 
In iteration 3 of HessHeuristic, objective value of incumbent is = 3641.24
  UB from restricted IP = 11472 using centers : 4 0 
  UB from restricted IP = 3641.24 using centers : 8 1 
In iteration 4 of HessHeuristic, objective value of incumbent is = 3641.24
  UB from restricted IP = 4700.84 using centers : 3 8 
  UB from restricted IP = 3641.24 using centers : 1 8 
In iteration 5 of HessHeuristic, objective value of incumbent is = 3641.24
  UB from restricted IP = 11472 using centers : 0 4 
  UB from restricted IP = 3641.24 using centers : 1 8 
In iteration 6 of HessHeuristic, objective value of incumbent is = 3641.24
  UB from restricted IP = 8134.52 using centers : 1 3 
  UB from restricted IP = 3771.16 using centers : 6 8 
  UB from restricted IP = 3641.24 using centers : 1 8 
In iteration 7 of HessHeuristic, objective value of incumbent is = 3641.24
  UB from restricted IP = 6203.81 using centers : 5 1 
  UB from restricted IP = 3728 using centers : 6 1 
In iteration 8 of HessHeuristic, objective value of incumbent is = 3641.24
  UB from restricted IP = 5026.97 using centers : 6 5 
  UB from restricted IP = 3641.24 using centers : 8 1 
In iteration 9 of HessHeuristic, objective value of incumbent is = 3641.24
UB at end of HessHeuristic = 3641.24
UB of heuristicSolution = 3641.24
Best solution after 10 of HessHeuristic is 3641.24

Beginning LOCAL SEARCH with UB = 3641.24

Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 10
  checking neighbors of node 1
  checking neighbors of node 8
UB at end of local search heuristic = 3641.24
UB of heuristicSolution = 3641.24
Best solution after local search is 3641.24
Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 10
Optimize a model with 50 rows, 96 columns and 300 nonzeros
Variable types: 76 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [1e+00, 4e+05]
  Objective range  [1e+02, 2e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

MIP start did not produce a new incumbent solution

Presolve removed 21 rows and 44 columns
Presolve time: 0.00s
Presolved: 29 rows, 52 columns, 166 nonzeros
Variable types: 45 continuous, 7 integer (7 binary)

Root relaxation: objective 3.050901e+03, 8 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 3050.90110    0    3          - 3050.90110      -     -    0s
Another try with MIP start
     0     0 3865.54155    0    4          - 3865.54155      -     -    0s
     0     0 3865.54155    0    5          - 3865.54155      -     -    0s
     0     0 3865.54155    0    5          - 3865.54155      -     -    0s
     0     0 3865.54155    0    5          - 3865.54155      -     -    0s
     0     2 3865.54155    0    5          - 3865.54155      -     -    0s

Cutting planes:
  Gomory: 1
  Cover: 1
  Clique: 2
  MIR: 6
  StrongCG: 1
  Flow cover: 1

Explored 10 nodes (41 simplex iterations) in 0.01 seconds
Thread count was 8 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
UB at end of ContiguityHeuristic = 1e+20
UB of (contiguous) heuristicSolution = 3641.24

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 100
Number of centers left            = 10
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 100 variables
Optimize a model with 131 rows, 110 columns and 440 nonzeros
Variable types: 10 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [6e+01, 2e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 2e+00]

MIP start did not produce a new incumbent solution

Presolve removed 10 rows and 2 columns
Presolve time: 0.00s
Presolved: 121 rows, 108 columns, 424 nonzeros
Variable types: 0 continuous, 108 integer (98 binary)

Root relaxation: objective 2.897304e+03, 46 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 2897.30374    0    2          - 2897.30374      -     -    0s
Another try with MIP start
     0     0 3104.18727    0    4          - 3104.18727      -     -    0s
     0     0 3194.03768    0   20          - 3194.03768      -     -    0s
     0     0 3201.96600    0   21          - 3201.96600      -     -    0s
     0     0 3421.36272    0    8          - 3421.36272      -     -    0s
     0     0 3453.19986    0   32          - 3453.19986      -     -    0s
     0     0 3475.09967    0   32          - 3475.09967      -     -    0s
     0     0 3526.82911    0   34          - 3526.82911      -     -    0s
     0     0 3547.60959    0   36          - 3547.60959      -     -    0s
     0     0 3564.04771    0   35          - 3564.04771      -     -    0s
     0     0 3572.40775    0   34          - 3572.40775      -     -    0s
     0     0 3678.19605    0   36          - 3678.19605      -     -    0s
     0     0 3688.04813    0   12          - 3688.04813      -     -    0s
     0     0 3688.04813    0   12          - 3688.04813      -     -    0s
     0     2 3688.04813    0   12          - 3688.04813      -     -    0s

Cutting planes:
  Learned: 1
  Cover: 4
  MIR: 7
  StrongCG: 3
  Flow cover: 1
  GUB cover: 1
  Lazy constraints: 49

Explored 583 nodes (3442 simplex iterations) in 0.09 seconds
Thread count was 8 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.091125 seconds
Total time elapsed: 0.119263 seconds
Number of callbacks: 24
Time in callbacks: 0.000309 seconds
Number of lazy constraints generated: 50
+ for state in $states
+ echo 'Running NJ'
Running NJ
+ /home/lykhovyd/progs/districting/districting myconfig.txt NJ /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NJ.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/NJ/counties/graph/NJ.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/NJ/counties/graph/NJ_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/NJ/counties/graph/NJ.population
state[2]        = NJ
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NJ.ralg_hot
nr_comp = 1
graph: 21 nodes, 42 edges (read)
Model input: L = 728995, U = 736321, k = 12.
Graph is connected.
Model input: total population = 8791894
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 5.21930848827329e+03, norm = 9.90587612226173e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 5.21959006445191e+03, norm = 6.65552694323079e+00, diff = 8.43568170927095e-01
iter = 3, step = 8.57375000000000e-01, func = 5.21927772309722e+03, norm = 6.08921659704112e+00, diff = 6.93809204438249e-01
iter = 4, step = 8.14506250000000e-01, func = 5.21963841135090e+03, norm = 5.51810419060703e+00, diff = 6.23225185540216e-01
iter = 5, step = 8.14506250000000e-01, func = 5.21922312890468e+03, norm = 6.41959482055615e+00, diff = 1.19584253902315e+00
iter = 6, step = 7.73780937500000e-01, func = 5.21979491976641e+03, norm = 4.52746056813384e+00, diff = 5.68018438668182e-01
iter = 7, step = 7.35091890625000e-01, func = 5.22018025541005e+03, norm = 4.53680195485444e+00, diff = 5.91222298837048e-01
iter = 8, step = 6.98337296093750e-01, func = 5.22017681562330e+03, norm = 3.82609875352799e+00, diff = 5.57669569833259e-01
iter = 9, step = 6.63420431289062e-01, func = 5.22055757368084e+03, norm = 2.77422339247781e+00, diff = 5.47856936659753e-01
iter = 10, step = 6.30249409724609e-01, func = 5.21990071190834e+03, norm = 4.17661183843682e+00, diff = 5.07243630627965e-01
iter = 11, step = 5.98736939238379e-01, func = 5.22035138189030e+03, norm = 3.95391867464653e+00, diff = 3.87964524283801e-01
iter = 12, step = 5.68800092276460e-01, func = 5.22072951673300e+03, norm = 3.72909294948541e+00, diff = 3.79523713491014e-01
iter = 13, step = 5.40360087662637e-01, func = 5.22083819887896e+03, norm = 3.37546653319282e+00, diff = 4.26624601662432e-01
iter = 14, step = 5.13342083279505e-01, func = 5.22058899573936e+03, norm = 4.69810124886755e+00, diff = 3.93323757530291e-01
iter = 15, step = 4.87674979115529e-01, func = 5.22074511812972e+03, norm = 3.32015435825583e+00, diff = 3.10343294732674e-01
iter = 16, step = 4.63291230159753e-01, func = 5.22072349578392e+03, norm = 3.26422772503869e+00, diff = 3.51241318412310e-01
iter = 17, step = 4.40126668651765e-01, func = 5.22090899059864e+03, norm = 2.03113384193981e+00, diff = 3.17141115286733e-01
iter = 18, step = 4.18120335219177e-01, func = 5.22075031089098e+03, norm = 2.73580618616835e+00, diff = 2.77422126302498e-01
iter = 19, step = 3.97214318458218e-01, func = 5.22100508795208e+03, norm = 2.91722313952352e+00, diff = 2.42337358552318e-01
iter = 20, step = 3.77353602535307e-01, func = 5.22112917447386e+03, norm = 2.61404638544306e+00, diff = 2.45978075816931e-01
iter = 21, step = 3.58485922408542e-01, func = 5.22092079187412e+03, norm = 3.37414022084488e+00, diff = 2.50368649305250e-01
iter = 22, step = 3.40561626288115e-01, func = 5.22101993425411e+03, norm = 2.63657432326898e+00, diff = 2.11670571534374e-01
iter = 23, step = 3.23533544973709e-01, func = 5.22098420537232e+03, norm = 2.51683579260914e+00, diff = 2.25064343661357e-01
iter = 24, step = 3.07356867725023e-01, func = 5.22109601000926e+03, norm = 1.84722953481509e+00, diff = 1.98625543349551e-01
iter = 25, step = 2.91989024338772e-01, func = 5.22119419071021e+03, norm = 1.65689915725308e+00, diff = 1.79478642994937e-01
iter = 26, step = 2.77389573121834e-01, func = 5.22113271983951e+03, norm = 2.07563370632343e+00, diff = 1.66193038570736e-01
iter = 27, step = 2.63520094465742e-01, func = 5.22118008787629e+03, norm = 1.92270151939238e+00, diff = 1.13964339366407e-01
iter = 28, step = 2.50344089742455e-01, func = 5.22106726674369e+03, norm = 2.72346816198634e+00, diff = 1.29628600366258e-01
iter = 29, step = 2.37826885255332e-01, func = 5.22108680709118e+03, norm = 2.07211432076650e+00, diff = 1.44258900019234e-01
iter = 30, step = 2.25935540992565e-01, func = 5.22117480578205e+03, norm = 2.06430023267875e+00, diff = 1.34081866180697e-01
iter = 31, step = 2.14638763942937e-01, func = 5.22123853226633e+03, norm = 1.59431237791885e+00, diff = 1.04216238285785e-01
iter = 32, step = 2.03906825745790e-01, func = 5.22115611940723e+03, norm = 1.83929907123704e+00, diff = 1.50165197691002e-01
iter = 33, step = 2.03906825745790e-01, func = 5.22117784147699e+03, norm = 1.64770409096048e+00, diff = 1.84174394444240e-01
iter = 34, step = 1.93711484458501e-01, func = 5.22117894201667e+03, norm = 1.89826730183053e+00, diff = 1.18759689492737e-01
iter = 35, step = 1.93711484458501e-01, func = 5.22123585353337e+03, norm = 1.37776702441080e+00, diff = 1.86561718022505e-01
iter = 36, step = 1.84025910235576e-01, func = 5.22123287274358e+03, norm = 1.44479284659107e+00, diff = 1.08432418633304e-01
iter = 37, step = 1.74824614723797e-01, func = 5.22120827393173e+03, norm = 1.70647715130560e+00, diff = 9.29961965578864e-02
iter = 38, step = 1.74824614723797e-01, func = 5.22123470997185e+03, norm = 1.18799243310186e+00, diff = 1.29302528262774e-01
iter = 39, step = 1.66083383987607e-01, func = 5.22124276714674e+03, norm = 1.53090614745938e+00, diff = 9.76926845957857e-02
iter = 40, step = 1.57779214788227e-01, func = 5.22126150708285e+03, norm = 1.24369845834609e+00, diff = 5.43145055500713e-02
iter = 41, step = 1.49890254048815e-01, func = 5.22128256058747e+03, norm = 1.01818586448680e+00, diff = 7.21285004121356e-02
iter = 42, step = 1.49890254048815e-01, func = 5.22126287991475e+03, norm = 1.28013683639541e+00, diff = 1.27186174785682e-01
iter = 43, step = 1.42395741346375e-01, func = 5.22126891183989e+03, norm = 1.19885766244917e+00, diff = 5.17172030843122e-02
iter = 44, step = 1.35275954279056e-01, func = 5.22126695135491e+03, norm = 1.07507955284018e+00, diff = 5.83589725308824e-02
iter = 45, step = 1.28512156565103e-01, func = 5.22128703658239e+03, norm = 8.13624073328690e-01, diff = 5.17473327325125e-02
iter = 46, step = 1.22086548736848e-01, func = 5.22131500392000e+03, norm = 7.71205490612880e-01, diff = 5.92138894399411e-02
iter = 47, step = 1.15982221300006e-01, func = 5.22130847202126e+03, norm = 1.09798701071757e+00, diff = 4.04117252611679e-02
iter = 48, step = 1.10183110235005e-01, func = 5.22131633354068e+03, norm = 1.02692220411002e+00, diff = 4.52639192066464e-02
iter = 49, step = 1.04673954723255e-01, func = 5.22131807205023e+03, norm = 8.42077542567676e-01, diff = 3.72866912387248e-02
iter = 50, step = 9.94402569870922e-02, func = 5.22132048892454e+03, norm = 8.44965792158261e-01, diff = 2.94883916025497e-02
iter = 51, step = 9.94402569870922e-02, func = 5.22132704261740e+03, norm = 8.19038110179011e-01, diff = 4.88113281542779e-02
iter = 52, step = 9.44682441377376e-02, func = 5.22133432949536e+03, norm = 6.73418814115713e-01, diff = 4.56921705796540e-02
iter = 53, step = 8.97448319308507e-02, func = 5.22131829396517e+03, norm = 1.03033681408776e+00, diff = 3.40643294629522e-02
iter = 54, step = 8.52575903343082e-02, func = 5.22133584917296e+03, norm = 6.40235172692212e-01, diff = 4.02561560057242e-02
iter = 55, step = 8.09947108175928e-02, func = 5.22133958806896e+03, norm = 8.23381721027566e-01, diff = 2.39844050939860e-02
iter = 56, step = 7.69449752767131e-02, func = 5.22134076452464e+03, norm = 7.16186961876628e-01, diff = 1.86587970309759e-02
iter = 57, step = 7.30977265128775e-02, func = 5.22133968245515e+03, norm = 7.35023556329617e-01, diff = 2.05095806008836e-02
iter = 58, step = 6.94428401872336e-02, func = 5.22134805119396e+03, norm = 5.11121469794820e-01, diff = 2.16168127404753e-02
iter = 59, step = 6.59706981778719e-02, func = 5.22135218204435e+03, norm = 6.71194147530836e-01, diff = 2.16670684930033e-02
iter = 60, step = 6.26721632689783e-02, func = 5.22135335303297e+03, norm = 6.22883092495928e-01, diff = 2.15791518887721e-02
iter = 61, step = 5.95385551055294e-02, func = 5.22135376637940e+03, norm = 7.27132007470627e-01, diff = 1.95727135975773e-02
iter = 62, step = 5.65616273502529e-02, func = 5.22135679063458e+03, norm = 6.32637268147188e-01, diff = 1.53349441841493e-02
iter = 63, step = 5.37335459827403e-02, func = 5.22136335796864e+03, norm = 5.77669777255420e-01, diff = 1.06638143884705e-02
iter = 64, step = 5.10468686836033e-02, func = 5.22135939682397e+03, norm = 4.66193315721295e-01, diff = 1.52931260865938e-02
iter = 65, step = 4.84945252494231e-02, func = 5.22135992271871e+03, norm = 4.28259278843721e-01, diff = 1.33984091587713e-02
iter = 66, step = 4.60697989869519e-02, func = 5.22136130235685e+03, norm = 3.94300596395608e-01, diff = 1.30029719298100e-02
iter = 67, step = 4.37663090376043e-02, func = 5.22136173885035e+03, norm = 3.83852567389699e-01, diff = 1.51165054547046e-02
iter = 68, step = 4.37663090376043e-02, func = 5.22136482540082e+03, norm = 4.43431115446696e-01, diff = 2.32339479302234e-02
iter = 69, step = 4.15779935857241e-02, func = 5.22136528773456e+03, norm = 4.10997501004456e-01, diff = 9.44201741424126e-03
iter = 70, step = 3.94990939064379e-02, func = 5.22136832310583e+03, norm = 3.15957083141417e-01, diff = 7.90815398857193e-03
iter = 71, step = 3.75241392111160e-02, func = 5.22136768646049e+03, norm = 4.84797191683183e-01, diff = 1.29623172876216e-02
iter = 72, step = 3.56479322505602e-02, func = 5.22137125601804e+03, norm = 2.98851004518889e-01, diff = 1.15632825027991e-02
iter = 73, step = 3.38655356380322e-02, func = 5.22137118198281e+03, norm = 5.11243878545630e-01, diff = 6.63360799695430e-03
iter = 74, step = 3.21722588561306e-02, func = 5.22137221292355e+03, norm = 5.09857212804208e-01, diff = 7.80818393025723e-03
iter = 75, step = 3.05636459133241e-02, func = 5.22137202618815e+03, norm = 4.35700190408210e-01, diff = 1.83060488052404e-02
iter = 76, step = 2.90354636176579e-02, func = 5.22137264722183e+03, norm = 4.28583410067391e-01, diff = 9.74616675404885e-03
iter = 77, step = 2.75836904367750e-02, func = 5.22137208073695e+03, norm = 3.89378494922693e-01, diff = 8.69548962046169e-03
iter = 78, step = 2.62045059149362e-02, func = 5.22137195043079e+03, norm = 4.45332523212499e-01, diff = 8.60949854326709e-03
iter = 79, step = 2.48942806191894e-02, func = 5.22137324106194e+03, norm = 3.38472079822901e-01, diff = 5.88609281214673e-03
iter = 80, step = 2.36495665882299e-02, func = 5.22137367446592e+03, norm = 3.19181299176044e-01, diff = 5.64135679948346e-03
iter = 81, step = 2.24670882588184e-02, func = 5.22137380397848e+03, norm = 2.54573595125467e-01, diff = 6.22186252434281e-03
iter = 82, step = 2.13437338458775e-02, func = 5.22137394531073e+03, norm = 3.67962708149545e-01, diff = 6.89637000136224e-03
iter = 83, step = 2.02765471535836e-02, func = 5.22137421682384e+03, norm = 2.54928816313137e-01, diff = 5.61776624226749e-03
iter = 84, step = 1.92627197959044e-02, func = 5.22137448346117e+03, norm = 3.75583645586699e-01, diff = 6.12444944227196e-03
iter = 85, step = 1.82995838061092e-02, func = 5.22137546103614e+03, norm = 2.85036943279658e-01, diff = 3.61877411530832e-03
iter = 86, step = 1.73846046158038e-02, func = 5.22137540714727e+03, norm = 2.81185233885206e-01, diff = 4.22247892917931e-03
iter = 87, step = 1.65153743850136e-02, func = 5.22137557816268e+03, norm = 3.12699327953899e-01, diff = 4.61817179833611e-03
iter = 88, step = 1.56896056657629e-02, func = 5.22137587611304e+03, norm = 2.25626638620948e-01, diff = 2.89123801986665e-03
iter = 89, step = 1.49051253824747e-02, func = 5.22137593671098e+03, norm = 2.57811667343290e-01, diff = 4.17320413568950e-03
iter = 90, step = 1.41598691133510e-02, func = 5.22137670041375e+03, norm = 1.77091382333572e-01, diff = 2.77250976121581e-03
iter = 91, step = 1.34518756576835e-02, func = 5.22137650567888e+03, norm = 1.95905981379817e-01, diff = 3.62781747278988e-03
iter = 92, step = 1.27792818747993e-02, func = 5.22137645832201e+03, norm = 7.31528308997197e-01, diff = 3.88593608035538e-03
iter = 93, step = 1.21403177810593e-02, func = 5.22137666975132e+03, norm = 3.82560061092094e-01, diff = 6.44287767637751e-03
iter = 94, step = 1.15333018920064e-02, func = 5.22137685237079e+03, norm = 1.85003136465222e-01, diff = 2.65930564023103e-03
iter = 95, step = 1.09566367974060e-02, func = 5.22137696176580e+03, norm = 2.37152944098236e-01, diff = 2.88295204458724e-03
iter = 96, step = 1.09566367974060e-02, func = 5.22137711177746e+03, norm = 1.91975189636121e-01, diff = 3.96372392404258e-03
iter = 97, step = 1.04088049575357e-02, func = 5.22137704151888e+03, norm = 2.16816333595532e-01, diff = 2.59782025361167e-03
iter = 98, step = 9.88836470965895e-03, func = 5.22137716943773e+03, norm = 1.71796456815787e-01, diff = 1.95422716159880e-03
iter = 99, step = 9.39394647417600e-03, func = 5.22137708935863e+03, norm = 1.66556164796733e-01, diff = 2.54686527381938e-03
iter = 100, step = 9.39394647417600e-03, func = 5.22137739942940e+03, norm = 1.51774933406291e-01, diff = 4.50332468526786e-03
iter = 101, step = 8.92424915046720e-03, func = 5.22137735956774e+03, norm = 1.39442134189163e-01, diff = 2.62247321800118e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 5.221403e+03
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 12, while k = 12 and n = 21
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 1.83644e-320
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 441
Number of centers left            = 21
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 441 variables
Optimize a model with 505 rows, 462 columns and 1848 nonzeros
Variable types: 21 continuous, 441 integer (441 binary)
Coefficient statistics:
  Matrix range     [1e+00, 9e+05]
  Objective range  [4e+01, 4e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+01]
Presolve removed 0 rows and 66 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.000443 seconds
Total time elapsed: 0.009581 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running NM'
Running NM
+ /home/lykhovyd/progs/districting/districting myconfig.txt NM /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NM.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/NM/counties/graph/NM.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/NM/counties/graph/NM_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/NM/counties/graph/NM.population
state[2]        = NM
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NM.ralg_hot
nr_comp = 1
graph: 33 nodes, 78 edges (read)
Model input: L = 682962, U = 689824, k = 3.
Graph is connected.
Model input: total population = 2059179
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 3.16798624676751e+04, norm = 2.00931877406818e+00, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 3.16799714335696e+04, norm = 1.52330178493993e+00, diff = 1.48901333631661e+00
iter = 3, step = 1.14000000000000e+00, func = 3.16807118685380e+04, norm = 7.75257590236412e-01, diff = 6.76572332904246e-01
iter = 4, step = 1.08300000000000e+00, func = 3.16807888016927e+04, norm = 2.93415911120170e-01, diff = 3.91307736642064e-01
iter = 5, step = 1.02885000000000e+00, func = 3.16808301387675e+04, norm = 1.75427787718948e-01, diff = 6.39111059783920e-01
iter = 6, step = 9.77407500000000e-01, func = 3.16807720623324e+04, norm = 2.09676245855783e-01, diff = 7.59023089447892e-01
iter = 7, step = 9.28537125000000e-01, func = 3.16807860586371e+04, norm = 1.12255537607426e-01, diff = 6.32607459166142e-01
iter = 8, step = 8.82110268750000e-01, func = 3.16807765521872e+04, norm = 1.71085889785306e-01, diff = 6.37343816235704e-01
iter = 9, step = 8.82110268750000e-01, func = 3.16808217587483e+04, norm = 1.31381759334944e-01, diff = 1.01648734497612e+00
iter = 10, step = 8.38004755312500e-01, func = 3.16808088225574e+04, norm = 8.01333312428646e-02, diff = 4.43383830674589e-01
iter = 11, step = 1.00560570637500e+00, func = 3.16808052497449e+04, norm = 1.25140800628756e-01, diff = 8.86333478923858e-01
iter = 12, step = 1.00560570637500e+00, func = 3.16808083939143e+04, norm = 9.27445282459127e-02, diff = 8.17045027961599e-01
iter = 13, step = 9.55325421056250e-01, func = 3.16808083469013e+04, norm = 1.14713836653176e-01, diff = 7.01644605385804e-01
iter = 14, step = 9.07559150003437e-01, func = 3.16808270732793e+04, norm = 8.91767005174145e-02, diff = 3.67162220042853e-01
iter = 15, step = 8.62181192503265e-01, func = 3.16808194438722e+04, norm = 7.21025436775239e-02, diff = 4.25907097769954e-01
iter = 16, step = 8.62181192503265e-01, func = 3.16808364961960e+04, norm = 4.68213054963586e-02, diff = 4.01566247554964e-01
iter = 17, step = 8.19072132878102e-01, func = 3.16808307708478e+04, norm = 3.91971631465727e-02, diff = 5.24737453010773e-01
iter = 18, step = 7.78118526234197e-01, func = 3.16808365551445e+04, norm = 2.75605995282432e-02, diff = 1.45309241706314e-01
iter = 19, step = 7.78118526234197e-01, func = 3.16808453918598e+04, norm = 5.19997770018958e-02, diff = 5.22461852596903e-01
iter = 20, step = 7.39212599922487e-01, func = 3.16808254568316e+04, norm = 6.00424851607695e-02, diff = 2.49764259232851e-01
iter = 21, step = 8.87055119906984e-01, func = 3.16808373218674e+04, norm = 2.65208011040236e-02, diff = 5.65639180938223e-01
iter = 22, step = 8.42702363911635e-01, func = 3.16808412945480e+04, norm = 2.21212836923576e-02, diff = 1.69520533176172e-01
iter = 23, step = 8.00567245716053e-01, func = 3.16808418062603e+04, norm = 1.69045699664409e-02, diff = 1.26021545107638e-01
iter = 24, step = 7.60538883430251e-01, func = 3.16808419326033e+04, norm = 4.34332967219350e-02, diff = 1.52074408390536e-01
iter = 25, step = 7.22511939258738e-01, func = 3.16808405406846e+04, norm = 2.84318573415156e-02, diff = 2.85566727817819e-01
iter = 26, step = 7.22511939258738e-01, func = 3.16808425227963e+04, norm = 1.78879522072315e-02, diff = 1.99164533930808e-01
iter = 27, step = 6.86386342295801e-01, func = 3.16808446999161e+04, norm = 8.43403937484096e-03, diff = 1.24132527832836e-01
iter = 28, step = 6.52067025181011e-01, func = 3.16808426854420e+04, norm = 3.96292928398267e-02, diff = 1.28325400721841e-01
iter = 29, step = 6.19463673921960e-01, func = 3.16808447359891e+04, norm = 2.09408037040092e-02, diff = 1.72715211385487e-01
iter = 30, step = 5.88490490225862e-01, func = 3.16808469693574e+04, norm = 6.42604218725732e-03, diff = 9.72692200264320e-02
iter = 31, step = 5.59065965714569e-01, func = 3.16808477412602e+04, norm = 5.37940668784980e-03, diff = 1.11113846331171e-01
iter = 32, step = 5.59065965714569e-01, func = 3.16808472670174e+04, norm = 1.13315808931234e-02, diff = 1.93417964348336e-01
iter = 33, step = 5.59065965714569e-01, func = 3.16808496773194e+04, norm = 5.95726136208363e-03, diff = 1.87640951730891e-01
iter = 34, step = 5.31112667428841e-01, func = 3.16808487720550e+04, norm = 9.63417853748115e-03, diff = 2.94305401060974e-02
iter = 35, step = 5.04557034057399e-01, func = 3.16808468104611e+04, norm = 1.49159473004567e-02, diff = 3.38393201674310e-02
iter = 36, step = 5.04557034057399e-01, func = 3.16808499323362e+04, norm = 8.04201173912330e-03, diff = 5.19679749116705e-02
iter = 37, step = 4.79329182354529e-01, func = 3.16808493798289e+04, norm = 4.79166016886986e-03, diff = 2.57191807542013e-02
iter = 38, step = 5.75195018825434e-01, func = 3.16808506151430e+04, norm = 1.04352115875978e-02, diff = 4.59706976908615e-02
iter = 39, step = 5.46435267884163e-01, func = 3.16808505379462e+04, norm = 5.53408407788564e-03, diff = 4.51614615803355e-02
iter = 40, step = 5.19113504489955e-01, func = 3.16808509659274e+04, norm = 3.23198176774214e-03, diff = 3.30149984240787e-02
iter = 41, step = 4.93157829265457e-01, func = 3.16808501105126e+04, norm = 1.17885333686615e-02, diff = 4.54737877160744e-02
iter = 42, step = 5.91789395118548e-01, func = 3.16808508022626e+04, norm = 5.95185017209424e-03, diff = 1.17909249451278e-01
iter = 43, step = 5.62199925362621e-01, func = 3.16808506524796e+04, norm = 2.42495417204550e-03, diff = 2.39245727898210e-02
iter = 44, step = 5.34089929094490e-01, func = 3.16808507445916e+04, norm = 2.34548433896116e-03, diff = 9.63318488007295e-03
iter = 45, step = 5.07385432639765e-01, func = 3.16808497568474e+04, norm = 3.65156833521187e-03, diff = 1.42910981850486e-02
iter = 46, step = 5.07385432639765e-01, func = 3.16808503365173e+04, norm = 4.53755829062460e-03, diff = 3.06466584506098e-02
iter = 47, step = 4.82016161007777e-01, func = 3.16808509708600e+04, norm = 2.52578653804800e-03, diff = 9.20878834110379e-03
iter = 48, step = 4.57915352957388e-01, func = 3.16808508702194e+04, norm = 1.46604685049564e-03, diff = 4.51718710258229e-03
iter = 49, step = 4.57915352957388e-01, func = 3.16808512634346e+04, norm = 1.06917855526019e-03, diff = 1.19198837761973e-02
iter = 50, step = 4.35019585309519e-01, func = 3.16808507806354e+04, norm = 2.23284394037727e-03, diff = 5.91760557269438e-03
iter = 51, step = 4.35019585309519e-01, func = 3.16808511322538e+04, norm = 1.33061936688970e-03, diff = 9.04497828647417e-03
iter = 52, step = 4.35019585309519e-01, func = 3.16808509815626e+04, norm = 2.90148171130305e-03, diff = 9.40124567090076e-03
iter = 53, step = 4.13268606044043e-01, func = 3.16808510091065e+04, norm = 1.58431837038339e-03, diff = 9.47836593984295e-03
iter = 54, step = 4.13268606044043e-01, func = 3.16808511548253e+04, norm = 1.41785084507181e-03, diff = 6.96653530202001e-03
iter = 55, step = 3.92605175741841e-01, func = 3.16808513145630e+04, norm = 6.94562658129517e-04, diff = 6.76169281299439e-03
iter = 56, step = 3.72974916954748e-01, func = 3.16808513575681e+04, norm = 6.61670495111137e-04, diff = 4.78970735054084e-03
iter = 57, step = 3.54326171107011e-01, func = 3.16808513632698e+04, norm = 5.45111312352230e-04, diff = 7.55649396388621e-03
iter = 58, step = 3.36609862551660e-01, func = 3.16808514415887e+04, norm = 3.85084775952345e-04, diff = 7.38962173858877e-03
iter = 59, step = 4.03931835061993e-01, func = 3.16808507264253e+04, norm = 3.05238006476745e-03, diff = 4.18596423184655e-02
iter = 60, step = 4.03931835061993e-01, func = 3.16808514529710e+04, norm = 1.61328070906948e-03, diff = 1.66628981007508e-02
iter = 61, step = 3.83735243308893e-01, func = 3.16808514346819e+04, norm = 7.99274408203247e-04, diff = 5.60678994446616e-03
iter = 62, step = 3.64548481143448e-01, func = 3.16808513255775e+04, norm = 1.12041047272921e-03, diff = 3.24372225452739e-03
iter = 63, step = 3.46321057086276e-01, func = 3.16808513553445e+04, norm = 9.66110125404316e-04, diff = 2.99242028820603e-03
iter = 64, step = 4.15585268503531e-01, func = 3.16808514784146e+04, norm = 6.72863702769068e-04, diff = 8.23527008813410e-03
iter = 65, step = 3.94806005078354e-01, func = 3.16808514655499e+04, norm = 3.85969935189539e-04, diff = 2.74122225371149e-03
iter = 66, step = 3.94806005078354e-01, func = 3.16808515153467e+04, norm = 3.40050038331755e-04, diff = 3.91564608294166e-03
iter = 67, step = 3.75065704824437e-01, func = 3.16808515331395e+04, norm = 9.07401829031334e-04, diff = 8.43705140345137e-04
iter = 68, step = 3.56312419583215e-01, func = 3.16808515476984e+04, norm = 4.98044364977738e-04, diff = 2.46989603216914e-03
iter = 69, step = 3.38496798604054e-01, func = 3.16808515358767e+04, norm = 2.58080531225537e-04, diff = 6.67735824297362e-04
iter = 70, step = 3.21571958673851e-01, func = 3.16808514950257e+04, norm = 2.39455957466984e-04, diff = 6.21899126398315e-04
iter = 71, step = 3.21571958673851e-01, func = 3.16808515474967e+04, norm = 1.74728993375541e-04, diff = 5.41157291998218e-04
iter = 72, step = 3.05493360740159e-01, func = 3.16808515426123e+04, norm = 1.51038001307688e-04, diff = 3.51421918940841e-04
iter = 73, step = 3.05493360740159e-01, func = 3.16808515605077e+04, norm = 1.20536074219752e-04, diff = 8.23141545734594e-04
iter = 74, step = 3.05493360740159e-01, func = 3.16808515567031e+04, norm = 8.82700202850836e-05, diff = 7.73545107673584e-04
iter = 75, step = 3.05493360740159e-01, func = 3.16808515531013e+04, norm = 2.68663786658343e-04, diff = 5.90131543547876e-04
iter = 76, step = 2.90218692703151e-01, func = 3.16808515571859e+04, norm = 1.48334610103042e-04, diff = 4.45656137637990e-04
iter = 77, step = 2.90218692703151e-01, func = 3.16808515477950e+04, norm = 2.84736409353183e-04, diff = 5.96011467876589e-04
iter = 78, step = 2.75707758067993e-01, func = 3.16808515485230e+04, norm = 1.64141628391562e-04, diff = 6.00263197149513e-04
iter = 79, step = 2.75707758067993e-01, func = 3.16808515622993e+04, norm = 8.92812574041775e-05, diff = 2.82343141725517e-04
iter = 80, step = 2.61922370164594e-01, func = 3.16808515655200e+04, norm = 4.33434353376728e-05, diff = 4.66236923701037e-04
iter = 81, step = 2.48826251656364e-01, func = 3.16808515517644e+04, norm = 2.29925830471537e-04, diff = 3.72629329210162e-04
iter = 82, step = 2.36384939073546e-01, func = 3.16808515704475e+04, norm = 1.14962915235769e-04, diff = 4.05376202137997e-04
iter = 83, step = 2.24565692119868e-01, func = 3.16808515703197e+04, norm = 4.41803230563021e-05, diff = 1.10256806682202e-04
iter = 84, step = 2.69478830543842e-01, func = 3.16808515775895e+04, norm = 9.04392958470006e-05, diff = 3.40313746421311e-04
iter = 85, step = 2.56004889016650e-01, func = 3.16808515761785e+04, norm = 5.60985629556390e-05, diff = 1.02210425361510e-04
iter = 86, step = 2.56004889016650e-01, func = 3.16808515733293e+04, norm = 1.00586106651112e-04, diff = 1.19247813205303e-04
iter = 87, step = 2.43204644565817e-01, func = 3.16808515679893e+04, norm = 8.64602739776245e-05, diff = 2.02679806391453e-04
iter = 88, step = 2.31044412337527e-01, func = 3.16808515734858e+04, norm = 3.81353871852730e-05, diff = 1.10205131446074e-04
iter = 89, step = 2.19492191720650e-01, func = 3.16808515750911e+04, norm = 3.68425507283648e-05, diff = 9.37930745492993e-05
iter = 90, step = 2.08517582134618e-01, func = 3.16808515759062e+04, norm = 2.68193609199975e-05, diff = 1.03979387884757e-04
iter = 91, step = 1.98091703027887e-01, func = 3.16808515751970e+04, norm = 2.87593736809095e-05, diff = 6.18152017501409e-05
iter = 92, step = 1.98091703027887e-01, func = 3.16808515780935e+04, norm = 1.43796868404548e-05, diff = 8.92079113727486e-05
iter = 93, step = 1.88187117876492e-01, func = 3.16808515778900e+04, norm = 4.94900601811399e-05, diff = 7.70377892863261e-05
iter = 94, step = 1.78777761982668e-01, func = 3.16808515781711e+04, norm = 3.08571337016351e-05, diff = 3.15593600468002e-05
iter = 95, step = 2.14533314379201e-01, func = 3.16808515776678e+04, norm = 4.15932103493314e-05, diff = 1.16988840071869e-04
iter = 96, step = 2.03806648660241e-01, func = 3.16808515788210e+04, norm = 2.58526761240536e-05, diff = 2.86261373018631e-05
iter = 97, step = 1.93616316227229e-01, func = 3.16808515775538e+04, norm = 4.04015465059276e-05, diff = 3.36996268957124e-05
iter = 98, step = 1.83935500415868e-01, func = 3.16808515777682e+04, norm = 2.86180421814627e-05, diff = 5.07890270159637e-05
iter = 99, step = 1.83935500415868e-01, func = 3.16808515783955e+04, norm = 2.65817110282150e-05, diff = 4.97096387490027e-05
iter = 100, step = 1.74738725395074e-01, func = 3.16808515785743e+04, norm = 1.11635700361652e-05, diff = 1.61505632770873e-05
iter = 101, step = 1.66001789125321e-01, func = 3.16808515786259e+04, norm = 1.16676920639739e-05, diff = 1.20512870349387e-05
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 3.168085e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 3, while k = 3 and n = 33
  UB from restricted IP = 144856 using centers : 4 28 11 
  UB from restricted IP = 54253.4 using centers : 18 0 9 
In iteration 0 of HessHeuristic, objective value of incumbent is = 54253.4
  UB from restricted IP = 170762 using centers : 17 10 24 
  UB from restricted IP = 34719.4 using centers : 21 0 32 
  UB from restricted IP = 32847 using centers : 21 0 7 
In iteration 1 of HessHeuristic, objective value of incumbent is = 32847
  UB from restricted IP = 92716.8 using centers : 6 8 18 
  UB from restricted IP = 49969.2 using centers : 9 8 0 
  UB from restricted IP = 32847 using centers : 21 7 0 
In iteration 2 of HessHeuristic, objective value of incumbent is = 32847
  UB from restricted IP = 162970 using centers : 15 7 11 
  UB from restricted IP = 52619.8 using centers : 0 10 19 
  UB from restricted IP = 32847 using centers : 0 21 7 
In iteration 3 of HessHeuristic, objective value of incumbent is = 32847
  UB from restricted IP = 96711.8 using centers : 32 24 22 
  UB from restricted IP = 35185.2 using centers : 0 10 7 
  UB from restricted IP = 32847 using centers : 0 21 7 
In iteration 4 of HessHeuristic, objective value of incumbent is = 32847
  UB from restricted IP = 85189.4 using centers : 30 9 16 
  UB from restricted IP = 57372.6 using centers : 18 0 3 
In iteration 5 of HessHeuristic, objective value of incumbent is = 32847
  UB from restricted IP = 64076.1 using centers : 8 16 18 
  UB from restricted IP = 34719.4 using centers : 32 21 0 
  UB from restricted IP = 32847 using centers : 7 21 0 
In iteration 6 of HessHeuristic, objective value of incumbent is = 32847
  UB from restricted IP = 77853.1 using centers : 28 29 10 
  UB from restricted IP = 35185.2 using centers : 0 7 10 
  UB from restricted IP = 32847 using centers : 0 7 21 
In iteration 7 of HessHeuristic, objective value of incumbent is = 32847
  UB from restricted IP = 147054 using centers : 24 14 9 
  UB from restricted IP = 58508.4 using centers : 28 0 9 
  UB from restricted IP = 57478.4 using centers : 28 0 29 
  UB from restricted IP = 35185.2 using centers : 10 0 7 
  UB from restricted IP = 32847 using centers : 21 0 7 
In iteration 8 of HessHeuristic, objective value of incumbent is = 32847
  UB from restricted IP = 99622.9 using centers : 30 25 21 
  UB from restricted IP = 32847 using centers : 0 7 21 
In iteration 9 of HessHeuristic, objective value of incumbent is = 32847
UB at end of HessHeuristic = 32847
UB of heuristicSolution = 32847
Best solution after 10 of HessHeuristic is 32847.05

Beginning LOCAL SEARCH with UB = 32847

Academic license - for non-commercial use only
# centers = 3, while k = 3 and n = 33
  checking neighbors of node 0
  checking neighbors of node 7
  checking neighbors of node 21
UB at end of local search heuristic = 32847
UB of heuristicSolution = 32847
Best solution after local search is 32847.05
Academic license - for non-commercial use only
# centers = 3, while k = 3 and n = 33
Optimize a model with 231 rows, 567 columns and 1842 nonzeros
Variable types: 468 continuous, 99 integer (99 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [5e+01, 5e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

MIP start did not produce a new incumbent solution

Presolve removed 77 rows and 232 columns
Presolve time: 0.00s
Presolved: 154 rows, 335 columns, 1152 nonzeros
Variable types: 285 continuous, 50 integer (50 binary)

Root relaxation: objective 3.187919e+04, 57 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 31879.1942    0   13          - 31879.1942      -     -    0s
Another try with MIP start
H    0     0                    32944.250963 31879.1942  3.23%     -    0s
     0     0 32783.5607    0    6 32944.2510 32783.5607  0.49%     -    0s
     0     0     cutoff    0      32944.2510 32944.2510  0.00%     -    0s

Explored 1 nodes (90 simplex iterations) in 0.01 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 32944.3 

Optimal solution found (tolerance 1.00e-04)
Best objective 3.294425096300e+04, best bound 3.294425096300e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 32944.3 using centers : 0 7 21 
UB at end of ContiguityHeuristic = 32944.3
UB of (contiguous) heuristicSolution = 32944.3

Number of variables fixed to zero = 992
Number of variables fixed to one  = 0
Number of variables not fixed     = 97
Number of centers left            = 5
Percentage of vars fixed = 0.91
Academic license - for non-commercial use only
Build hess : created 97 variables
Optimize a model with 225 rows, 130 columns and 492 nonzeros
Variable types: 33 continuous, 97 integer (97 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [4e+01, 6e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 3e+00]

Loaded MIP start with objective 32944.3

Presolve removed 188 rows and 83 columns
Presolve time: 0.00s
Presolved: 37 rows, 47 columns, 135 nonzeros
Variable types: 0 continuous, 47 integer (43 binary)

Root relaxation: objective 3.187370e+04, 12 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 31873.6997    0    3 32944.2510 31873.6997  3.25%     -    0s
     0     0 32717.1872    0    8 32944.2510 32717.1872  0.69%     -    0s
     0     0 32718.0785    0    8 32944.2510 32718.0785  0.69%     -    0s
     0     0 32869.9492    0   17 32944.2510 32869.9492  0.23%     -    0s
     0     0 32918.7796    0    1 32944.2510 32918.7796  0.08%     -    0s
     0     0     cutoff    0      32944.2510 32944.2510  0.00%     -    0s

Cutting planes:
  Gomory: 1
  Cover: 1
  Implied bound: 2
  Clique: 3
  Lazy constraints: 1

Explored 1 nodes (45 simplex iterations) in 0.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 32944.3 

Optimal solution found (tolerance 0.00e+00)
Best objective 3.294425096300e+04, best bound 3.294425096300e+04, gap 0.0000%
IP duration time: 0.004384 seconds
Total time elapsed: 0.103041 seconds
Number of callbacks: 4
Time in callbacks: 0.000059 seconds
Number of lazy constraints generated: 4
+ for state in $states
+ echo 'Running NV'
Running NV
+ /home/lykhovyd/progs/districting/districting myconfig.txt NV /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NV.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/NV/counties/graph/NV.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/NV/counties/graph/NV_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/NV/counties/graph/NV.population
state[2]        = NV
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NV.ralg_hot
nr_comp = 1
graph: 17 nodes, 35 edges (read)
Model input: L = 671763, U = 678513, k = 4.
Graph is connected.
Model input: total population = 2700551
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.22583674412415e+05, norm = 7.55320500879797e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.22583637253494e+05, norm = 4.76207497682848e+00, diff = 8.49077405254154e-01
iter = 3, step = 8.57375000000000e-01, func = 1.22584101530188e+05, norm = 4.50520120051736e+00, diff = 7.13246433077878e-01
iter = 4, step = 8.14506250000000e-01, func = 1.22584303063591e+05, norm = 3.87595887336152e+00, diff = 6.72073764948923e-01
iter = 5, step = 7.73780937500000e-01, func = 1.22583942618894e+05, norm = 5.43672961353225e+00, diff = 6.23214253011689e-01
iter = 6, step = 7.35091890625000e-01, func = 1.22584140833079e+05, norm = 4.23985270748589e+00, diff = 4.48429900983302e-01
iter = 7, step = 6.98337296093750e-01, func = 1.22584482128159e+05, norm = 3.80387929519013e+00, diff = 5.22606708643547e-01
iter = 8, step = 6.63420431289062e-01, func = 1.22584310873745e+05, norm = 2.75887478573889e+00, diff = 4.41510372848210e-01
iter = 9, step = 6.63420431289062e-01, func = 1.22584533507943e+05, norm = 2.18554457750895e+00, diff = 4.86750757345058e-01
iter = 10, step = 6.30249409724609e-01, func = 1.22584944912156e+05, norm = 1.08256137820406e+00, diff = 1.55801521848076e-01
iter = 11, step = 5.98736939238379e-01, func = 1.22584811769658e+05, norm = 1.62301843987503e+00, diff = 1.93075818337858e-01
iter = 12, step = 5.68800092276460e-01, func = 1.22584771131254e+05, norm = 1.80629235196827e+00, diff = 2.30016267356927e-01
iter = 13, step = 5.40360087662637e-01, func = 1.22585068346929e+05, norm = 1.07860182057925e+00, diff = 1.45177557189132e-01
iter = 14, step = 5.13342083279505e-01, func = 1.22585123360112e+05, norm = 6.66105506073860e-01, diff = 1.69968193167192e-01
iter = 15, step = 4.87674979115529e-01, func = 1.22585068493132e+05, norm = 6.37503612684667e-01, diff = 1.07132854112920e-01
iter = 16, step = 4.63291230159753e-01, func = 1.22585083192404e+05, norm = 7.16439060947880e-01, diff = 1.04143673954975e-01
iter = 17, step = 4.63291230159753e-01, func = 1.22585068202359e+05, norm = 6.10981223478208e-01, diff = 1.31854378150609e-01
iter = 18, step = 5.55949476191704e-01, func = 1.22585070871906e+05, norm = 3.11912568249667e+00, diff = 6.14594266043018e-01
iter = 19, step = 6.67139371430044e-01, func = 1.22585160809921e+05, norm = 1.56901996098647e+00, diff = 1.16526159793460e+00
iter = 20, step = 6.33782402858542e-01, func = 1.22585063963401e+05, norm = 5.58360563812319e-01, diff = 1.31581651248157e-01
iter = 21, step = 6.02093282715615e-01, func = 1.22585028567413e+05, norm = 5.96831158188646e-01, diff = 1.28068324570270e-01
iter = 22, step = 5.71988618579834e-01, func = 1.22585139766166e+05, norm = 3.34150799253040e-01, diff = 1.77977942193551e-01
iter = 23, step = 5.43389187650842e-01, func = 1.22585166445087e+05, norm = 2.52994337784147e-01, diff = 6.66263285355879e-02
iter = 24, step = 5.16219728268300e-01, func = 1.22585154573431e+05, norm = 1.75424988077133e-01, diff = 1.87922496525959e-01
iter = 25, step = 4.90408741854885e-01, func = 1.22585173435538e+05, norm = 1.67695592267466e-01, diff = 1.57281265943827e-01
iter = 26, step = 4.65888304762141e-01, func = 1.22585152611079e+05, norm = 1.93591201642060e-01, diff = 9.38219225713504e-02
iter = 27, step = 4.42593889524034e-01, func = 1.22585123002290e+05, norm = 1.31845488232289e+00, diff = 1.13659417116241e-01
iter = 28, step = 4.20464195047832e-01, func = 1.22585169891354e+05, norm = 6.62868215080097e-01, diff = 2.20174731616063e-01
iter = 29, step = 3.99440985295440e-01, func = 1.22585187033023e+05, norm = 9.16714692755136e-02, diff = 2.01721344543146e-01
iter = 30, step = 3.79468936030668e-01, func = 1.22585174842963e+05, norm = 1.26656340218474e-01, diff = 1.80297774268375e-01
iter = 31, step = 3.79468936030668e-01, func = 1.22585183926976e+05, norm = 1.00695017463780e-01, diff = 1.71764655800095e-01
iter = 32, step = 3.60495489229135e-01, func = 1.22585188604754e+05, norm = 8.28668979657693e-02, diff = 1.75816267732328e-01
iter = 33, step = 3.42470714767678e-01, func = 1.22585182207463e+05, norm = 1.08836295283394e-01, diff = 9.68410440413127e-02
iter = 34, step = 3.42470714767678e-01, func = 1.22585193790804e+05, norm = 5.44181476416968e-02, diff = 1.79682735341184e-01
iter = 35, step = 3.25347179029294e-01, func = 1.22585193353288e+05, norm = 1.06719342771566e+00, diff = 2.13767633116909e-01
iter = 36, step = 3.09079820077830e-01, func = 1.22585183817209e+05, norm = 1.90488188886697e+00, diff = 1.30768180805919e-01
iter = 37, step = 2.93625829073938e-01, func = 1.22585197512468e+05, norm = 9.83255151790745e-01, diff = 1.34510459771121e-01
iter = 38, step = 2.78944537620241e-01, func = 1.22585190326066e+05, norm = 6.84719104661897e-02, diff = 5.28416840215982e-02
iter = 39, step = 2.64997310739229e-01, func = 1.22585192956594e+05, norm = 1.02969666901671e-01, diff = 9.51915522516093e-02
iter = 40, step = 2.51747445202268e-01, func = 1.22585197439683e+05, norm = 5.41458499684461e-02, diff = 1.11946252522494e-01
iter = 41, step = 2.39160072942154e-01, func = 1.22585195152236e+05, norm = 5.37895615680664e-02, diff = 1.21053088798186e-01
iter = 42, step = 2.27202069295046e-01, func = 1.22585198679129e+05, norm = 4.49355464671052e-02, diff = 6.87883881239631e-02
iter = 43, step = 2.15841965830294e-01, func = 1.22585200569248e+05, norm = 2.74630201378049e-02, diff = 3.71107160002354e-02
iter = 44, step = 2.05049867538779e-01, func = 1.22585200517849e+05, norm = 2.89772718289000e-02, diff = 7.14836474183133e-02
iter = 45, step = 1.94797374161840e-01, func = 1.22585158279172e+05, norm = 1.27969126053455e+00, diff = 4.23222594541950e-02
iter = 46, step = 1.85057505453748e-01, func = 1.22585200854912e+05, norm = 6.40489329967674e-01, diff = 8.40433343260169e-02
iter = 47, step = 1.75804630181061e-01, func = 1.22585200950904e+05, norm = 4.00872401647585e-02, diff = 2.20745627986267e-02
iter = 48, step = 1.67014398672008e-01, func = 1.22585202398665e+05, norm = 2.08214452786088e-02, diff = 2.43096054086899e-02
iter = 49, step = 1.58663678738408e-01, func = 1.22585202275079e+05, norm = 2.09195679778064e-02, diff = 2.10638806938161e-02
iter = 50, step = 1.50730494801487e-01, func = 1.22585203140120e+05, norm = 1.22351890557836e-02, diff = 2.73920568104511e-02
iter = 51, step = 1.43193970061413e-01, func = 1.22585186848302e+05, norm = 4.84385536785153e-01, diff = 3.57677932840522e-02
iter = 52, step = 1.36034271558342e-01, func = 1.22585203372579e+05, norm = 2.42638300419855e-01, diff = 2.73362054417708e-02
iter = 53, step = 1.29232557980425e-01, func = 1.22585203148780e+05, norm = 2.85927884825484e-02, diff = 1.80528839118765e-02
iter = 54, step = 1.22770930081404e-01, func = 1.22585203501849e+05, norm = 1.37873458278646e-02, diff = 8.09072074229373e-03
iter = 55, step = 1.16632383577334e-01, func = 1.22585202093481e+05, norm = 2.84590109118494e-02, diff = 2.76093313234218e-02
iter = 56, step = 1.16632383577334e-01, func = 1.22585203676613e+05, norm = 1.83585885233065e-02, diff = 2.58195558405666e-02
iter = 57, step = 1.10800764398467e-01, func = 1.22585203838857e+05, norm = 9.37469456284300e-03, diff = 1.26810915058400e-02
iter = 58, step = 1.05260726178544e-01, func = 1.22585203883338e+05, norm = 6.24615688955553e-03, diff = 1.30798539589414e-02
iter = 59, step = 9.99976898696164e-02, func = 1.22585204023783e+05, norm = 9.88031615287267e-03, diff = 1.26030558512492e-02
iter = 60, step = 9.99976898696164e-02, func = 1.22585204286724e+05, norm = 5.81419547177134e-03, diff = 1.47219769238444e-02
iter = 61, step = 9.49978053761355e-02, func = 1.22585190581463e+05, norm = 5.98468904509156e-01, diff = 1.56806786187212e-02
iter = 62, step = 9.02479151073288e-02, func = 1.22585204245059e+05, norm = 2.99352497244486e-01, diff = 9.01330100080072e-03
iter = 63, step = 8.57355193519623e-02, func = 1.22585204086640e+05, norm = 1.48718877939540e-02, diff = 4.44638124427244e-03
iter = 64, step = 8.14487433843642e-02, func = 1.22585203308204e+05, norm = 1.18577622768253e-01, diff = 3.63693978274103e-03
iter = 65, step = 7.73763062151460e-02, func = 1.22585204349434e+05, norm = 5.92961742710488e-02, diff = 3.68986695379710e-03
iter = 66, step = 7.35074909043887e-02, func = 1.22585204386801e+05, norm = 1.17735267995578e-02, diff = 4.45566935960895e-03
iter = 67, step = 6.98321163591692e-02, func = 1.22585204384505e+05, norm = 7.53221275576858e-03, diff = 4.14365948003384e-03
iter = 68, step = 6.98321163591692e-02, func = 1.22585204323265e+05, norm = 4.61051920801296e-03, diff = 2.83514618779219e-03
iter = 69, step = 6.63405105412108e-02, func = 1.22585202168080e+05, norm = 2.85576922530803e-01, diff = 1.46382671284565e-03
iter = 70, step = 6.30234850141502e-02, func = 1.22585200209766e+05, norm = 2.93817313399949e-01, diff = 6.94680846343164e-03
iter = 71, step = 5.98723107634427e-02, func = 1.22585204400580e+05, norm = 1.08649285684901e-01, diff = 4.64736757904494e-03
iter = 72, step = 5.68786952252706e-02, func = 1.22585204349061e+05, norm = 3.97323148357403e-03, diff = 1.01009713889403e-03
iter = 73, step = 5.68786952252706e-02, func = 1.22585204431821e+05, norm = 4.89712220439721e-03, diff = 2.06609921323448e-03
iter = 74, step = 5.40347604640071e-02, func = 1.22585204436667e+05, norm = 2.31748240173056e-03, diff = 1.02291162979762e-03
iter = 75, step = 5.40347604640071e-02, func = 1.22585204486512e+05, norm = 1.49942874355639e-03, diff = 2.05263017515023e-03
iter = 76, step = 5.13330224408067e-02, func = 1.22585204492152e+05, norm = 2.45136433523110e-03, diff = 8.42384627762048e-04
iter = 77, step = 4.87663713187664e-02, func = 1.22585204080900e+05, norm = 9.27309686920390e-02, diff = 4.83344735132099e-04
iter = 78, step = 4.63280527528280e-02, func = 1.22585204530464e+05, norm = 4.63744023008444e-02, diff = 9.13616934429001e-04
iter = 79, step = 4.40116501151866e-02, func = 1.22585204316680e+05, norm = 5.43017347294170e-02, diff = 4.88356793258323e-04
iter = 80, step = 4.18110676094273e-02, func = 1.22585204532185e+05, norm = 2.73300526973317e-02, diff = 8.06138273730968e-04
iter = 81, step = 3.97205142289559e-02, func = 1.22585204443723e+05, norm = 6.17469542761449e-03, diff = 2.67026431866891e-04
iter = 82, step = 4.76646170747471e-02, func = 1.22585204497874e+05, norm = 3.27401015887750e-03, diff = 6.38683348122510e-04
iter = 83, step = 4.76646170747471e-02, func = 1.22585204520087e+05, norm = 1.89733126194592e-03, diff = 4.38146367229676e-04
iter = 84, step = 4.76646170747471e-02, func = 1.22585204542887e+05, norm = 1.28567332474756e-03, diff = 8.38565726800727e-04
iter = 85, step = 4.52813862210098e-02, func = 1.22585204460787e+05, norm = 2.92792742522562e-02, diff = 4.02279635984008e-04
iter = 86, step = 4.30173169099593e-02, func = 1.22585204558998e+05, norm = 1.46870963873614e-02, diff = 5.12484926159910e-04
iter = 87, step = 4.08664510644613e-02, func = 1.22585204545025e+05, norm = 2.21211590494297e-03, diff = 7.23166789142948e-04
iter = 88, step = 3.88231285112382e-02, func = 1.22585204564613e+05, norm = 9.23487160332941e-04, diff = 2.98918977083231e-04
iter = 89, step = 3.88231285112382e-02, func = 1.22585204573599e+05, norm = 1.39292338052592e-03, diff = 8.23651748812835e-04
iter = 90, step = 3.68819720856763e-02, func = 1.22585204575883e+05, norm = 2.97181466969607e-03, diff = 4.49349775631587e-04
iter = 91, step = 3.50378734813925e-02, func = 1.22585204577056e+05, norm = 1.62933804411380e-03, diff = 5.06080813972027e-04
iter = 92, step = 3.32859798073229e-02, func = 1.22585204582440e+05, norm = 1.35145782840275e-03, diff = 8.39633285213227e-05
iter = 93, step = 3.16216808169567e-02, func = 1.22585204576599e+05, norm = 9.12018740986719e-04, diff = 7.64400465656721e-05
iter = 94, step = 3.16216808169567e-02, func = 1.22585204584646e+05, norm = 6.31711920307523e-04, diff = 1.55605848509758e-04
iter = 95, step = 3.00405967761089e-02, func = 1.22585204584773e+05, norm = 5.93218504516788e-04, diff = 1.36569300393330e-04
iter = 96, step = 2.85385669373035e-02, func = 1.22585204481755e+05, norm = 2.31793164948515e-02, diff = 6.72600043601636e-05
iter = 97, step = 2.71116385904383e-02, func = 1.22585204589042e+05, norm = 1.15950165726753e-02, diff = 1.34161272252182e-04
iter = 98, step = 2.57560566609164e-02, func = 1.22585204590349e+05, norm = 5.13155972477421e-04, diff = 9.24603615051317e-05
iter = 99, step = 2.44682538278705e-02, func = 1.22585204593606e+05, norm = 4.81805601021964e-04, diff = 5.72175795994914e-05
iter = 100, step = 2.32448411364770e-02, func = 1.22585204594210e+05, norm = 2.93428895939492e-04, diff = 6.61860812378457e-05
iter = 101, step = 2.20825990796532e-02, func = 1.22585204592490e+05, norm = 4.50983124190192e-04, diff = 8.78945768086760e-05
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.225852e+05
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 17
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 1.21787e-320
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 289
Number of centers left            = 17
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 289 variables
Optimize a model with 341 rows, 306 columns and 1224 nonzeros
Variable types: 17 continuous, 289 integer (289 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+06]
  Objective range  [6e+00, 8e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Presolve removed 0 rows and 18 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.000351 seconds
Total time elapsed: 0.007550 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running NY'
Running NY
+ /home/lykhovyd/progs/districting/districting myconfig.txt NY /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NY.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/NY/counties/graph/NY.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/NY/counties/graph/NY_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/NY/counties/graph/NY.population
state[2]        = NY
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/NY.ralg_hot
nr_comp = 1
graph: 62 nodes, 145 edges (read)
Model input: L = 714119, U = 721296, k = 27.
Graph is connected.
Model input: total population = 19378102
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 4.34739405097147e+05, norm = 2.32038459333207e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 4.34741678309859e+05, norm = 1.48466202737263e+01, diff = 7.36760484345550e-01
iter = 3, step = 8.57375000000000e-01, func = 4.34739775926527e+05, norm = 1.82846766940856e+01, diff = 7.85602284312342e-01
iter = 4, step = 8.14506250000000e-01, func = 4.34740725162941e+05, norm = 1.32424088765572e+01, diff = 5.95589387608732e-01
iter = 5, step = 7.73780937500000e-01, func = 4.34741012774824e+05, norm = 1.30393194035889e+01, diff = 6.57599559446107e-01
iter = 6, step = 7.35091890625000e-01, func = 4.34742490175878e+05, norm = 1.19777553924975e+01, diff = 5.89936165008472e-01
iter = 7, step = 6.98337296093750e-01, func = 4.34742046420695e+05, norm = 1.34261046904564e+01, diff = 5.84287664215396e-01
iter = 8, step = 6.63420431289062e-01, func = 4.34742595013985e+05, norm = 1.16533321157838e+01, diff = 5.17902771212230e-01
iter = 9, step = 6.30249409724609e-01, func = 4.34742625966859e+05, norm = 1.14410648712235e+01, diff = 5.08165283001602e-01
iter = 10, step = 5.98736939238379e-01, func = 4.34742312613266e+05, norm = 1.43504805433211e+01, diff = 4.48166540101495e-01
iter = 11, step = 5.68800092276460e-01, func = 4.34742381836721e+05, norm = 1.23576811854734e+01, diff = 4.10008285590293e-01
iter = 12, step = 5.40360087662637e-01, func = 4.34742535876551e+05, norm = 1.14207782718395e+01, diff = 4.28097595464179e-01
iter = 13, step = 5.13342083279505e-01, func = 4.34742411430731e+05, norm = 1.07253514732856e+01, diff = 3.90453272649649e-01
iter = 14, step = 4.87674979115529e-01, func = 4.34742283970528e+05, norm = 1.14777465193401e+01, diff = 3.82127358502751e-01
iter = 15, step = 4.63291230159753e-01, func = 4.34743094449416e+05, norm = 1.20273013179063e+01, diff = 3.26723054830769e-01
iter = 16, step = 4.40126668651765e-01, func = 4.34743111875435e+05, norm = 1.07524350153544e+01, diff = 3.22589965145277e-01
iter = 17, step = 4.18120335219177e-01, func = 4.34742857050152e+05, norm = 1.18652409399927e+01, diff = 3.43643492585717e-01
iter = 18, step = 3.97214318458218e-01, func = 4.34743228661779e+05, norm = 9.42114057675714e+00, diff = 2.79812014168793e-01
iter = 19, step = 3.77353602535307e-01, func = 4.34743512971177e+05, norm = 1.15707691356432e+01, diff = 2.85955766416259e-01
iter = 20, step = 3.58485922408542e-01, func = 4.34743609485662e+05, norm = 8.49489224133759e+00, diff = 2.54349568152115e-01
iter = 21, step = 3.40561626288115e-01, func = 4.34743325875193e+05, norm = 9.40062149390899e+00, diff = 2.84788494870131e-01
iter = 22, step = 3.23533544973709e-01, func = 4.34743762450768e+05, norm = 9.46512417077028e+00, diff = 2.31592237823504e-01
iter = 23, step = 3.07356867725023e-01, func = 4.34744179943323e+05, norm = 7.19833605712589e+00, diff = 2.09740492299299e-01
iter = 24, step = 2.91989024338772e-01, func = 4.34743637176210e+05, norm = 1.19971688473252e+01, diff = 2.31484880845752e-01
iter = 25, step = 2.77389573121834e-01, func = 4.34744024529659e+05, norm = 9.16801837997109e+00, diff = 1.78573920312392e-01
iter = 26, step = 2.63520094465742e-01, func = 4.34744260188874e+05, norm = 7.03067969350340e+00, diff = 1.96625933999880e-01
iter = 27, step = 2.50344089742455e-01, func = 4.34743911713036e+05, norm = 1.19751195008698e+01, diff = 1.88809026590744e-01
iter = 28, step = 2.37826885255332e-01, func = 4.34744176167171e+05, norm = 9.19616336318501e+00, diff = 1.49115090798158e-01
iter = 29, step = 2.25935540992565e-01, func = 4.34744263854701e+05, norm = 8.15000649534758e+00, diff = 1.65024904795962e-01
iter = 30, step = 2.14638763942937e-01, func = 4.34744437778313e+05, norm = 8.66948067074678e+00, diff = 1.60378910631631e-01
iter = 31, step = 2.03906825745790e-01, func = 4.34744488219976e+05, norm = 7.30188653851936e+00, diff = 1.28083745725270e-01
iter = 32, step = 1.93711484458501e-01, func = 4.34744438767996e+05, norm = 7.49408755879574e+00, diff = 1.31949310287428e-01
iter = 33, step = 1.84025910235576e-01, func = 4.34744478430172e+05, norm = 8.31233900718677e+00, diff = 1.15710327219283e-01
iter = 34, step = 1.74824614723797e-01, func = 4.34744662200174e+05, norm = 6.83109455057158e+00, diff = 1.10426129755816e-01
iter = 35, step = 1.66083383987607e-01, func = 4.34744416402923e+05, norm = 9.47887222714449e+00, diff = 1.12933699882005e-01
iter = 36, step = 1.57779214788227e-01, func = 4.34744678965135e+05, norm = 6.84399968081099e+00, diff = 9.62443838114480e-02
iter = 37, step = 1.49890254048815e-01, func = 4.34744665012987e+05, norm = 6.81271859948937e+00, diff = 1.07673452370392e-01
iter = 38, step = 1.42395741346375e-01, func = 4.34744698131791e+05, norm = 8.92544190050655e+00, diff = 9.63033078233853e-02
iter = 39, step = 1.35275954279056e-01, func = 4.34744778086471e+05, norm = 7.04836753893007e+00, diff = 7.90277099659067e-02
iter = 40, step = 1.28512156565103e-01, func = 4.34744778812584e+05, norm = 5.54854050109560e+00, diff = 9.14451440207037e-02
iter = 41, step = 1.22086548736848e-01, func = 4.34744617985400e+05, norm = 9.11701257083046e+00, diff = 8.23973506425329e-02
iter = 42, step = 1.15982221300006e-01, func = 4.34744769473083e+05, norm = 6.81638074232814e+00, diff = 6.54983337905029e-02
iter = 43, step = 1.10183110235005e-01, func = 4.34744807165525e+05, norm = 7.83210293550238e+00, diff = 6.98739354169994e-02
iter = 44, step = 1.04673954723255e-01, func = 4.34744846448941e+05, norm = 6.84117515914155e+00, diff = 6.53454500416020e-02
iter = 45, step = 9.94402569870922e-02, func = 4.34744833828168e+05, norm = 6.62245135319300e+00, diff = 7.20351390245557e-02
iter = 46, step = 9.44682441377376e-02, func = 4.34744826252584e+05, norm = 5.80764816645723e+00, diff = 5.62043339694873e-02
iter = 47, step = 8.97448319308507e-02, func = 4.34744921301053e+05, norm = 5.97937389577801e+00, diff = 5.23876136493415e-02
iter = 48, step = 8.52575903343082e-02, func = 4.34744932894709e+05, norm = 5.19719324416793e+00, diff = 5.13403678726057e-02
iter = 49, step = 8.09947108175928e-02, func = 4.34744910944376e+05, norm = 4.52813079000376e+00, diff = 4.61922194473926e-02
iter = 50, step = 7.69449752767131e-02, func = 4.34744961497483e+05, norm = 5.32862192700774e+00, diff = 3.62255047725779e-02
iter = 51, step = 7.30977265128775e-02, func = 4.34744955451483e+05, norm = 6.42609617281317e+00, diff = 3.71447386054115e-02
iter = 52, step = 6.94428401872336e-02, func = 4.34744977563310e+05, norm = 4.76818037586525e+00, diff = 3.97857625414224e-02
iter = 53, step = 6.59706981778719e-02, func = 4.34744977828079e+05, norm = 4.20787387257049e+00, diff = 4.06066983794807e-02
iter = 54, step = 6.26721632689783e-02, func = 4.34744945711861e+05, norm = 4.02879344034441e+00, diff = 3.03356845389928e-02
iter = 55, step = 6.26721632689783e-02, func = 4.34744959073932e+05, norm = 4.55966060157687e+00, diff = 5.98977487803335e-02
iter = 56, step = 5.95385551055294e-02, func = 4.34744968534742e+05, norm = 4.36033573706627e+00, diff = 3.19965811760985e-02
iter = 57, step = 5.65616273502529e-02, func = 4.34744997378681e+05, norm = 5.53999683193319e+00, diff = 2.75373518259130e-02
iter = 58, step = 5.37335459827403e-02, func = 4.34745006773383e+05, norm = 5.11430068560452e+00, diff = 3.00108236720455e-02
iter = 59, step = 5.10468686836033e-02, func = 4.34745011546887e+05, norm = 4.70463148367791e+00, diff = 3.01796055787501e-02
iter = 60, step = 4.84945252494231e-02, func = 4.34745042883799e+05, norm = 3.14948268368618e+00, diff = 2.40100744402014e-02
iter = 61, step = 4.60697989869519e-02, func = 4.34745005958839e+05, norm = 5.29867572845583e+00, diff = 2.64243681920611e-02
iter = 62, step = 4.37663090376043e-02, func = 4.34745034665197e+05, norm = 4.99243671829842e+00, diff = 2.49961958490140e-02
iter = 63, step = 4.15779935857241e-02, func = 4.34745073365538e+05, norm = 3.25606014013083e+00, diff = 2.00141361401691e-02
iter = 64, step = 3.94990939064379e-02, func = 4.34745052206111e+05, norm = 3.83372014840893e+00, diff = 2.05086133776195e-02
iter = 65, step = 3.75241392111160e-02, func = 4.34745054484785e+05, norm = 3.85399162140592e+00, diff = 1.75098481139084e-02
iter = 66, step = 3.56479322505602e-02, func = 4.34745065149077e+05, norm = 3.99162465956595e+00, diff = 1.65269719543926e-02
iter = 67, step = 3.38655356380322e-02, func = 4.34745078132668e+05, norm = 3.45725540895209e+00, diff = 1.73329351632309e-02
iter = 68, step = 3.21722588561306e-02, func = 4.34745069691815e+05, norm = 4.14466824675178e+00, diff = 1.62661181953551e-02
iter = 69, step = 3.05636459133241e-02, func = 4.34745084562034e+05, norm = 3.05173707370108e+00, diff = 1.34849339180325e-02
iter = 70, step = 2.90354636176579e-02, func = 4.34745070160468e+05, norm = 3.92425823785422e+00, diff = 1.74559655872573e-02
iter = 71, step = 2.75836904367750e-02, func = 4.34745083709845e+05, norm = 3.25924020657397e+00, diff = 1.16046578890505e-02
iter = 72, step = 2.62045059149362e-02, func = 4.34745092536178e+05, norm = 3.40715827569779e+00, diff = 1.33766239733315e-02
iter = 73, step = 2.48942806191894e-02, func = 4.34745089797206e+05, norm = 3.09520706049529e+00, diff = 1.16097986808105e-02
iter = 74, step = 2.36495665882299e-02, func = 4.34745088836074e+05, norm = 3.47443606686369e+00, diff = 1.40626537471294e-02
iter = 75, step = 2.24670882588184e-02, func = 4.34745097153313e+05, norm = 2.99566109409378e+00, diff = 9.12492563511198e-03
iter = 76, step = 2.13437338458775e-02, func = 4.34745094804493e+05, norm = 2.82500307759917e+00, diff = 1.28462556165547e-02
iter = 77, step = 2.02765471535836e-02, func = 4.34745102038736e+05, norm = 3.03105918547035e+00, diff = 9.62040971289669e-03
iter = 78, step = 1.92627197959044e-02, func = 4.34745097138108e+05, norm = 4.47141444947619e+00, diff = 9.78789805419795e-03
iter = 79, step = 1.82995838061092e-02, func = 4.34745104186134e+05, norm = 3.15027109521019e+00, diff = 7.39196704163590e-03
iter = 80, step = 1.73846046158038e-02, func = 4.34745103512224e+05, norm = 3.40201770518738e+00, diff = 9.15919130163596e-03
iter = 81, step = 1.65153743850136e-02, func = 4.34745103386066e+05, norm = 2.92732697843950e+00, diff = 8.29661130953256e-03
iter = 82, step = 1.56896056657629e-02, func = 4.34745104114104e+05, norm = 2.89114619950266e+00, diff = 7.59792628567983e-03
iter = 83, step = 1.49051253824747e-02, func = 4.34745111608814e+05, norm = 2.29710474447271e+00, diff = 6.94514165304512e-03
iter = 84, step = 1.41598691133510e-02, func = 4.34745112953893e+05, norm = 3.13448060491035e+00, diff = 7.54468730667262e-03
iter = 85, step = 1.34518756576835e-02, func = 4.34745112283881e+05, norm = 3.16641240654169e+00, diff = 4.44460139746721e-03
iter = 86, step = 1.27792818747993e-02, func = 4.34745111270881e+05, norm = 2.55560945963042e+00, diff = 6.55424048118750e-03
iter = 87, step = 1.21403177810593e-02, func = 4.34745112098923e+05, norm = 2.66932990082290e+00, diff = 5.48356851370313e-03
iter = 88, step = 1.15333018920064e-02, func = 4.34745114670922e+05, norm = 2.55483030960946e+00, diff = 4.02898274219748e-03
iter = 89, step = 1.09566367974060e-02, func = 4.34745116055562e+05, norm = 2.67822388621467e+00, diff = 4.98880050584554e-03
iter = 90, step = 1.04088049575357e-02, func = 4.34745119599278e+05, norm = 2.31455766115988e+00, diff = 4.39095040808289e-03
iter = 91, step = 9.88836470965895e-03, func = 4.34745118960291e+05, norm = 2.22824284915920e+00, diff = 4.59506442749494e-03
iter = 92, step = 9.39394647417600e-03, func = 4.34745118759895e+05, norm = 2.12192259818216e+00, diff = 4.40547472859797e-03
iter = 93, step = 8.92424915046720e-03, func = 4.34745119979267e+05, norm = 1.98242160528472e+00, diff = 4.07130872915498e-03
iter = 94, step = 8.47803669294384e-03, func = 4.34745120532540e+05, norm = 1.73716525111157e+00, diff = 3.20425804894599e-03
iter = 95, step = 8.05413485829665e-03, func = 4.34745118836000e+05, norm = 3.21946730243443e+00, diff = 3.24797726454465e-03
iter = 96, step = 7.65142811538181e-03, func = 4.34745121291626e+05, norm = 3.27076477254975e+00, diff = 2.99075560761645e-03
iter = 97, step = 7.26885670961272e-03, func = 4.34745123435202e+05, norm = 2.35334536534841e+00, diff = 2.81684865584659e-03
iter = 98, step = 6.90541387413209e-03, func = 4.34745122451803e+05, norm = 1.92728859163452e+00, diff = 3.45270213990228e-03
iter = 99, step = 6.56014318042548e-03, func = 4.34745122774617e+05, norm = 2.04446851603331e+00, diff = 2.80205716686719e-03
iter = 100, step = 6.56014318042548e-03, func = 4.34745123852719e+05, norm = 1.82472850455786e+00, diff = 4.79468219846380e-03
iter = 101, step = 6.23213602140421e-03, func = 4.34745123633218e+05, norm = 1.94662953236231e+00, diff = 2.15134140353954e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 4.347452e+05
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 27, while k = 27 and n = 62
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 1.57143e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 3844
Number of centers left            = 62
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 3844 variables
Optimize a model with 4031 rows, 3906 columns and 15624 nonzeros
Variable types: 62 continuous, 3844 integer (3844 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+06]
  Objective range  [1e+01, 6e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 3e+01]
Presolve removed 0 rows and 567 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.002606 seconds
Total time elapsed: 0.059777 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running OH'
Running OH
+ /home/lykhovyd/progs/districting/districting myconfig.txt OH /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/OH.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/OH/counties/graph/OH.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/OH/counties/graph/OH_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/OH/counties/graph/OH.population
state[2]        = OH
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/OH.ralg_hot
nr_comp = 1
graph: 88 nodes, 227 edges (read)
Model input: L = 717427, U = 724636, k = 16.
Graph is connected.
Model input: total population = 11536504
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.57447202524673e+04, norm = 1.56571312910062e+01, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 1.57447838170898e+04, norm = 9.42246993021216e+00, diff = 2.98811456822688e+00
iter = 3, step = 1.08300000000000e+00, func = 1.57445038517813e+04, norm = 8.33880570593677e+00, diff = 9.41689462597476e-01
iter = 4, step = 1.08300000000000e+00, func = 1.57440610021822e+04, norm = 1.02733344704442e+01, diff = 1.67821127178050e+00
iter = 5, step = 1.08300000000000e+00, func = 1.57459331221473e+04, norm = 8.29897854676895e+00, diff = 1.44752225756944e+00
iter = 6, step = 1.02885000000000e+00, func = 1.57470878640400e+04, norm = 8.28110089254098e+00, diff = 7.87290651094938e-01
iter = 7, step = 9.77407500000000e-01, func = 1.57475459240802e+04, norm = 6.87132859226648e+00, diff = 7.57901113690477e-01
iter = 8, step = 9.28537125000000e-01, func = 1.57483989515614e+04, norm = 6.69423436222726e+00, diff = 7.61045744468959e-01
iter = 9, step = 8.82110268750000e-01, func = 1.57481893914291e+04, norm = 7.89447383591668e+00, diff = 6.91640644629724e-01
iter = 10, step = 8.38004755312500e-01, func = 1.57485403853467e+04, norm = 6.26599550729905e+00, diff = 5.90949167189050e-01
iter = 11, step = 7.96104517546875e-01, func = 1.57485924244335e+04, norm = 5.78616961392822e+00, diff = 6.17078120077119e-01
iter = 12, step = 7.56299291669531e-01, func = 1.57490779814459e+04, norm = 5.24685301629733e+00, diff = 5.91647654151799e-01
iter = 13, step = 7.18484327086054e-01, func = 1.57487140278139e+04, norm = 6.71429748960732e+00, diff = 5.24454303366953e-01
iter = 14, step = 6.82560110731752e-01, func = 1.57491247216848e+04, norm = 5.66552266291162e+00, diff = 4.51148501431117e-01
iter = 15, step = 6.48432105195164e-01, func = 1.57491262795590e+04, norm = 6.03603772042509e+00, diff = 4.99533676790547e-01
iter = 16, step = 6.16010499935406e-01, func = 1.57492392268683e+04, norm = 5.51656812580320e+00, diff = 4.49027018194220e-01
iter = 17, step = 5.85209974938635e-01, func = 1.57491140348130e+04, norm = 6.37689798114094e+00, diff = 4.31332920922556e-01
iter = 18, step = 5.55949476191704e-01, func = 1.57494561113204e+04, norm = 5.92986462477197e+00, diff = 4.02529127079906e-01
iter = 19, step = 5.28152002382118e-01, func = 1.57495082353461e+04, norm = 6.81859620382806e+00, diff = 4.06156153599517e-01
iter = 20, step = 5.01744402263013e-01, func = 1.57496423647185e+04, norm = 5.67706737683733e+00, diff = 3.59916271119482e-01
iter = 21, step = 4.76657182149862e-01, func = 1.57496605419854e+04, norm = 5.33926307003591e+00, diff = 3.62939147686689e-01
iter = 22, step = 4.52824323042369e-01, func = 1.57494303890843e+04, norm = 6.20755365993553e+00, diff = 3.14528030379153e-01
iter = 23, step = 4.30183106890250e-01, func = 1.57498057362850e+04, norm = 4.90530278808640e+00, diff = 2.89106168831058e-01
iter = 24, step = 4.08673951545738e-01, func = 1.57499470364978e+04, norm = 4.87190059255627e+00, diff = 2.86665627894918e-01
iter = 25, step = 3.88240253968451e-01, func = 1.57498970801731e+04, norm = 5.10820626997069e+00, diff = 2.50237401452784e-01
iter = 26, step = 3.68828241270028e-01, func = 1.57499473503918e+04, norm = 4.52615272371441e+00, diff = 2.44172531726393e-01
iter = 27, step = 3.50386829206527e-01, func = 1.57498096114771e+04, norm = 4.56758208113618e+00, diff = 2.63238541246821e-01
iter = 28, step = 3.32867487746201e-01, func = 1.57499542041223e+04, norm = 4.09796500346465e+00, diff = 2.31423470175389e-01
iter = 29, step = 3.16224113358890e-01, func = 1.57500636052798e+04, norm = 4.33332025745612e+00, diff = 2.17439743425111e-01
iter = 30, step = 3.00412907690946e-01, func = 1.57500521594483e+04, norm = 4.63573486436061e+00, diff = 2.06018397784532e-01
iter = 31, step = 2.85392262306399e-01, func = 1.57501906173309e+04, norm = 4.14299751301460e+00, diff = 1.96671746359849e-01
iter = 32, step = 2.71122649191079e-01, func = 1.57501167331517e+04, norm = 4.52035779090070e+00, diff = 1.88492987288597e-01
iter = 33, step = 2.57566516731525e-01, func = 1.57501549941112e+04, norm = 4.04048836185490e+00, diff = 1.68929623644278e-01
iter = 34, step = 2.44688190894949e-01, func = 1.57502814330764e+04, norm = 3.40466508403458e+00, diff = 1.75155250717604e-01
iter = 35, step = 2.32453781350201e-01, func = 1.57502094150685e+04, norm = 4.07234557042165e+00, diff = 1.51508676046837e-01
iter = 36, step = 2.20831092282691e-01, func = 1.57502355425460e+04, norm = 3.97749505128938e+00, diff = 1.41734275412388e-01
iter = 37, step = 2.09789537668556e-01, func = 1.57503593037378e+04, norm = 2.96587548133012e+00, diff = 1.39019318516124e-01
iter = 38, step = 1.99300060785129e-01, func = 1.57503296560064e+04, norm = 3.43924960596095e+00, diff = 1.31718445503763e-01
iter = 39, step = 1.89335057745872e-01, func = 1.57503807229305e+04, norm = 3.59259911225329e+00, diff = 1.28741453101301e-01
iter = 40, step = 1.79868304858579e-01, func = 1.57503717853982e+04, norm = 3.66167678820757e+00, diff = 1.10201804471505e-01
iter = 41, step = 1.70874889615650e-01, func = 1.57503895178433e+04, norm = 3.13283535039701e+00, diff = 1.10601999153876e-01
iter = 42, step = 1.62331145134867e-01, func = 1.57504152342387e+04, norm = 2.63913596263922e+00, diff = 1.05748201144371e-01
iter = 43, step = 1.54214587878124e-01, func = 1.57504139394200e+04, norm = 2.89674016393975e+00, diff = 9.26463745929529e-02
iter = 44, step = 1.46503858484218e-01, func = 1.57503901669179e+04, norm = 2.53330757464149e+00, diff = 9.50099156574632e-02
iter = 45, step = 1.39178665560007e-01, func = 1.57504086071523e+04, norm = 3.49198153557238e+00, diff = 8.72649799789676e-02
iter = 46, step = 1.32219732282006e-01, func = 1.57504540649858e+04, norm = 2.45497647740244e+00, diff = 7.35653836554711e-02
iter = 47, step = 1.25608745667906e-01, func = 1.57504767660394e+04, norm = 3.18112118051318e+00, diff = 8.20019795691885e-02
iter = 48, step = 1.19328308384511e-01, func = 1.57504908947119e+04, norm = 2.29364678043486e+00, diff = 6.66788045057705e-02
iter = 49, step = 1.13361892965285e-01, func = 1.57504706534569e+04, norm = 2.42725412343774e+00, diff = 6.49795837086528e-02
iter = 50, step = 1.07693798317021e-01, func = 1.57504853287554e+04, norm = 2.20600323585043e+00, diff = 5.70510292325611e-02
iter = 51, step = 1.02309108401170e-01, func = 1.57505170111001e+04, norm = 2.04044378037061e+00, diff = 5.73326814836302e-02
iter = 52, step = 9.71936529811114e-02, func = 1.57505115043450e+04, norm = 2.88422203531163e+00, diff = 4.75596305612622e-02
iter = 53, step = 9.23339703320558e-02, func = 1.57505461485357e+04, norm = 2.11709467045578e+00, diff = 4.88683953440021e-02
iter = 54, step = 8.77172718154530e-02, func = 1.57505186066774e+04, norm = 2.52383437542714e+00, diff = 5.28717218562256e-02
iter = 55, step = 8.33314082246804e-02, func = 1.57505382512399e+04, norm = 2.44340195811206e+00, diff = 4.61094818729475e-02
iter = 56, step = 7.91648378134463e-02, func = 1.57505444774928e+04, norm = 2.15390626829636e+00, diff = 4.83287376206686e-02
iter = 57, step = 7.52065959227740e-02, func = 1.57505480309901e+04, norm = 2.00555278026275e+00, diff = 4.20749981284121e-02
iter = 58, step = 7.14462661266353e-02, func = 1.57505399968041e+04, norm = 1.95199905015626e+00, diff = 4.30307913522861e-02
iter = 59, step = 6.78739528203035e-02, func = 1.57505657757251e+04, norm = 1.84887669986731e+00, diff = 3.25216110009537e-02
iter = 60, step = 6.44802551792883e-02, func = 1.57505783091351e+04, norm = 1.78248995238212e+00, diff = 3.29830066839571e-02
iter = 61, step = 6.12562424203239e-02, func = 1.57505745300713e+04, norm = 1.92280983927613e+00, diff = 3.62169800502766e-02
iter = 62, step = 5.81934302993077e-02, func = 1.57505671840855e+04, norm = 2.07124074068883e+00, diff = 3.45341084576161e-02
iter = 63, step = 5.52837587843423e-02, func = 1.57505759741553e+04, norm = 1.98156055723050e+00, diff = 2.59460981288054e-02
iter = 64, step = 5.25195708451252e-02, func = 1.57505961246750e+04, norm = 1.71950860203420e+00, diff = 3.07468374086808e-02
iter = 65, step = 4.98935923028690e-02, func = 1.57505956363152e+04, norm = 1.36000271433393e+00, diff = 2.26142347529950e-02
iter = 66, step = 4.73989126877255e-02, func = 1.57505881945622e+04, norm = 1.63775362797434e+00, diff = 2.91909712871108e-02
iter = 67, step = 4.50289670533392e-02, func = 1.57506024125080e+04, norm = 1.59197278650303e+00, diff = 2.10609655883206e-02
iter = 68, step = 4.27775187006723e-02, func = 1.57506063396193e+04, norm = 1.55381747909554e+00, diff = 1.65394595977584e-02
iter = 69, step = 4.06386427656386e-02, func = 1.57506043354481e+04, norm = 1.67335082441551e+00, diff = 2.47758625751786e-02
iter = 70, step = 3.86067106273567e-02, func = 1.57506141114725e+04, norm = 1.31182013727516e+00, diff = 1.83054748195510e-02
iter = 71, step = 3.66763750959889e-02, func = 1.57506092801353e+04, norm = 1.73341003621745e+00, diff = 2.17691965641699e-02
iter = 72, step = 3.48425563411894e-02, func = 1.57506152147475e+04, norm = 1.34663901308138e+00, diff = 1.49456009820222e-02
iter = 73, step = 3.31004285241300e-02, func = 1.57506180227250e+04, norm = 1.08348674583182e+00, diff = 1.66751685393448e-02
iter = 74, step = 3.14454070979235e-02, func = 1.57506188268430e+04, norm = 1.35099773567206e+00, diff = 1.51202378146385e-02
iter = 75, step = 2.98731367430273e-02, func = 1.57506195657354e+04, norm = 1.43562581663981e+00, diff = 1.63675518596472e-02
iter = 76, step = 2.83794799058759e-02, func = 1.57506271965754e+04, norm = 1.58250581945513e+00, diff = 1.40385274287123e-02
iter = 77, step = 2.69605059105821e-02, func = 1.57506290254767e+04, norm = 1.30057856989135e+00, diff = 1.28155311046062e-02
iter = 78, step = 2.56124806150530e-02, func = 1.57506283556481e+04, norm = 1.18584902088931e+00, diff = 1.24916098632845e-02
iter = 79, step = 2.43318565843004e-02, func = 1.57506268284437e+04, norm = 1.56306686366288e+00, diff = 1.07254314766257e-02
iter = 80, step = 2.31152637550853e-02, func = 1.57506304432528e+04, norm = 1.54785867705573e+00, diff = 9.87755887058701e-03
iter = 81, step = 2.19595005673311e-02, func = 1.57506335982050e+04, norm = 1.26695934846593e+00, diff = 9.90161438251215e-03
iter = 82, step = 2.08615255389645e-02, func = 1.57506362043331e+04, norm = 1.58995670008083e+00, diff = 9.36725519614007e-03
iter = 83, step = 1.98184492620163e-02, func = 1.57506341846080e+04, norm = 1.32587683882632e+00, diff = 8.46386736880228e-03
iter = 84, step = 1.88275267989155e-02, func = 1.57506378283818e+04, norm = 1.17391431463303e+00, diff = 7.33291909119511e-03
iter = 85, step = 1.78861504589697e-02, func = 1.57506337691818e+04, norm = 1.55825403140771e+00, diff = 9.07657057920959e-03
iter = 86, step = 1.69918429360212e-02, func = 1.57506388740136e+04, norm = 1.08139533324254e+00, diff = 5.93507062858901e-03
iter = 87, step = 1.61422507892202e-02, func = 1.57506377124893e+04, norm = 1.49695399908169e+00, diff = 6.06114578104386e-03
iter = 88, step = 1.53351382497591e-02, func = 1.57506400941252e+04, norm = 9.81746223948844e-01, diff = 6.13305390175455e-03
iter = 89, step = 1.45683813372712e-02, func = 1.57506370564974e+04, norm = 1.65390915574368e+00, diff = 6.20957556053369e-03
iter = 90, step = 1.38399622704076e-02, func = 1.57506376770266e+04, norm = 1.37965957794251e+00, diff = 6.42758546064927e-03
iter = 91, step = 1.31479641568872e-02, func = 1.57506417828995e+04, norm = 1.03361226247526e+00, diff = 5.65674006040217e-03
iter = 92, step = 1.24905659490429e-02, func = 1.57506425914970e+04, norm = 1.04700341912441e+00, diff = 5.93616515817423e-03
iter = 93, step = 1.18660376515907e-02, func = 1.57506425445293e+04, norm = 9.34035502953771e-01, diff = 4.74487795553461e-03
iter = 94, step = 1.12727357690112e-02, func = 1.57506423338610e+04, norm = 1.08167180956781e+00, diff = 4.77223547147110e-03
iter = 95, step = 1.07090989805606e-02, func = 1.57506430562700e+04, norm = 8.61065664525773e-01, diff = 3.77247223490721e-03
iter = 96, step = 1.01736440315326e-02, func = 1.57506445146250e+04, norm = 8.96080988595467e-01, diff = 3.10057248916907e-03
iter = 97, step = 9.66496182995598e-03, func = 1.57506445468800e+04, norm = 8.68997111955442e-01, diff = 4.05025372630722e-03
iter = 98, step = 9.18171373845818e-03, func = 1.57506450158174e+04, norm = 8.60502999564271e-01, diff = 3.46241516700099e-03
iter = 99, step = 8.72262805153527e-03, func = 1.57506454730388e+04, norm = 9.79695233260601e-01, diff = 3.58384389939012e-03
iter = 100, step = 8.28649664895850e-03, func = 1.57506456674485e+04, norm = 9.10350811245921e-01, diff = 3.26726440690549e-03
iter = 101, step = 7.87217181651058e-03, func = 1.57506460421685e+04, norm = 8.99723491915220e-01, diff = 3.08799935281491e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.575072e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 16, while k = 16 and n = 88
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 3.13475e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 7744
Number of centers left            = 88
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 7744 variables
Optimize a model with 8009 rows, 7832 columns and 31328 nonzeros
Variable types: 88 continuous, 7744 integer (7744 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+06]
  Objective range  [1e+01, 2e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 2e+01]
Presolve removed 0 rows and 267 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.005005 seconds
Total time elapsed: 0.105826 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running OK'
Running OK
+ /home/lykhovyd/progs/districting/districting myconfig.txt OK /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/OK.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/OK/counties/graph/OK.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/OK/counties/graph/OK_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/OK/counties/graph/OK.population
state[2]        = OK
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/OK.ralg_hot
nr_comp = 1
graph: 77 nodes, 195 edges (read)
Model input: L = 746519, U = 754021, k = 5.
Graph is connected.
Model input: total population = 3751351
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.00204498838760e+04, norm = 7.90505213070551e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 2.00195945765190e+04, norm = 7.40838648470493e+00, diff = 8.64986979383356e-01
iter = 3, step = 8.57375000000000e-01, func = 2.00182902360750e+04, norm = 7.57604326884766e+00, diff = 7.31296747578127e-01
iter = 4, step = 8.14506250000000e-01, func = 2.00195959886322e+04, norm = 4.94281800252291e+00, diff = 5.80923081140093e-01
iter = 5, step = 7.73780937500000e-01, func = 2.00202768854585e+04, norm = 4.49604557188117e+00, diff = 5.30789501597405e-01
iter = 6, step = 7.35091890625000e-01, func = 2.00202272554690e+04, norm = 3.71886595599622e+00, diff = 6.07185445472552e-01
iter = 7, step = 6.98337296093750e-01, func = 2.00201240383945e+04, norm = 3.88249937242710e+00, diff = 4.24982689103987e-01
iter = 8, step = 6.98337296093750e-01, func = 2.00193987746440e+04, norm = 5.89351058269954e+00, diff = 9.19780079790491e-01
iter = 9, step = 6.63420431289062e-01, func = 2.00189509988437e+04, norm = 5.64051646475034e+00, diff = 4.34959699048606e-01
iter = 10, step = 6.30249409724609e-01, func = 2.00198262183298e+04, norm = 3.81432754978446e+00, diff = 4.81034885074350e-01
iter = 11, step = 5.98736939238379e-01, func = 2.00205675527178e+04, norm = 4.06990253685530e+00, diff = 4.64055238701861e-01
iter = 12, step = 5.68800092276460e-01, func = 2.00206023931137e+04, norm = 3.68604255939040e+00, diff = 3.85587872125466e-01
iter = 13, step = 5.40360087662637e-01, func = 2.00203955529074e+04, norm = 3.43662746013785e+00, diff = 4.17704014318293e-01
iter = 14, step = 5.13342083279505e-01, func = 2.00208783636610e+04, norm = 2.98554399780281e+00, diff = 3.21897908107775e-01
iter = 15, step = 4.87674979115529e-01, func = 2.00208317712815e+04, norm = 2.53217696815823e+00, diff = 3.25857297299368e-01
iter = 16, step = 4.63291230159753e-01, func = 2.00206896449168e+04, norm = 3.31574500436357e+00, diff = 3.51841429404794e-01
iter = 17, step = 4.40126668651765e-01, func = 2.00208396396614e+04, norm = 2.55923883143934e+00, diff = 2.59645262347205e-01
iter = 18, step = 4.18120335219177e-01, func = 2.00206576905076e+04, norm = 3.02580506591971e+00, diff = 2.64911024056538e-01
iter = 19, step = 3.97214318458218e-01, func = 2.00208575564548e+04, norm = 1.96588209327483e+00, diff = 2.83080230261244e-01
iter = 20, step = 3.77353602535307e-01, func = 2.00208947629095e+04, norm = 2.47293676741655e+00, diff = 2.77062662958190e-01
iter = 21, step = 3.58485922408542e-01, func = 2.00210024085440e+04, norm = 1.63902137520206e+00, diff = 2.04155229533215e-01
iter = 22, step = 3.40561626288115e-01, func = 2.00209026186467e+04, norm = 2.18490055758292e+00, diff = 2.12612701969824e-01
iter = 23, step = 3.23533544973709e-01, func = 2.00209437613194e+04, norm = 1.44557604641739e+00, diff = 1.61837398015936e-01
iter = 24, step = 3.07356867725023e-01, func = 2.00209848238404e+04, norm = 1.89380864001867e+00, diff = 2.09879015788699e-01
iter = 25, step = 2.91989024338772e-01, func = 2.00210190315768e+04, norm = 1.62844445941721e+00, diff = 1.60405583281011e-01
iter = 26, step = 2.77389573121834e-01, func = 2.00210140954119e+04, norm = 1.38672495432499e+00, diff = 1.75733765015010e-01
iter = 27, step = 2.63520094465742e-01, func = 2.00209740811652e+04, norm = 1.95346057960765e+00, diff = 2.09111018978523e-01
iter = 28, step = 2.63520094465742e-01, func = 2.00209954791078e+04, norm = 1.74492650668480e+00, diff = 2.31803450365408e-01
iter = 29, step = 2.50344089742455e-01, func = 2.00210106007789e+04, norm = 1.13160596421040e+00, diff = 1.60425736898185e-01
iter = 30, step = 2.37826885255332e-01, func = 2.00210408819158e+04, norm = 1.04429834164844e+00, diff = 1.35795573723797e-01
iter = 31, step = 2.25935540992565e-01, func = 2.00210681869666e+04, norm = 1.26718861351802e+00, diff = 1.14182281260661e-01
iter = 32, step = 2.14638763942937e-01, func = 2.00210638955176e+04, norm = 1.31288125073355e+00, diff = 1.27911626476234e-01
iter = 33, step = 2.03906825745790e-01, func = 2.00210835135769e+04, norm = 8.77863492146942e-01, diff = 1.15062325894773e-01
iter = 34, step = 1.93711484458501e-01, func = 2.00210714185562e+04, norm = 1.16412251950243e+00, diff = 1.00843161477397e-01
iter = 35, step = 2.32453781350201e-01, func = 2.00210697129032e+04, norm = 1.29243152118957e+00, diff = 1.83584190991779e-01
iter = 36, step = 2.32453781350201e-01, func = 2.00210651694130e+04, norm = 1.72043291742499e+00, diff = 2.02694473676825e-01
iter = 37, step = 2.20831092282691e-01, func = 2.00210955861086e+04, norm = 1.24192981647527e+00, diff = 1.22689675048849e-01
iter = 38, step = 2.09789537668556e-01, func = 2.00210689126313e+04, norm = 1.27412443338611e+00, diff = 1.04140883836209e-01
iter = 39, step = 1.99300060785129e-01, func = 2.00211164959898e+04, norm = 6.96502337537865e-01, diff = 8.02959482171056e-02
iter = 40, step = 1.89335057745872e-01, func = 2.00211137049510e+04, norm = 6.87861911714506e-01, diff = 8.37641479826325e-02
iter = 41, step = 1.79868304858578e-01, func = 2.00211178148352e+04, norm = 8.70094352117198e-01, diff = 1.03732578747392e-01
iter = 42, step = 1.70874889615650e-01, func = 2.00211448175633e+04, norm = 6.55410515929358e-01, diff = 8.16590094640601e-02
iter = 43, step = 1.62331145134867e-01, func = 2.00211138331741e+04, norm = 1.11076470686591e+00, diff = 6.91307551761145e-02
iter = 44, step = 1.54214587878124e-01, func = 2.00211365201953e+04, norm = 7.27621076870479e-01, diff = 6.53920781198975e-02
iter = 45, step = 1.46503858484217e-01, func = 2.00211526814218e+04, norm = 3.91822732628319e-01, diff = 4.89172629484637e-02
iter = 46, step = 1.39178665560007e-01, func = 2.00211524912349e+04, norm = 6.44322048279247e-01, diff = 6.94997604110129e-02
iter = 47, step = 1.32219732282006e-01, func = 2.00211602704869e+04, norm = 4.43002137884703e-01, diff = 4.31870357220260e-02
iter = 48, step = 1.25608745667906e-01, func = 2.00211508155113e+04, norm = 6.47580709895842e-01, diff = 4.55727792607407e-02
iter = 49, step = 1.19328308384511e-01, func = 2.00211550462337e+04, norm = 6.09317476135710e-01, diff = 5.48734642557337e-02
iter = 50, step = 1.13361892965285e-01, func = 2.00211537783499e+04, norm = 5.32922902409478e-01, diff = 4.74071474867411e-02
iter = 51, step = 1.13361892965285e-01, func = 2.00211628743485e+04, norm = 4.02982198143676e-01, diff = 6.71156915733361e-02
iter = 52, step = 1.07693798317021e-01, func = 2.00211546514651e+04, norm = 4.96151206508582e-01, diff = 3.76523345381515e-02
iter = 53, step = 1.02309108401170e-01, func = 2.00211615213394e+04, norm = 4.59289266655134e-01, diff = 2.59909688475794e-02
iter = 54, step = 9.71936529811113e-02, func = 2.00211662474967e+04, norm = 3.02323689486918e-01, diff = 2.68004630090804e-02
iter = 55, step = 9.71936529811113e-02, func = 2.00211690361503e+04, norm = 3.00431595883195e-01, diff = 6.75262045764831e-02
iter = 56, step = 9.23339703320557e-02, func = 2.00211741279913e+04, norm = 2.95150219676320e-01, diff = 2.66774936188714e-02
iter = 57, step = 8.77172718154530e-02, func = 2.00211775097796e+04, norm = 2.93259826154774e-01, diff = 1.55006281513340e-02
iter = 58, step = 8.33314082246803e-02, func = 2.00211778677844e+04, norm = 2.84604359788505e-01, diff = 2.35621307100253e-02
iter = 59, step = 7.91648378134463e-02, func = 2.00211807465909e+04, norm = 2.37559711421115e-01, diff = 2.51732832619845e-02
iter = 60, step = 7.91648378134463e-02, func = 2.00211813773705e+04, norm = 1.63761885832985e-01, diff = 4.24921528526768e-02
iter = 61, step = 7.52065959227740e-02, func = 2.00211766936500e+04, norm = 2.65277839075176e-01, diff = 3.22445344195696e-02
iter = 62, step = 7.14462661266353e-02, func = 2.00211744341738e+04, norm = 3.45339670328786e-01, diff = 1.93873516920740e-02
iter = 63, step = 6.78739528203035e-02, func = 2.00211800324263e+04, norm = 2.06149810625102e-01, diff = 1.84410907000222e-02
iter = 64, step = 6.44802551792883e-02, func = 2.00211820291032e+04, norm = 1.51731737154281e-01, diff = 2.36952498878016e-02
iter = 65, step = 6.12562424203239e-02, func = 2.00211805880368e+04, norm = 2.01321912347631e-01, diff = 1.90710507508002e-02
iter = 66, step = 6.12562424203239e-02, func = 2.00211814922909e+04, norm = 1.66893054313452e-01, diff = 2.60424286935285e-02
iter = 67, step = 5.81934302993077e-02, func = 2.00211802425246e+04, norm = 1.79850424171416e-01, diff = 2.47496527878481e-02
iter = 68, step = 5.81934302993077e-02, func = 2.00211836790188e+04, norm = 1.20925396119454e-01, diff = 3.86050760076175e-02
iter = 69, step = 5.52837587843423e-02, func = 2.00211831359841e+04, norm = 1.34712280292647e-01, diff = 2.80880271468253e-02
iter = 70, step = 5.25195708451252e-02, func = 2.00211830085825e+04, norm = 5.67968839655966e-01, diff = 2.19034065603167e-02
iter = 71, step = 4.98935923028689e-02, func = 2.00211841427662e+04, norm = 2.88334170327194e-01, diff = 2.66551548104263e-02
iter = 72, step = 4.98935923028689e-02, func = 2.00211841951484e+04, norm = 9.85604522233894e-02, diff = 2.63411840111999e-02
iter = 73, step = 4.73989126877255e-02, func = 2.00211832089273e+04, norm = 3.33006960812207e-01, diff = 1.62192030299462e-02
iter = 74, step = 4.73989126877255e-02, func = 2.00211843547776e+04, norm = 1.92052340259968e-01, diff = 4.76327684205413e-02
iter = 75, step = 4.50289670533392e-02, func = 2.00211842700570e+04, norm = 1.36706043689991e-01, diff = 2.19573370258905e-02
iter = 76, step = 5.40347604640070e-02, func = 2.00211848904787e+04, norm = 7.32619990636145e-02, diff = 7.01867765203983e-02
iter = 77, step = 5.13330224408067e-02, func = 2.00211841571431e+04, norm = 1.02169532451037e-01, diff = 1.52172649869217e-02
iter = 78, step = 4.87663713187664e-02, func = 2.00211842348991e+04, norm = 1.18987809679928e-01, diff = 9.70445223016679e-03
iter = 79, step = 4.87663713187664e-02, func = 2.00211849761573e+04, norm = 7.96153000907891e-02, diff = 2.11024159545063e-02
iter = 80, step = 4.87663713187664e-02, func = 2.00211851322135e+04, norm = 5.76821832336377e-02, diff = 4.66613819317981e-02
iter = 81, step = 4.63280527528280e-02, func = 2.00211857371108e+04, norm = 7.05255960666519e-02, diff = 9.80889260403913e-03
iter = 82, step = 4.40116501151866e-02, func = 2.00211852055055e+04, norm = 7.24101335574210e-02, diff = 9.32965926306549e-03
iter = 83, step = 4.18110676094273e-02, func = 2.00211858331640e+04, norm = 5.25668317475282e-02, diff = 9.58988222134206e-03
iter = 84, step = 3.97205142289559e-02, func = 2.00211862642843e+04, norm = 4.85492819978318e-02, diff = 2.42159070408929e-02
iter = 85, step = 3.77344885175081e-02, func = 2.00211862231959e+04, norm = 6.85696277892280e-02, diff = 1.32887887513019e-02
iter = 86, step = 3.58477640916327e-02, func = 2.00211866386810e+04, norm = 5.42211899007265e-02, diff = 7.40328037198751e-03
iter = 87, step = 3.40553758870511e-02, func = 2.00211868248997e+04, norm = 5.55721296256050e-02, diff = 6.54281174468974e-03
iter = 88, step = 3.40553758870511e-02, func = 2.00211868794816e+04, norm = 5.41078561151494e-02, diff = 1.77147667654921e-02
iter = 89, step = 3.23526070926985e-02, func = 2.00211871189683e+04, norm = 4.94983099485224e-02, diff = 8.40596338581606e-03
iter = 90, step = 3.07349767380636e-02, func = 2.00211875991010e+04, norm = 3.90375283004273e-02, diff = 9.50891955027589e-03
iter = 91, step = 2.91982279011604e-02, func = 2.00211874012611e+04, norm = 6.44377327352015e-02, diff = 7.64333258539080e-03
iter = 92, step = 2.91982279011604e-02, func = 2.00211874565316e+04, norm = 4.72619574066509e-02, diff = 1.21477024130183e-02
iter = 93, step = 2.91982279011604e-02, func = 2.00211870939237e+04, norm = 5.72916055687825e-02, diff = 1.66166471636290e-02
iter = 94, step = 2.77383165061024e-02, func = 2.00211871303383e+04, norm = 4.48377347664130e-02, diff = 8.28942985213169e-03
iter = 95, step = 2.77383165061024e-02, func = 2.00211875103633e+04, norm = 4.05837544196846e-02, diff = 1.35208348971108e-02
iter = 96, step = 2.63514006807973e-02, func = 2.00211876396305e+04, norm = 4.33657710886200e-02, diff = 7.29811953095162e-03
iter = 97, step = 2.50338306467574e-02, func = 2.00211876882462e+04, norm = 3.49322460416868e-02, diff = 7.70164902096815e-03
iter = 98, step = 2.50338306467574e-02, func = 2.00211877842749e+04, norm = 1.44169694593842e-01, diff = 9.12014325352713e-03
iter = 99, step = 2.37821391144195e-02, func = 2.00211879079579e+04, norm = 7.40017914779305e-02, diff = 3.44254327926830e-03
iter = 100, step = 2.25930321586986e-02, func = 2.00211880134177e+04, norm = 2.34212144385486e-02, diff = 7.39285516197753e-03
iter = 101, step = 2.14633805507636e-02, func = 2.00211881343027e+04, norm = 2.52634762529164e-02, diff = 6.59658429903284e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.002119e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 5, while k = 5 and n = 77
  UB from restricted IP = 42337 using centers : 4 51 11 69 24 
  UB from restricted IP = 21527.6 using centers : 55 47 33 52 19 
In iteration 0 of HessHeuristic, objective value of incumbent is = 21527.6
  UB from restricted IP = 50986.9 using centers : 19 27 11 15 46 
  UB from restricted IP = 21836.4 using centers : 55 20 23 71 47 
  UB from restricted IP = 21631.1 using centers : 55 20 1 71 47 
In iteration 1 of HessHeuristic, objective value of incumbent is = 21527.6
  UB from restricted IP = 55344.1 using centers : 39 53 40 55 42 
  UB from restricted IP = 21836.4 using centers : 47 23 20 55 71 
  UB from restricted IP = 21631.1 using centers : 47 1 20 55 71 
In iteration 2 of HessHeuristic, objective value of incumbent is = 21527.6
  UB from restricted IP = 64655.8 using centers : 70 38 41 46 48 
  UB from restricted IP = 22634.3 using centers : 55 21 33 47 71 
In iteration 3 of HessHeuristic, objective value of incumbent is = 21527.6
  UB from restricted IP = 75766.1 using centers : 1 16 8 58 46 
  UB from restricted IP = 23705.7 using centers : 21 55 22 71 47 
  UB from restricted IP = 22634.3 using centers : 21 55 33 71 47 
In iteration 4 of HessHeuristic, objective value of incumbent is = 21527.6
  UB from restricted IP = 114163 using centers : 48 40 44 8 1 
  UB from restricted IP = 22000.5 using centers : 71 20 5 47 55 
In iteration 5 of HessHeuristic, objective value of incumbent is = 21527.6
  UB from restricted IP = 153123 using centers : 50 75 4 1 63 
  UB from restricted IP = 21576.3 using centers : 33 71 30 47 55 
In iteration 6 of HessHeuristic, objective value of incumbent is = 21527.6
  UB from restricted IP = 182290 using centers : 73 23 42 37 75 
  UB from restricted IP = 21576.3 using centers : 33 30 71 47 55 
In iteration 7 of HessHeuristic, objective value of incumbent is = 21527.6
  UB from restricted IP = 130905 using centers : 8 1 53 6 69 
  UB from restricted IP = 23300.8 using centers : 47 55 5 76 42 
  UB from restricted IP = 22000.5 using centers : 47 55 5 20 71 
In iteration 8 of HessHeuristic, objective value of incumbent is = 21527.6
  UB from restricted IP = 73556.6 using centers : 49 22 0 74 76 
  UB from restricted IP = 22166.5 using centers : 55 52 19 1 47 
  UB from restricted IP = 21981.9 using centers : 55 52 19 23 47 
In iteration 9 of HessHeuristic, objective value of incumbent is = 21527.6
UB at end of HessHeuristic = 21527.6
UB of heuristicSolution = 21527.6
Best solution after 10 of HessHeuristic is 21527.57

Beginning LOCAL SEARCH with UB = 21527.6

Academic license - for non-commercial use only
# centers = 5, while k = 5 and n = 77
  checking neighbors of node 19
  checking neighbors of node 33
  checking neighbors of node 47
  checking neighbors of node 52
  checking neighbors of node 55
UB at end of local search heuristic = 21527.6
UB of heuristicSolution = 21527.6
Best solution after local search is 21527.57
Academic license - for non-commercial use only
# centers = 5, while k = 5 and n = 77
Optimize a model with 847 rows, 2335 columns and 7666 nonzeros
Variable types: 1950 continuous, 385 integer (385 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [9e+00, 4e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+05]

MIP start did not produce a new incumbent solution

Presolve removed 143 rows and 614 columns
Presolve time: 0.01s
Presolved: 704 rows, 1721 columns, 5763 nonzeros
Variable types: 1406 continuous, 315 integer (315 binary)

Root relaxation: objective 2.135514e+04, 196 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 21355.1366    0    8          - 21355.1366      -     -    0s
Another try with MIP start
     0     0 21430.9791    0   20          - 21430.9791      -     -    0s
     0     0 21474.9338    0   20          - 21474.9338      -     -    0s
     0     0 21474.9992    0   21          - 21474.9992      -     -    0s
     0     0 21562.9293    0   28          - 21562.9293      -     -    0s
     0     0 21601.9807    0   27          - 21601.9807      -     -    0s
     0     0 21605.2261    0   25          - 21605.2261      -     -    0s
     0     0 21605.9420    0   25          - 21605.9420      -     -    0s
     0     0 21605.9420    0   25          - 21605.9420      -     -    0s
     0     0 21625.4717    0   29          - 21625.4717      -     -    0s
     0     0 21629.9547    0   28          - 21629.9547      -     -    0s
     0     0 21630.8409    0   29          - 21630.8409      -     -    0s
     0     0 21656.7219    0   37          - 21656.7219      -     -    0s
     0     0 21657.2521    0   35          - 21657.2521      -     -    0s
     0     0 21659.4953    0   37          - 21659.4953      -     -    0s
     0     0 21659.5666    0   39          - 21659.5666      -     -    0s
     0     0 21663.0334    0   40          - 21663.0334      -     -    0s
     0     0 21663.6180    0   42          - 21663.6180      -     -    0s
     0     0 21663.6631    0   40          - 21663.6631      -     -    0s
     0     0 21668.3088    0   45          - 21668.3088      -     -    0s
     0     0 21668.9440    0   45          - 21668.9440      -     -    0s
     0     0 21671.9166    0   42          - 21671.9166      -     -    0s
     0     0 21676.7402    0   41          - 21676.7402      -     -    0s
     0     0 21677.3424    0   45          - 21677.3424      -     -    0s
     0     0 21677.5349    0   46          - 21677.5349      -     -    0s
     0     0 21681.6366    0   42          - 21681.6366      -     -    0s
     0     0 21681.6366    0   42          - 21681.6366      -     -    0s
     0     0 21690.2446    0   20          - 21690.2446      -     -    0s
     0     0 21690.4045    0   29          - 21690.4045      -     -    0s
     0     0 21690.4800    0   29          - 21690.4800      -     -    0s
     0     0 21690.5189    0   40          - 21690.5189      -     -    0s
     0     0 21690.5189    0   40          - 21690.5189      -     -    0s
     0     0 21690.9601    0   39          - 21690.9601      -     -    0s
     0     2 21690.9601    0   39          - 21690.9601      -     -    0s
*   39    21              11    21925.531588 21717.8792  0.95%  24.5    0s

Cutting planes:
  Cover: 4
  MIR: 10
  StrongCG: 2
  Flow cover: 27
  Network: 1

Explored 65 nodes (2057 simplex iterations) in 0.30 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 21925.5 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.192553158800e+04, best bound 2.192553158800e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 21925.5 using centers : 19 33 47 52 55 
UB at end of ContiguityHeuristic = 21925.5
UB of (contiguous) heuristicSolution = 21925.5

Number of variables fixed to zero = 4066
Number of variables fixed to one  = 0
Number of variables not fixed     = 1863
Number of centers left            = 39
Percentage of vars fixed = 0.69
Academic license - for non-commercial use only
Build hess : created 1863 variables
Optimize a model with 2133 rows, 1940 columns and 7722 nonzeros
Variable types: 77 continuous, 1863 integer (1863 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+05]
  Objective range  [8e+00, 9e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 5e+00]

Loaded MIP start with objective 21925.5

Presolve removed 193 rows and 111 columns
Presolve time: 0.02s
Presolved: 1940 rows, 1829 columns, 7395 nonzeros
Variable types: 0 continuous, 1829 integer (1791 binary)

Concurrent LP optimizer: dual simplex and barrier
Showing barrier log only...

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 5.562e+04
 Factor NZ  : 1.548e+05 (roughly 3 MBytes of memory)
 Factor Ops : 1.392e+07 (less than 1 second per iteration)
 Threads    : 3

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   4.32865438e+06 -1.18681393e+05  3.50e+04 0.00e+00  2.16e+03     0s
   1   1.06106205e+06 -1.63353845e+05  9.07e+03 6.22e-15  5.53e+02     0s
   2   1.54151664e+05 -1.17047533e+05  1.05e+03 6.22e-15  8.36e+01     0s
   3   6.16155893e+04 -3.80337902e+04  2.35e+02 5.33e-15  2.22e+01     0s
   4   3.65888931e+04  7.48641797e+03  5.51e+01 3.79e-15  5.33e+00     0s
   5   2.92581849e+04  1.59478291e+04  2.17e+01 3.55e-15  2.33e+00     0s
   6   2.61867214e+04  1.85652958e+04  1.16e+01 1.85e-15  1.32e+00     0s
   7   2.41236784e+04  1.99948666e+04  6.29e+00 3.55e-15  7.08e-01     0s
   8   2.36210389e+04  2.02829829e+04  5.10e+00 3.55e-15  5.71e-01     0s
   9   2.27674954e+04  2.05854583e+04  3.21e+00 2.09e-15  3.73e-01     0s
  10   2.20401168e+04  2.08591291e+04  1.67e+00 3.55e-15  2.02e-01     0s
  11   2.15895826e+04  2.09434825e+04  8.47e-01 7.11e-15  1.11e-01     0s
  12   2.14250599e+04  2.09890372e+04  5.72e-01 2.63e-15  7.50e-02     0s
  13   2.13127387e+04  2.10157461e+04  3.75e-01 3.55e-15  5.12e-02     0s
  14   2.12613086e+04  2.10337991e+04  2.87e-01 3.55e-15  3.93e-02     0s
  15   2.12324541e+04  2.10486324e+04  2.41e-01 3.55e-15  3.17e-02     0s
  16   2.11551141e+04  2.10605742e+04  1.19e-01 3.55e-15  1.63e-02     0s
  17   2.11168973e+04  2.10670918e+04  5.93e-02 3.55e-15  8.63e-03     0s
  18   2.10925798e+04  2.10732912e+04  2.16e-02 8.88e-15  3.35e-03     0s
  19   2.10874648e+04  2.10745382e+04  1.45e-02 3.55e-15  2.25e-03     0s
  20   2.10770206e+04  2.10761083e+04  9.88e-04 1.16e-14  1.59e-04     0s
  21   2.10761876e+04  2.10761636e+04  1.65e-05 7.11e-15  4.25e-06     0s
  22   2.10761656e+04  2.10761656e+04  9.82e-10 8.51e-15  5.13e-10     0s

Barrier solved model in 22 iterations and 0.06 seconds
Optimal objective 2.10761656e+04


Solved with barrier

Root relaxation: objective 2.107617e+04, 670 iterations, 0.05 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 21076.1656    0  141 21925.5316 21076.1656  3.87%     -    0s
     0     0 21238.3175    0  257 21925.5316 21238.3175  3.13%     -    0s
     0     0 21238.3175    0  103 21925.5316 21238.3175  3.13%     -    0s
     0     0 21252.7476    0  237 21925.5316 21252.7476  3.07%     -    0s
     0     0 21254.0405    0  237 21925.5316 21254.0405  3.06%     -    0s
     0     0 21285.9762    0  155 21925.5316 21285.9762  2.92%     -    0s
     0     0 21295.2095    0  231 21925.5316 21295.2095  2.87%     -    0s
     0     0 21295.2163    0  232 21925.5316 21295.2163  2.87%     -    0s
     0     0 21328.8028    0  244 21925.5316 21328.8028  2.72%     -    0s
     0     0 21329.4878    0  245 21925.5316 21329.4878  2.72%     -    0s
     0     0 21350.2858    0  207 21925.5316 21350.2858  2.62%     -    0s
     0     0 21350.4687    0  257 21925.5316 21350.4687  2.62%     -    0s
     0     0 21350.9195    0  257 21925.5316 21350.9195  2.62%     -    0s
     0     0 21351.2469    0  196 21925.5316 21351.2469  2.62%     -    0s
     0     0 21372.0935    0  224 21925.5316 21372.0935  2.52%     -    0s
     0     0 21381.9768    0  288 21925.5316 21381.9768  2.48%     -    0s
     0     0 21384.9997    0  233 21925.5316 21384.9997  2.47%     -    0s
     0     0 21386.3246    0  289 21925.5316 21386.3246  2.46%     -    0s
     0     0 21386.8119    0  287 21925.5316 21386.8119  2.46%     -    0s
     0     0 21387.9076    0  272 21925.5316 21387.9076  2.45%     -    0s
     0     0 21388.0700    0  291 21925.5316 21388.0700  2.45%     -    0s
     0     0 21394.6485    0  290 21925.5316 21394.6485  2.42%     -    0s
     0     0 21395.8514    0  294 21925.5316 21395.8514  2.42%     -    0s
     0     0 21396.7936    0  211 21925.5316 21396.7936  2.41%     -    0s
     0     0 21396.8925    0  293 21925.5316 21396.8925  2.41%     -    0s
     0     0 21397.0437    0  294 21925.5316 21397.0437  2.41%     -    0s
     0     0 21397.0437    0  294 21925.5316 21397.0437  2.41%     -    0s
     0     2 21397.0437    0  294 21925.5316 21397.0437  2.41%     -    0s
*  239    48              19    21919.879410 21625.5380  1.34%  27.9    0s
H  394    16                    21756.499168 21696.6045  0.28%  24.0    0s

Cutting planes:
  Cover: 45
  Clique: 2
  MIR: 7
  StrongCG: 2
  GUB cover: 11
  Lazy constraints: 31

Explored 415 nodes (11959 simplex iterations) in 0.84 seconds
Thread count was 8 (of 8 available processors)

Solution count 3: 21756.5 21919.9 21925.5 

Optimal solution found (tolerance 0.00e+00)
Best objective 2.175649916800e+04, best bound 2.175649916800e+04, gap 0.0000%
IP duration time: 0.838297 seconds
Total time elapsed: 1.637358 seconds
Number of callbacks: 18
Time in callbacks: 0.001558 seconds
Number of lazy constraints generated: 38
+ for state in $states
+ echo 'Running OR'
Running OR
+ /home/lykhovyd/progs/districting/districting myconfig.txt OR /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/OR.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/OR/counties/graph/OR.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/OR/counties/graph/OR_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/OR/counties/graph/OR.population
state[2]        = OR
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/OR.ralg_hot
nr_comp = 1
graph: 36 nodes, 81 edges (read)
Model input: L = 762384, U = 770045, k = 5.
Graph is connected.
Model input: total population = 3831074
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.65884467779673e+04, norm = 3.29905010175963e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 2.65877698766165e+04, norm = 4.10832333649163e+00, diff = 7.30131870663323e-01
iter = 3, step = 1.08300000000000e+00, func = 2.65887243604255e+04, norm = 3.24108685534682e+00, diff = 1.61902614301908e+00
iter = 4, step = 1.02885000000000e+00, func = 2.65889088700022e+04, norm = 2.55156908345095e+00, diff = 7.69598197284368e-01
iter = 5, step = 9.77407500000000e-01, func = 2.65889695080282e+04, norm = 1.93594949043879e+00, diff = 7.70617593394910e-01
iter = 6, step = 9.28537125000000e-01, func = 2.65889695090696e+04, norm = 1.86994144043604e+00, diff = 7.40101205035595e-01
iter = 7, step = 8.82110268750000e-01, func = 2.65890385525693e+04, norm = 1.56860956445386e+00, diff = 5.95208397394004e-01
iter = 8, step = 8.38004755312500e-01, func = 2.65893531240696e+04, norm = 1.16295884265364e+00, diff = 5.33802640622714e-01
iter = 9, step = 7.96104517546875e-01, func = 2.65891932595505e+04, norm = 1.31579497593271e+00, diff = 5.26135299011542e-01
iter = 10, step = 7.56299291669531e-01, func = 2.65892384603991e+04, norm = 9.62191269401421e-01, diff = 5.04642226277238e-01
iter = 11, step = 7.18484327086054e-01, func = 2.65893960039085e+04, norm = 5.98305537505507e-01, diff = 4.38473272187427e-01
iter = 12, step = 6.82560110731752e-01, func = 2.65892294298238e+04, norm = 9.80428069825611e-01, diff = 6.23638714436125e-01
iter = 13, step = 6.82560110731752e-01, func = 2.65893378999533e+04, norm = 1.04930982049440e+00, diff = 4.73490092315064e-01
iter = 14, step = 6.48432105195164e-01, func = 2.65894144356690e+04, norm = 5.49674270669927e-01, diff = 4.28366753632173e-01
iter = 15, step = 6.16010499935406e-01, func = 2.65894043298130e+04, norm = 8.23780781723501e-01, diff = 2.35459271848327e-01
iter = 16, step = 6.16010499935406e-01, func = 2.65894590811425e+04, norm = 5.56860343717310e-01, diff = 3.78827900252176e-01
iter = 17, step = 5.85209974938635e-01, func = 2.65895429250161e+04, norm = 3.52377144163065e-01, diff = 2.67613331547832e-01
iter = 18, step = 5.55949476191704e-01, func = 2.65895104712909e+04, norm = 4.10136655896497e-01, diff = 3.01888868325698e-01
iter = 19, step = 5.28152002382118e-01, func = 2.65895113958807e+04, norm = 5.38170661040633e-01, diff = 1.43063480697934e-01
iter = 20, step = 5.01744402263013e-01, func = 2.65895407193447e+04, norm = 5.29205682479427e-01, diff = 2.09939256794196e-01
iter = 21, step = 4.76657182149862e-01, func = 2.65895280436855e+04, norm = 4.66490410105332e-01, diff = 2.15956158600379e-01
iter = 22, step = 4.52824323042369e-01, func = 2.65895559287201e+04, norm = 3.87558966088560e-01, diff = 1.60068421397588e-01
iter = 23, step = 4.52824323042369e-01, func = 2.65895775651644e+04, norm = 2.53035471968670e-01, diff = 5.66469927507727e-01
iter = 24, step = 4.30183106890250e-01, func = 2.65895555460181e+04, norm = 7.37971721940771e-01, diff = 2.18949575260568e-01
iter = 25, step = 4.08673951545738e-01, func = 2.65895720391078e+04, norm = 5.63271777525445e-01, diff = 2.28556016260687e-01
iter = 26, step = 3.88240253968451e-01, func = 2.65895850610169e+04, norm = 3.31358022131408e-01, diff = 1.32630988538392e-01
iter = 27, step = 3.68828241270028e-01, func = 2.65895842150870e+04, norm = 3.51450811535918e-01, diff = 2.58907461172704e-01
iter = 28, step = 3.50386829206527e-01, func = 2.65895962159205e+04, norm = 2.35131109356977e-01, diff = 2.11876751868246e-01
iter = 29, step = 3.32867487746201e-01, func = 2.65895814295919e+04, norm = 2.99351271542207e-01, diff = 1.39258395550106e-01
iter = 30, step = 3.32867487746201e-01, func = 2.65895935517967e+04, norm = 2.44479908854459e-01, diff = 2.62967044055536e-01
iter = 31, step = 3.16224113358890e-01, func = 2.65895898827258e+04, norm = 2.65285286862162e-01, diff = 9.21647420060110e-02
iter = 32, step = 3.00412907690946e-01, func = 2.65895903294730e+04, norm = 1.84655183138633e-01, diff = 1.00642678252992e-01
iter = 33, step = 2.85392262306399e-01, func = 2.65895980012261e+04, norm = 2.17946092395896e-01, diff = 1.35456322822587e-01
iter = 34, step = 2.71122649191079e-01, func = 2.65896055428035e+04, norm = 1.66116063844704e-01, diff = 1.16793621974505e-01
iter = 35, step = 2.57566516731525e-01, func = 2.65896112846054e+04, norm = 1.13931946545148e-01, diff = 7.32724301752850e-02
iter = 36, step = 2.44688190894949e-01, func = 2.65896170316550e+04, norm = 9.65018184899629e-02, diff = 6.32965839280861e-02
iter = 37, step = 2.32453781350201e-01, func = 2.65896163697921e+04, norm = 1.18450175182268e-01, diff = 7.51927522608072e-02
iter = 38, step = 2.20831092282691e-01, func = 2.65896168784447e+04, norm = 1.32661037056693e-01, diff = 4.42478966538775e-02
iter = 39, step = 2.09789537668556e-01, func = 2.65896239034482e+04, norm = 8.04575887148657e-02, diff = 6.69921317171629e-02
iter = 40, step = 1.99300060785129e-01, func = 2.65896190512737e+04, norm = 1.84928263141324e-01, diff = 5.19328145948524e-02
iter = 41, step = 1.89335057745872e-01, func = 2.65896249401125e+04, norm = 3.38026980178686e-01, diff = 3.84381970144660e-02
iter = 42, step = 1.79868304858579e-01, func = 2.65896244357773e+04, norm = 2.13113220391784e-01, diff = 1.03763543222261e-01
iter = 43, step = 1.70874889615650e-01, func = 2.65896186673444e+04, norm = 1.90635835103225e-01, diff = 5.17151336082136e-02
iter = 44, step = 1.62331145134867e-01, func = 2.65896260614748e+04, norm = 1.31266918334029e-01, diff = 4.44554448172683e-02
iter = 45, step = 1.54214587878124e-01, func = 2.65896257481383e+04, norm = 9.77710861504404e-02, diff = 4.32524369194618e-02
iter = 46, step = 1.46503858484218e-01, func = 2.65896264788461e+04, norm = 1.14678093020679e-01, diff = 3.27032862712800e-02
iter = 47, step = 1.46503858484218e-01, func = 2.65896267761119e+04, norm = 8.13826695351109e-02, diff = 1.24152133253658e-01
iter = 48, step = 1.39178665560007e-01, func = 2.65896259283504e+04, norm = 6.04363052388052e-02, diff = 3.78821121426795e-02
iter = 49, step = 1.32219732282006e-01, func = 2.65896237523034e+04, norm = 7.61365416581704e-02, diff = 3.63489325674113e-02
iter = 50, step = 1.58663678738408e-01, func = 2.65896237113150e+04, norm = 5.93339807220541e-02, diff = 1.16889091367291e-01
iter = 51, step = 1.50730494801487e-01, func = 2.65896268440293e+04, norm = 3.55299203143631e-02, diff = 2.72411368731601e-02
iter = 52, step = 1.43193970061413e-01, func = 2.65896263243076e+04, norm = 6.58081287404659e-02, diff = 3.86649765517184e-02
iter = 53, step = 1.43193970061413e-01, func = 2.65896276444122e+04, norm = 5.44295637732716e-02, diff = 9.72357691428146e-02
iter = 54, step = 1.36034271558342e-01, func = 2.65896268757579e+04, norm = 5.74007258337033e-02, diff = 3.89525550536716e-02
iter = 55, step = 1.29232557980425e-01, func = 2.65896282059340e+04, norm = 4.16202012221575e-02, diff = 3.47141785915709e-02
iter = 56, step = 1.29232557980425e-01, func = 2.65896285784711e+04, norm = 4.94502860983257e-02, diff = 7.96564926055860e-02
iter = 57, step = 1.29232557980425e-01, func = 2.65896294462784e+04, norm = 3.04255238448433e-02, diff = 4.16712086219374e-02
iter = 58, step = 1.22770930081404e-01, func = 2.65896294295361e+04, norm = 2.62222832340698e-02, diff = 3.80754227713678e-02
iter = 59, step = 1.16632383577334e-01, func = 2.65896303820630e+04, norm = 2.30096170106105e-02, diff = 3.38257813021128e-02
iter = 60, step = 1.16632383577334e-01, func = 2.65896274195263e+04, norm = 2.41480399863542e-01, diff = 7.46392217007538e-02
iter = 61, step = 1.10800764398467e-01, func = 2.65896308365941e+04, norm = 1.22516160049140e-01, diff = 2.24955116817380e-02
iter = 62, step = 1.10800764398467e-01, func = 2.65896320270866e+04, norm = 3.33450989084434e-02, diff = 3.49769408521090e-02
iter = 63, step = 1.32960917278160e-01, func = 2.65896303509138e+04, norm = 1.09101862300896e-01, diff = 1.23268931532616e-01
iter = 64, step = 1.59553100733792e-01, func = 2.65896315454960e+04, norm = 5.70874911334258e-02, diff = 1.55077198323779e-01
iter = 65, step = 1.51575445697103e-01, func = 2.65896324689044e+04, norm = 3.01661256221885e-02, diff = 3.64381345593227e-02
iter = 66, step = 1.81890534836523e-01, func = 2.65896333093078e+04, norm = 2.67795792076082e-02, diff = 1.39359218390271e-01
iter = 67, step = 1.72796008094697e-01, func = 2.65896311247852e+04, norm = 1.03751213878478e-01, diff = 5.81838061902082e-02
iter = 68, step = 1.64156207689962e-01, func = 2.65896313385592e+04, norm = 1.18354194806244e-01, diff = 3.21091723859246e-02
iter = 69, step = 1.55948397305464e-01, func = 2.65896329539089e+04, norm = 8.38925903647515e-02, diff = 8.21597058171708e-02
iter = 70, step = 1.48150977440191e-01, func = 2.65896322355405e+04, norm = 4.72736195492810e-02, diff = 7.25601999038905e-02
iter = 71, step = 1.40743428568181e-01, func = 2.65896336023352e+04, norm = 2.25444855854454e-02, diff = 3.46895965285070e-02
iter = 72, step = 1.33706257139772e-01, func = 2.65896314405475e+04, norm = 1.11965488028008e-01, diff = 3.31544798810528e-02
iter = 73, step = 1.27020944282784e-01, func = 2.65896345883957e+04, norm = 5.63929104206352e-02, diff = 2.88840620015980e-02
iter = 74, step = 1.20669897068644e-01, func = 2.65896344139627e+04, norm = 1.79497317210704e-02, diff = 1.38385618601122e-02
iter = 75, step = 1.14636402215212e-01, func = 2.65896345106102e+04, norm = 1.50866945887799e-02, diff = 1.81108373851463e-02
iter = 76, step = 1.14636402215212e-01, func = 2.65896351953151e+04, norm = 2.00540482309373e-02, diff = 3.18946851770118e-02
iter = 77, step = 1.37563682658255e-01, func = 2.65896352566547e+04, norm = 6.39532691261041e-02, diff = 5.39291444142533e-02
iter = 78, step = 1.30685498525342e-01, func = 2.65896353506815e+04, norm = 5.28689752644553e-02, diff = 7.85352724854341e-03
iter = 79, step = 1.24151223599075e-01, func = 2.65896354488212e+04, norm = 3.79323131828900e-02, diff = 3.36541827818297e-02
iter = 80, step = 1.17943662419121e-01, func = 2.65896353304700e+04, norm = 2.26339758728507e-02, diff = 3.20933905622879e-02
iter = 81, step = 1.12046479298165e-01, func = 2.65896351169647e+04, norm = 2.31615971121168e-02, diff = 7.64438299253714e-03
iter = 82, step = 1.12046479298165e-01, func = 2.65896355196003e+04, norm = 1.44603479948769e-02, diff = 1.32170690948885e-02
iter = 83, step = 1.06444155333257e-01, func = 2.65896353428475e+04, norm = 1.39816189488293e-02, diff = 9.86804900701145e-03
iter = 84, step = 1.01121947566594e-01, func = 2.65896357871024e+04, norm = 2.94630797419126e-02, diff = 1.40742146707162e-02
iter = 85, step = 1.01121947566594e-01, func = 2.65896358692513e+04, norm = 1.64478171830069e-02, diff = 1.44483769734244e-02
iter = 86, step = 9.60658501882643e-02, func = 2.65896358837718e+04, norm = 9.09108307042429e-03, diff = 9.76983207187912e-03
iter = 87, step = 9.12625576788510e-02, func = 2.65896360687976e+04, norm = 9.72576767042091e-03, diff = 9.73752941048558e-03
iter = 88, step = 9.12625576788510e-02, func = 2.65896361106022e+04, norm = 1.30776249335183e-02, diff = 1.93838431743340e-02
iter = 89, step = 8.66994297949085e-02, func = 2.65896361332998e+04, norm = 8.47192591676264e-03, diff = 1.14484747963910e-02
iter = 90, step = 8.23644583051630e-02, func = 2.65896362069195e+04, norm = 7.24232376685165e-03, diff = 8.44385641514279e-03
iter = 91, step = 8.23644583051630e-02, func = 2.65896364975975e+04, norm = 6.03504304455441e-03, diff = 1.74202718859717e-02
iter = 92, step = 7.82462353899049e-02, func = 2.65896365796334e+04, norm = 4.18516504575737e-02, diff = 1.05867609713630e-02
iter = 93, step = 7.43339236204097e-02, func = 2.65896366925846e+04, norm = 2.15471159407497e-02, diff = 5.78629339259963e-03
iter = 94, step = 7.06172274393892e-02, func = 2.65896367380099e+04, norm = 7.04611163349523e-03, diff = 7.24156623327856e-03
iter = 95, step = 7.06172274393892e-02, func = 2.65896366401843e+04, norm = 1.97739601607071e-02, diff = 1.82034922396072e-02
iter = 96, step = 6.70863660674197e-02, func = 2.65896368056136e+04, norm = 1.07104193605717e-02, diff = 7.55418295541517e-03
iter = 97, step = 6.70863660674197e-02, func = 2.65896370944517e+04, norm = 8.54746956429587e-03, diff = 1.61479478273257e-02
iter = 98, step = 6.37320477640487e-02, func = 2.65896369983884e+04, norm = 1.50410186081460e-02, diff = 7.04223274714669e-03
iter = 99, step = 6.37320477640487e-02, func = 2.65896370031138e+04, norm = 9.12323861248279e-03, diff = 8.55243703588717e-03
iter = 100, step = 6.37320477640487e-02, func = 2.65896370344347e+04, norm = 4.65200506430848e-03, diff = 1.71946142428485e-02
iter = 101, step = 6.05454453758463e-02, func = 2.65896368501395e+04, norm = 2.36953550671055e-02, diff = 1.24526299480961e-02
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.658964e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 5, while k = 5 and n = 36
  UB from restricted IP = 233210 using centers : 4 28 11 15 24 
  UB from restricted IP = 35203.9 using centers : 21 9 2 32 33 
In iteration 0 of HessHeuristic, objective value of incumbent is = 35203.9
  UB from restricted IP = 253829 using centers : 8 22 30 3 35 
  UB from restricted IP = 37155.8 using centers : 33 0 21 32 6 
  UB from restricted IP = 36547.8 using centers : 33 0 21 32 9 
In iteration 1 of HessHeuristic, objective value of incumbent is = 35203.9
  UB from restricted IP = 169452 using centers : 15 32 11 9 30 
  UB from restricted IP = 35171.1 using centers : 33 35 2 9 21 
In iteration 2 of HessHeuristic, objective value of incumbent is = 35171.1
  UB from restricted IP = 193752 using centers : 3 2 1 23 0 
  UB from restricted IP = 37166.8 using centers : 24 33 21 25 9 
In iteration 3 of HessHeuristic, objective value of incumbent is = 35171.1
  UB from restricted IP = 211699 using centers : 19 33 25 31 22 
  UB from restricted IP = 34006.5 using centers : 32 33 2 23 21 
  UB from restricted IP = 33710.3 using centers : 35 33 2 23 21 
In iteration 4 of HessHeuristic, objective value of incumbent is = 33710.3
  UB from restricted IP = 115669 using centers : 19 24 30 26 18 
  UB from restricted IP = 35872.9 using centers : 33 25 27 21 9 
In iteration 5 of HessHeuristic, objective value of incumbent is = 33710.3
  UB from restricted IP = 101677 using centers : 9 26 28 33 17 
  UB from restricted IP = 33710.3 using centers : 35 21 2 33 23 
In iteration 6 of HessHeuristic, objective value of incumbent is = 33710.3
  UB from restricted IP = 161855 using centers : 25 16 10 30 32 
  UB from restricted IP = 38931 using centers : 33 9 27 21 32 
  UB from restricted IP = 33710.3 using centers : 33 23 2 21 35 
In iteration 7 of HessHeuristic, objective value of incumbent is = 33710.3
  UB from restricted IP = 175280 using centers : 23 24 9 15 11 
  UB from restricted IP = 44757.4 using centers : 14 21 35 7 0 
  UB from restricted IP = 41463.9 using centers : 6 21 35 7 0 
In iteration 8 of HessHeuristic, objective value of incumbent is = 33710.3
  UB from restricted IP = 225511 using centers : 12 1 35 2 10 
  UB from restricted IP = 44827.3 using centers : 32 33 13 23 21 
  UB from restricted IP = 33748.5 using centers : 24 33 35 23 21 
  UB from restricted IP = 33213.5 using centers : 27 33 35 23 21 
  UB from restricted IP = 31424.5 using centers : 27 33 25 23 21 
In iteration 9 of HessHeuristic, objective value of incumbent is = 31424.5
UB at end of HessHeuristic = 31424.5
UB of heuristicSolution = 31424.5
Best solution after 10 of HessHeuristic is 31424.49

Beginning LOCAL SEARCH with UB = 31424.5

Academic license - for non-commercial use only
# centers = 5, while k = 5 and n = 36
  checking neighbors of node 21
  checking neighbors of node 23
  checking neighbors of node 25
  checking neighbors of node 27
  checking neighbors of node 33
UB at end of local search heuristic = 31424.5
UB of heuristicSolution = 31424.5
Best solution after local search is 31424.49
Academic license - for non-commercial use only
# centers = 5, while k = 5 and n = 36
Optimize a model with 396 rows, 990 columns and 3239 nonzeros
Variable types: 810 continuous, 180 integer (180 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [1e+01, 5e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+05]

MIP start did not produce a new incumbent solution

Presolve removed 118 rows and 423 columns
Presolve time: 0.01s
Presolved: 278 rows, 567 columns, 1940 nonzeros
Variable types: 435 continuous, 132 integer (130 binary)

Root relaxation: infeasible, 70 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 infeasible    0               - infeasible      -     -    0s

Explored 0 nodes (70 simplex iterations) in 0.01 seconds
Thread count was 8 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
UB at end of ContiguityHeuristic = 1e+20
UB of (contiguous) heuristicSolution = 31424.5

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 1296
Number of centers left            = 36
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 1296 variables
Optimize a model with 1405 rows, 1332 columns and 5328 nonzeros
Variable types: 36 continuous, 1296 integer (1296 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+05]
  Objective range  [3e+00, 2e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 5e+00]

MIP start did not produce a new incumbent solution

Presolve removed 90 rows and 42 columns
Presolve time: 0.01s
Presolved: 1315 rows, 1290 columns, 5446 nonzeros
Variable types: 0 continuous, 1290 integer (1254 binary)

Concurrent LP optimizer: dual simplex and barrier
Showing barrier log only...

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 2.788e+04
 Factor NZ  : 6.607e+04 (roughly 2 MBytes of memory)
 Factor Ops : 3.455e+06 (less than 1 second per iteration)
 Threads    : 3

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   1.22279959e+07 -4.86493266e+05  2.05e+04 3.55e-15  1.23e+04     0s
   1   1.62897203e+06 -1.25490480e+06  2.51e+03 2.70e-13  1.75e+03     0s
   2   3.92450126e+05 -5.12622777e+05  4.00e+02 1.60e-13  3.34e+02     0s
   3   1.19015176e+05 -1.10113029e+05  2.85e+01 8.88e-14  6.22e+01     0s
   4   8.14230345e+04 -8.40214659e+03  1.21e+01 3.29e-14  2.35e+01     0s
   5   5.59821007e+04  1.26641015e+04  4.89e+00 2.84e-14  1.12e+01     0s
   6   4.33739694e+04  2.17851156e+04  2.36e+00 2.84e-14  5.58e+00     0s
   7   3.04545760e+04  2.53561084e+04  1.84e-01 2.84e-14  1.32e+00     0s
   8   2.85871001e+04  2.61954870e+04  9.30e-02 2.97e-14  6.21e-01     0s
   9   2.79867682e+04  2.65066303e+04  6.19e-02 4.00e-14  3.84e-01     0s
  10   2.72748415e+04  2.65641371e+04  2.77e-02 5.68e-14  1.84e-01     0s
  11   2.70792494e+04  2.66033210e+04  1.96e-02 5.68e-14  1.24e-01     0s

Barrier performed 11 iterations in 0.03 seconds
Barrier solve interrupted - model solved by another algorithm


Solved with dual simplex

Root relaxation: objective 2.664693e+04, 495 iterations, 0.02 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 26646.9327    0   19          - 26646.9327      -     -    0s
Another try with MIP start
     0     0 31664.5047    0   93          - 31664.5047      -     -    0s
     0     0 36725.9923    0  111          - 36725.9923      -     -    0s
     0     0 37742.7178    0  108          - 37742.7178      -     -    0s
     0     0 37962.9690    0  115          - 37962.9690      -     -    0s
     0     0 37999.7801    0  120          - 37999.7801      -     -    0s
     0     0 38007.5012    0  132          - 38007.5012      -     -    0s
     0     0 38007.7451    0  134          - 38007.7451      -     -    0s
     0     0 38344.3541    0  108          - 38344.3541      -     -    0s
     0     0 38390.7272    0  110          - 38390.7272      -     -    0s
     0     0 38394.8590    0  109          - 38394.8590      -     -    0s
     0     0 38522.0567    0  113          - 38522.0567      -     -    0s
     0     0 38737.7232    0  110          - 38737.7232      -     -    0s
     0     0 38745.5211    0  113          - 38745.5211      -     -    0s
     0     0 38746.9285    0  113          - 38746.9285      -     -    0s
     0     0 42465.1706    0  125          - 42465.1706      -     -    0s
     0     0 42702.2965    0  135          - 42702.2965      -     -    0s
     0     0 42730.6783    0  141          - 42730.6783      -     -    0s
     0     0 42731.5441    0  140          - 42731.5441      -     -    0s
     0     0 43480.5870    0  116          - 43480.5870      -     -    0s
     0     0 43710.0178    0  133          - 43710.0178      -     -    0s
     0     0 43720.9680    0  133          - 43720.9680      -     -    0s
     0     0 43721.3528    0  125          - 43721.3528      -     -    0s
     0     0 44525.1027    0  128          - 44525.1027      -     -    0s
     0     0 44550.7493    0  136          - 44550.7493      -     -    0s
     0     0 44566.5624    0  142          - 44566.5624      -     -    0s
     0     0 44892.2807    0  122          - 44892.2807      -     -    0s
     0     0 44921.5789    0  136          - 44921.5789      -     -    0s
     0     0 44927.1549    0  138          - 44927.1549      -     -    0s
     0     0 45172.9280    0  125          - 45172.9280      -     -    0s
     0     0 45246.6341    0  135          - 45246.6341      -     -    0s
     0     0 45251.8516    0  134          - 45251.8516      -     -    0s
     0     0 45518.1051    0  123          - 45518.1051      -     -    0s
     0     0 45532.9533    0  125          - 45532.9533      -     -    0s
     0     0 45533.1350    0  123          - 45533.1350      -     -    0s
     0     0 45690.5541    0  127          - 45690.5541      -     -    0s
     0     0 45708.8611    0  128          - 45708.8611      -     -    0s
     0     0 45708.9456    0  128          - 45708.9456      -     -    0s
     0     0 47223.0763    0  135          - 47223.0763      -     -    0s
     0     0 47299.1158    0  137          - 47299.1158      -     -    0s
     0     0 47306.8808    0  138          - 47306.8808      -     -    0s
     0     0 47955.2574    0  120          - 47955.2574      -     -    0s
     0     0 47976.1519    0  127          - 47976.1519      -     -    0s
     0     0 47982.4409    0  140          - 47982.4409      -     -    0s
     0     0 48217.1694    0  127          - 48217.1694      -     -    0s
     0     0 48227.4172    0  131          - 48227.4172      -     -    0s
     0     0 48416.8442    0  129          - 48416.8442      -     -    0s
     0     0 48422.6795    0  129          - 48422.6795      -     -    0s
     0     0 48461.1872    0  134          - 48461.1872      -     -    0s
     0     0 48461.1872    0  134          - 48461.1872      -     -    0s
     0     2 48461.1872    0  134          - 48461.1872      -     -    0s

Cutting planes:
  Cover: 23
  Clique: 3
  MIR: 4
  StrongCG: 3
  Flow cover: 8
  GUB cover: 5
  Zero half: 9
  Lazy constraints: 38

Explored 1276 nodes (55949 simplex iterations) in 2.79 seconds
Thread count was 8 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 2.788847 seconds
Total time elapsed: 3.079176 seconds
Number of callbacks: 28
Time in callbacks: 0.002570 seconds
Number of lazy constraints generated: 340
+ for state in $states
+ echo 'Running PA'
Running PA
+ /home/lykhovyd/progs/districting/districting myconfig.txt PA /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/PA.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/PA/counties/graph/PA.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/PA/counties/graph/PA_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/PA/counties/graph/PA.population
state[2]        = PA
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/PA.ralg_hot
nr_comp = 1
graph: 67 nodes, 168 edges (read)
Model input: L = 702160, U = 709216, k = 18.
Graph is connected.
Model input: total population = 12702379
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.61293647670859e+04, norm = 1.86589013397736e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 2.61336657480667e+04, norm = 1.19773812450829e+01, diff = 1.27938921680565e+00
iter = 3, step = 9.02500000000000e-01, func = 2.61344431194655e+04, norm = 8.93837323848345e+00, diff = 8.02615130379645e-01
iter = 4, step = 8.57375000000000e-01, func = 2.61339552513598e+04, norm = 1.13235519009692e+01, diff = 7.33861767216283e-01
iter = 5, step = 8.14506250000000e-01, func = 2.61342773173965e+04, norm = 9.30338148769734e+00, diff = 5.84302243232321e-01
iter = 6, step = 8.14506250000000e-01, func = 2.61349788582674e+04, norm = 8.99696982378751e+00, diff = 1.15425461911787e+00
iter = 7, step = 7.73780937500000e-01, func = 2.61346956845434e+04, norm = 7.48259681074829e+00, diff = 6.24948254643312e-01
iter = 8, step = 7.35091890625000e-01, func = 2.61356939372502e+04, norm = 5.99519344570431e+00, diff = 5.91667793050386e-01
iter = 9, step = 6.98337296093750e-01, func = 2.61345510392648e+04, norm = 8.69171484454404e+00, diff = 5.65154109222719e-01
iter = 10, step = 6.63420431289062e-01, func = 2.61352158657985e+04, norm = 8.18228681644563e+00, diff = 4.59314912419702e-01
iter = 11, step = 6.30249409724609e-01, func = 2.61358361565756e+04, norm = 8.16861565356147e+00, diff = 4.58023671540530e-01
iter = 12, step = 5.98736939238379e-01, func = 2.61354863468753e+04, norm = 8.32480023143210e+00, diff = 4.73644415242547e-01
iter = 13, step = 5.68800092276460e-01, func = 2.61356082892160e+04, norm = 7.51928950018726e+00, diff = 4.48352408431542e-01
iter = 14, step = 5.40360087662637e-01, func = 2.61359648491480e+04, norm = 5.93194970421485e+00, diff = 4.00044513292622e-01
iter = 15, step = 5.13342083279505e-01, func = 2.61360110607268e+04, norm = 6.02723306950213e+00, diff = 4.03590853840061e-01
iter = 16, step = 4.87674979115529e-01, func = 2.61361064210923e+04, norm = 7.37011159677655e+00, diff = 3.63140741981132e-01
iter = 17, step = 4.63291230159753e-01, func = 2.61360750766970e+04, norm = 7.00292694557489e+00, diff = 3.40476490534217e-01
iter = 18, step = 4.40126668651765e-01, func = 2.61362937119156e+04, norm = 7.79020767539389e+00, diff = 3.33525393068783e-01
iter = 19, step = 4.18120335219177e-01, func = 2.61362842734003e+04, norm = 7.67745469456788e+00, diff = 2.90954346212787e-01
iter = 20, step = 3.97214318458218e-01, func = 2.61364284314198e+04, norm = 4.95128761201325e+00, diff = 2.90817622627617e-01
iter = 21, step = 3.77353602535307e-01, func = 2.61362408344576e+04, norm = 6.35274478503869e+00, diff = 3.13445601315927e-01
iter = 22, step = 3.58485922408542e-01, func = 2.61366964583118e+04, norm = 5.43610383332531e+00, diff = 2.42461081622440e-01
iter = 23, step = 3.40561626288115e-01, func = 2.61363674457480e+04, norm = 6.67497450749126e+00, diff = 2.57186231657116e-01
iter = 24, step = 3.23533544973709e-01, func = 2.61365339796543e+04, norm = 5.51674104394926e+00, diff = 2.25312168952501e-01
iter = 25, step = 3.07356867725023e-01, func = 2.61367142796702e+04, norm = 5.43614536787520e+00, diff = 2.23004822542932e-01
iter = 26, step = 2.91989024338772e-01, func = 2.61366725472421e+04, norm = 6.45097406786877e+00, diff = 2.20456456225391e-01
iter = 27, step = 2.77389573121834e-01, func = 2.61367613341809e+04, norm = 5.09498639880157e+00, diff = 1.81614132814325e-01
iter = 28, step = 2.63520094465742e-01, func = 2.61369443983038e+04, norm = 4.68819615201394e+00, diff = 1.90702056656749e-01
iter = 29, step = 2.50344089742455e-01, func = 2.61370270651104e+04, norm = 4.94123300596365e+00, diff = 1.85553387088915e-01
iter = 30, step = 2.37826885255332e-01, func = 2.61368353509711e+04, norm = 7.18492321132930e+00, diff = 1.78670886289404e-01
iter = 31, step = 2.25935540992565e-01, func = 2.61368329848892e+04, norm = 5.22788434060068e+00, diff = 1.43993922059968e-01
iter = 32, step = 2.14638763942937e-01, func = 2.61369978229236e+04, norm = 5.38852143107573e+00, diff = 1.60048402844136e-01
iter = 33, step = 2.03906825745790e-01, func = 2.61371021589297e+04, norm = 4.63573912587633e+00, diff = 1.43818078617868e-01
iter = 34, step = 1.93711484458501e-01, func = 2.61370155513335e+04, norm = 5.60807860800668e+00, diff = 1.49503407513709e-01
iter = 35, step = 1.84025910235576e-01, func = 2.61370531281169e+04, norm = 5.41712939915281e+00, diff = 1.18833628822897e-01
iter = 36, step = 1.74824614723797e-01, func = 2.61371365055620e+04, norm = 4.88427534624635e+00, diff = 1.20531344077804e-01
iter = 37, step = 1.66083383987607e-01, func = 2.61371745879629e+04, norm = 4.37971268617236e+00, diff = 1.16162863967881e-01
iter = 38, step = 1.57779214788227e-01, func = 2.61371084606131e+04, norm = 5.77525914165364e+00, diff = 1.13333637823052e-01
iter = 39, step = 1.49890254048815e-01, func = 2.61372009667128e+04, norm = 4.15879323777971e+00, diff = 9.34817013902532e-02
iter = 40, step = 1.42395741346375e-01, func = 2.61371881409394e+04, norm = 3.79649784983880e+00, diff = 1.05353629492490e-01
iter = 41, step = 1.35275954279056e-01, func = 2.61371536639805e+04, norm = 4.97297899028969e+00, diff = 1.00137414425198e-01
iter = 42, step = 1.28512156565103e-01, func = 2.61372141924734e+04, norm = 4.64858221168420e+00, diff = 8.09180952276562e-02
iter = 43, step = 1.22086548736848e-01, func = 2.61372208044222e+04, norm = 4.83053387115478e+00, diff = 8.03187801765384e-02
iter = 44, step = 1.15982221300006e-01, func = 2.61372923111564e+04, norm = 4.04580321894153e+00, diff = 7.61334613082991e-02
iter = 45, step = 1.10183110235005e-01, func = 2.61372496388530e+04, norm = 4.26674642895098e+00, diff = 8.03498099353460e-02
iter = 46, step = 1.04673954723255e-01, func = 2.61372603365545e+04, norm = 4.62341860568127e+00, diff = 5.91774180945478e-02
iter = 47, step = 9.94402569870922e-02, func = 2.61373123344332e+04, norm = 4.10433033418805e+00, diff = 6.28232171589676e-02
iter = 48, step = 9.44682441377376e-02, func = 2.61373244536836e+04, norm = 3.72427157660747e+00, diff = 6.79247655294107e-02
iter = 49, step = 8.97448319308507e-02, func = 2.61373183014710e+04, norm = 4.05691028908315e+00, diff = 6.01528947197360e-02
iter = 50, step = 8.52575903343082e-02, func = 2.61373600708125e+04, norm = 4.43646797385416e+00, diff = 4.96952193696589e-02
iter = 51, step = 8.09947108175928e-02, func = 2.61373374149078e+04, norm = 3.43335103993301e+00, diff = 5.08634241285921e-02
iter = 52, step = 7.69449752767131e-02, func = 2.61373690574202e+04, norm = 2.44640554878864e+00, diff = 5.02776467227064e-02
iter = 53, step = 7.30977265128775e-02, func = 2.61373547707378e+04, norm = 3.53236928439534e+00, diff = 4.68428934716898e-02
iter = 54, step = 6.94428401872336e-02, func = 2.61373591720494e+04, norm = 3.63880316566320e+00, diff = 3.56219794501271e-02
iter = 55, step = 6.94428401872336e-02, func = 2.61373621026047e+04, norm = 3.48736518093925e+00, diff = 7.53249585214039e-02
iter = 56, step = 6.59706981778719e-02, func = 2.61373944062486e+04, norm = 3.61297658566981e+00, diff = 4.53284053040404e-02
iter = 57, step = 6.26721632689783e-02, func = 2.61373947800017e+04, norm = 2.79521233628268e+00, diff = 3.51157346807915e-02
iter = 58, step = 5.95385551055294e-02, func = 2.61373972853462e+04, norm = 2.67607797451840e+00, diff = 2.97442277516051e-02
iter = 59, step = 5.65616273502529e-02, func = 2.61373818349454e+04, norm = 3.18857803350788e+00, diff = 2.89944466227281e-02
iter = 60, step = 5.37335459827403e-02, func = 2.61374013884612e+04, norm = 2.60284213660109e+00, diff = 2.81160243138119e-02
iter = 61, step = 5.10468686836033e-02, func = 2.61373988948443e+04, norm = 2.67292806206650e+00, diff = 3.05912777786751e-02
iter = 62, step = 4.84945252494231e-02, func = 2.61374047962671e+04, norm = 2.58083857377824e+00, diff = 2.78394262144154e-02
iter = 63, step = 4.60697989869519e-02, func = 2.61374131660759e+04, norm = 2.71031549466678e+00, diff = 2.36913749392713e-02
iter = 64, step = 4.37663090376043e-02, func = 2.61374265840575e+04, norm = 2.79808309238015e+00, diff = 2.59387046306512e-02
iter = 65, step = 4.15779935857241e-02, func = 2.61374301605125e+04, norm = 2.70989214036381e+00, diff = 2.36802288451788e-02
iter = 66, step = 3.94990939064379e-02, func = 2.61374317345766e+04, norm = 2.34946050365953e+00, diff = 2.33877676940802e-02
iter = 67, step = 3.75241392111160e-02, func = 2.61374359447366e+04, norm = 2.33701644873854e+00, diff = 2.17891897884466e-02
iter = 68, step = 3.56479322505602e-02, func = 2.61374400162195e+04, norm = 2.31300033353318e+00, diff = 1.93815569213311e-02
iter = 69, step = 3.38655356380322e-02, func = 2.61374333189637e+04, norm = 2.79249205402035e+00, diff = 1.94507409155044e-02
iter = 70, step = 3.21722588561306e-02, func = 2.61374466728196e+04, norm = 2.47449163781488e+00, diff = 1.72470099353000e-02
iter = 71, step = 3.05636459133241e-02, func = 2.61374577902384e+04, norm = 2.27125030565726e+00, diff = 1.62698514228641e-02
iter = 72, step = 2.90354636176579e-02, func = 2.61374580229035e+04, norm = 2.12180356035528e+00, diff = 1.75534078805345e-02
iter = 73, step = 2.75836904367750e-02, func = 2.61374554803411e+04, norm = 2.38988131804505e+00, diff = 1.33595087904166e-02
iter = 74, step = 2.62045059149362e-02, func = 2.61374562644778e+04, norm = 2.60073826626514e+00, diff = 1.42077762538267e-02
iter = 75, step = 2.48942806191894e-02, func = 2.61374609367599e+04, norm = 2.38733161952880e+00, diff = 1.21315572865103e-02
iter = 76, step = 2.36495665882299e-02, func = 2.61374599327995e+04, norm = 2.20584956819597e+00, diff = 1.23531277971235e-02
iter = 77, step = 2.24670882588184e-02, func = 2.61374613734015e+04, norm = 2.37517333963776e+00, diff = 1.11189193104972e-02
iter = 78, step = 2.13437338458775e-02, func = 2.61374674281439e+04, norm = 1.94421088543778e+00, diff = 1.13574911164748e-02
iter = 79, step = 2.02765471535836e-02, func = 2.61374686433895e+04, norm = 2.15482656417205e+00, diff = 1.10661673481669e-02
iter = 80, step = 1.92627197959044e-02, func = 2.61374693417780e+04, norm = 2.36358484324962e+00, diff = 1.07559592664936e-02
iter = 81, step = 1.82995838061092e-02, func = 2.61374692068097e+04, norm = 2.15629737817447e+00, diff = 9.23458806138707e-03
iter = 82, step = 1.73846046158038e-02, func = 2.61374677055991e+04, norm = 2.46925317049736e+00, diff = 9.79584927909172e-03
iter = 83, step = 1.65153743850136e-02, func = 2.61374742447873e+04, norm = 1.92242429033696e+00, diff = 7.79873587872118e-03
iter = 84, step = 1.56896056657629e-02, func = 2.61374737634979e+04, norm = 2.20356830615636e+00, diff = 6.92731242906498e-03
iter = 85, step = 1.49051253824747e-02, func = 2.61374778144762e+04, norm = 1.68104129802898e+00, diff = 7.13818570143040e-03
iter = 86, step = 1.41598691133510e-02, func = 2.61374750096955e+04, norm = 1.95747402962496e+00, diff = 6.40405845947940e-03
iter = 87, step = 1.34518756576835e-02, func = 2.61374771640924e+04, norm = 1.95495920706461e+00, diff = 6.20232075164497e-03
iter = 88, step = 1.27792818747993e-02, func = 2.61374793217340e+04, norm = 2.10329022847458e+00, diff = 5.82868355392480e-03
iter = 89, step = 1.21403177810593e-02, func = 2.61374800898832e+04, norm = 1.80947918790812e+00, diff = 5.74657674078455e-03
iter = 90, step = 1.15333018920064e-02, func = 2.61374806161526e+04, norm = 2.73508632829528e+00, diff = 6.56826804178623e-03
iter = 91, step = 1.09566367974060e-02, func = 2.61374820144522e+04, norm = 2.07378572794448e+00, diff = 4.51634122708469e-03
iter = 92, step = 1.04088049575357e-02, func = 2.61374828883794e+04, norm = 1.82268833038804e+00, diff = 5.30314771061616e-03
iter = 93, step = 9.88836470965895e-03, func = 2.61374832031893e+04, norm = 1.78139384962263e+00, diff = 4.49553343300110e-03
iter = 94, step = 9.39394647417600e-03, func = 2.61374833678957e+04, norm = 1.54233113963299e+00, diff = 3.92738620797240e-03
iter = 95, step = 8.92424915046720e-03, func = 2.61374852460912e+04, norm = 1.13386685217580e+00, diff = 4.13204967073801e-03
iter = 96, step = 8.47803669294384e-03, func = 2.61374845660323e+04, norm = 1.71230723251018e+00, diff = 3.80962098763694e-03
iter = 97, step = 8.05413485829665e-03, func = 2.61374849060845e+04, norm = 2.12435883154211e+00, diff = 3.02167971389434e-03
iter = 98, step = 7.65142811538181e-03, func = 2.61374854523810e+04, norm = 1.85402083432996e+00, diff = 3.59330585807820e-03
iter = 99, step = 7.26885670961272e-03, func = 2.61374856904720e+04, norm = 1.57966444465783e+00, diff = 3.41162668376760e-03
iter = 100, step = 6.90541387413209e-03, func = 2.61374868060076e+04, norm = 1.45384428650682e+00, diff = 3.45108579126311e-03
iter = 101, step = 6.56014318042548e-03, func = 2.61374873895190e+04, norm = 1.65269197555765e+00, diff = 2.91086907387448e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.613754e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 18, while k = 18 and n = 67
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 1.80408e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 4489
Number of centers left            = 67
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 4489 variables
Optimize a model with 4691 rows, 4556 columns and 18224 nonzeros
Variable types: 67 continuous, 4489 integer (4489 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+06]
  Objective range  [7e+00, 3e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 2e+01]
Presolve removed 0 rows and 204 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.002965 seconds
Total time elapsed: 0.084917 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running RI'
Running RI
+ /home/lykhovyd/progs/districting/districting myconfig.txt RI /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/RI.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/RI/counties/graph/RI.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/RI/counties/graph/RI_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/RI/counties/graph/RI.population
state[2]        = RI
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/RI.ralg_hot
nr_comp = 1
graph: 5 nodes, 7 edges (read)
Model input: L = 523653, U = 528914, k = 2.
Graph is connected.
Model input: total population = 1052567
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 6.30898570316582e+02, norm = 3.04980223314307e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 6.31384261315270e+02, norm = 2.04912942515536e+00, diff = 7.84933626536133e-01
iter = 3, step = 8.57375000000000e-01, func = 6.31544705729470e+02, norm = 1.30251472202234e+00, diff = 7.07472012081730e-01
iter = 4, step = 1.02885000000000e+00, func = 6.31380800431807e+02, norm = 1.39733110459536e+00, diff = 1.58671340802940e+00
iter = 5, step = 9.77407500000000e-01, func = 6.31405584194683e+02, norm = 1.52290989037609e+00, diff = 6.47998024891208e-01
iter = 6, step = 9.28537125000000e-01, func = 6.31519868216360e+02, norm = 9.11004560329997e-01, diff = 5.68435655295870e-01
iter = 7, step = 8.82110268750000e-01, func = 6.31351059746746e+02, norm = 1.11040448832887e+00, diff = 5.47829611090794e-01
iter = 8, step = 8.82110268750000e-01, func = 6.31297961831111e+02, norm = 1.14024793168284e+00, diff = 8.74339046987471e-01
iter = 9, step = 8.82110268750000e-01, func = 6.31607803915348e+02, norm = 6.91570786371547e-01, diff = 5.29516402609403e-01
iter = 10, step = 8.38004755312500e-01, func = 6.31635735727206e+02, norm = 2.91379167765259e-01, diff = 1.35914472714161e-01
iter = 11, step = 8.38004755312500e-01, func = 6.31618947269070e+02, norm = 3.72123252859797e-01, diff = 2.70776264757576e-01
iter = 12, step = 8.38004755312500e-01, func = 6.31717679628828e+02, norm = 1.87962086885412e-01, diff = 1.56988133649883e-01
iter = 13, step = 7.96104517546875e-01, func = 6.31762880446985e+02, norm = 1.20820464441820e-01, diff = 6.65203575390022e-02
iter = 14, step = 7.56299291669531e-01, func = 6.31759266203309e+02, norm = 1.05851637286413e-01, diff = 5.44007776206675e-02
iter = 15, step = 7.18484327086054e-01, func = 6.31757059045020e+02, norm = 6.50778856194738e-02, diff = 4.58631340613583e-02
iter = 16, step = 7.18484327086054e-01, func = 6.31760402617050e+02, norm = 6.55247897672361e-02, diff = 1.24050991578778e-01
iter = 17, step = 7.18484327086054e-01, func = 6.31776841692029e+02, norm = 3.27623948836180e-02, diff = 1.39881942329615e-01
iter = 18, step = 6.82560110731752e-01, func = 6.31780918429006e+02, norm = 2.36173215952817e-02, diff = 1.93769249632264e-01
iter = 19, step = 6.48432105195164e-01, func = 6.31777298685833e+02, norm = 2.93149390232605e-01, diff = 1.11990301508389e-01
iter = 20, step = 6.16010499935406e-01, func = 6.31779299002193e+02, norm = 1.47952490858802e-01, diff = 1.02842391744125e-01
iter = 21, step = 5.85209974938635e-01, func = 6.31782086433869e+02, norm = 1.67982649722227e-02, diff = 6.20918970356563e-02
iter = 22, step = 5.55949476191704e-01, func = 6.31782429749318e+02, norm = 1.06718384537790e-02, diff = 1.53882282313367e-01
iter = 23, step = 5.55949476191704e-01, func = 6.31786277613706e+02, norm = 1.03528218602802e-02, diff = 2.75213498592253e-01
iter = 24, step = 6.67139371430044e-01, func = 6.31707567865797e+02, norm = 4.90801401448154e-01, diff = 5.35239272907548e-01
iter = 25, step = 6.33782402858542e-01, func = 6.31789117682833e+02, norm = 2.45442828274149e-01, diff = 1.45886818888182e-01
iter = 26, step = 6.02093282715615e-01, func = 6.31789787213526e+02, norm = 4.49258789940336e-03, diff = 1.94318481610891e-02
iter = 27, step = 5.71988618579834e-01, func = 6.31789745193427e+02, norm = 4.97827804423189e-03, diff = 2.73233105557029e-02
iter = 28, step = 5.71988618579834e-01, func = 6.31777181016174e+02, norm = 1.22755237462509e-01, diff = 4.64833312849515e-02
iter = 29, step = 5.43389187650842e-01, func = 6.31790828991049e+02, norm = 6.14344152155134e-02, diff = 3.12831408104164e-02
iter = 30, step = 5.16219728268300e-01, func = 6.31791290755653e+02, norm = 3.52288533052450e-03, diff = 1.44969524404897e-02
iter = 31, step = 4.90408741854885e-01, func = 6.31781127607859e+02, norm = 7.35873364005961e-02, diff = 1.51431778863840e-02
iter = 32, step = 4.65888304762141e-01, func = 6.31791286020355e+02, norm = 3.68256291721722e-02, diff = 1.79532284273516e-02
iter = 33, step = 4.42593889524034e-01, func = 6.31791343174170e+02, norm = 1.81777172874277e-03, diff = 4.10846712407627e-03
iter = 34, step = 4.20464195047832e-01, func = 6.31791214517972e+02, norm = 2.00109793948652e-03, diff = 2.75847860817599e-03
iter = 35, step = 4.20464195047832e-01, func = 6.31791544475617e+02, norm = 1.00054896974321e-03, diff = 8.30529155121009e-03
iter = 36, step = 3.99440985295441e-01, func = 6.31784312406415e+02, norm = 3.58239639744356e-02, diff = 6.89271522778156e-03
iter = 37, step = 3.99440985295441e-01, func = 6.31791458634582e+02, norm = 1.79237089837548e-02, diff = 1.02176250132366e-02
iter = 38, step = 3.79468936030669e-01, func = 6.31791482607787e+02, norm = 1.36050088657561e-03, diff = 2.99328843641728e-04
iter = 39, step = 3.60495489229135e-01, func = 6.31791569714860e+02, norm = 6.80250443287728e-04, diff = 3.98957379427678e-04
iter = 40, step = 3.42470714767678e-01, func = 6.31791581752892e+02, norm = 2.95336197466235e-04, diff = 9.64461690785389e-04
iter = 41, step = 3.25347179029294e-01, func = 6.31791567859689e+02, norm = 2.90319659221726e-04, diff = 7.59971382889228e-04
iter = 42, step = 3.25347179029294e-01, func = 6.31790997074988e+02, norm = 1.71023876165671e-02, diff = 1.83312205783893e-03
iter = 43, step = 3.09079820077830e-01, func = 6.31791118687197e+02, norm = 1.74587664607804e-02, diff = 3.27500249234190e-03
iter = 44, step = 2.93625829073938e-01, func = 6.31791587398112e+02, norm = 6.40652102802236e-03, diff = 1.96885043164760e-03
iter = 45, step = 2.78944537620241e-01, func = 6.31791600304054e+02, norm = 1.45150619884428e-04, diff = 4.75257493842563e-04
iter = 46, step = 2.78944537620241e-01, func = 6.31791614351785e+02, norm = 5.52529156440105e-03, diff = 1.48000055278881e-03
iter = 47, step = 2.64997310739229e-01, func = 6.31791607856631e+02, norm = 2.76383618250741e-03, diff = 6.85806110365241e-04
iter = 48, step = 2.51747445202268e-01, func = 6.31791626250517e+02, norm = 1.45026403261031e-04, diff = 1.98579394424281e-04
iter = 49, step = 2.39160072942154e-01, func = 6.31791625458703e+02, norm = 1.01302771450884e-04, diff = 3.88472125621982e-04
iter = 50, step = 2.27202069295047e-01, func = 6.31791472467982e+02, norm = 3.20207852121685e-03, diff = 4.19483819502108e-04
iter = 51, step = 2.15841965830294e-01, func = 6.31791630595186e+02, norm = 1.60160792210752e-03, diff = 3.61697803736060e-04
iter = 52, step = 2.05049867538780e-01, func = 6.31791626216082e+02, norm = 1.03743411542329e-04, diff = 5.22127991429375e-05
iter = 53, step = 2.05049867538780e-01, func = 6.31791634252272e+02, norm = 3.62459832768798e-05, diff = 1.73022313911483e-04
iter = 54, step = 1.94797374161841e-01, func = 6.31791633083643e+02, norm = 3.62434462431448e-05, diff = 1.34485922711403e-04
iter = 55, step = 1.94797374161841e-01, func = 6.31791540394641e+02, norm = 1.59561630405008e-03, diff = 2.80340506352437e-04
iter = 56, step = 1.85057505453749e-01, func = 6.31791638294499e+02, norm = 7.98010682911753e-04, diff = 1.11900609954084e-04
iter = 57, step = 1.75804630181061e-01, func = 6.31791637154524e+02, norm = 2.55472725630248e-05, diff = 7.34491034379767e-06
iter = 58, step = 1.75804630181061e-01, func = 6.31791615700890e+02, norm = 3.99131983787405e-04, diff = 5.02612111717969e-05
iter = 59, step = 1.67014398672008e-01, func = 6.31791638814652e+02, norm = 2.00033881950204e-04, diff = 2.52593695369320e-05
iter = 60, step = 1.58663678738408e-01, func = 6.31791636983912e+02, norm = 2.56585705352128e-05, diff = 1.90422831441889e-06
iter = 61, step = 1.58663678738408e-01, func = 6.31791638413376e+02, norm = 9.05217051466517e-06, diff = 3.95785365518695e-06
iter = 62, step = 1.50730494801487e-01, func = 6.31791636678142e+02, norm = 6.97548330304638e-04, diff = 2.51185519391157e-06
iter = 63, step = 1.43193970061413e-01, func = 6.31791593621308e+02, norm = 6.99318543153768e-04, diff = 6.84417549559365e-05
iter = 64, step = 1.43193970061413e-01, func = 6.31791638493638e+02, norm = 1.83836890132216e-04, diff = 6.42879321287003e-05
iter = 65, step = 1.36034271558342e-01, func = 6.31791638548501e+02, norm = 9.04637367065961e-06, diff = 1.40880851823178e-06
iter = 66, step = 1.29232557980425e-01, func = 6.31791638646684e+02, norm = 4.52607430548288e-06, diff = 2.48896239366164e-06
iter = 67, step = 1.22770930081404e-01, func = 6.31791638784464e+02, norm = 1.21432719257073e-04, diff = 2.71062741821066e-06
iter = 68, step = 1.16632383577334e-01, func = 6.31791638859359e+02, norm = 6.08203817954380e-05, diff = 7.45310944197368e-06
iter = 69, step = 1.10800764398467e-01, func = 6.31791638766963e+02, norm = 5.04960514766191e-06, diff = 1.00753867756275e-06
iter = 70, step = 1.05260726178544e-01, func = 6.31791637343245e+02, norm = 7.29344117129162e-05, diff = 3.46743291413165e-06
iter = 71, step = 9.99976898696164e-02, func = 6.31791638862847e+02, norm = 3.64672058564813e-05, diff = 3.81785631753532e-06
iter = 72, step = 9.99976898696164e-02, func = 6.31791638777451e+02, norm = 2.52409517400561e-06, diff = 1.15737536279022e-06
iter = 73, step = 9.99976898696164e-02, func = 6.31791638927425e+02, norm = 2.25934947976107e-06, diff = 1.36622175964368e-06
iter = 74, step = 9.49978053761356e-02, func = 6.31791638891384e+02, norm = 2.27759064568826e-06, diff = 4.01857948559006e-07
iter = 75, step = 9.49978053761356e-02, func = 6.31791638969715e+02, norm = 1.13879532288016e-06, diff = 1.76763667969068e-06
iter = 76, step = 9.02479151073288e-02, func = 6.31791638969001e+02, norm = 6.47233442857117e-07, diff = 1.31008299560614e-06
iter = 77, step = 8.57355193519624e-02, func = 6.31791637441626e+02, norm = 3.41603063542209e-05, diff = 1.44479897336123e-06
iter = 78, step = 8.57355193519624e-02, func = 6.31791638981395e+02, norm = 1.70801531771049e-05, diff = 2.09528956888597e-06
iter = 79, step = 8.14487433843643e-02, func = 6.31791638968132e+02, norm = 5.25036794423488e-07, diff = 1.06563523330681e-07
iter = 80, step = 9.77384920612371e-02, func = 6.31791638972352e+02, norm = 3.67435555472639e-07, diff = 4.41757772485751e-07
iter = 81, step = 9.77384920612371e-02, func = 6.31791638833292e+02, norm = 8.54316915663833e-06, diff = 5.48764442070254e-07
iter = 82, step = 9.28515674581752e-02, func = 6.31791638988802e+02, norm = 4.27522397842411e-06, diff = 2.98692294647201e-07
iter = 83, step = 8.82089890852665e-02, func = 6.31791638988445e+02, norm = 2.43013686481039e-07, diff = 2.05745343842977e-08
iter = 84, step = 8.37985396310031e-02, func = 6.31791638989084e+02, norm = 1.82417469658803e-07, diff = 2.48427400982422e-08
iter = 85, step = 8.37985396310031e-02, func = 6.31791638994698e+02, norm = 1.60667353713961e-07, diff = 4.06220603911947e-08
iter = 86, step = 7.96086126494530e-02, func = 6.31791638997473e+02, norm = 1.59091806557582e-05, diff = 5.45380106838864e-08
iter = 87, step = 7.56281820169803e-02, func = 6.31791638447045e+02, norm = 1.60147562305121e-05, diff = 8.29736132129876e-07
iter = 88, step = 7.56281820169803e-02, func = 6.31791638996826e+02, norm = 4.20174753511926e-06, diff = 7.65361803466818e-07
iter = 89, step = 7.18467729161313e-02, func = 6.31791638999092e+02, norm = 7.77102240063649e-08, diff = 5.42109249640151e-08
iter = 90, step = 6.82544342703247e-02, func = 6.31791638996694e+02, norm = 8.34591910941769e-08, diff = 4.03644835494719e-08
iter = 91, step = 6.48417125568085e-02, func = 6.31791638943377e+02, norm = 2.68939496179601e-06, diff = 5.88513596143651e-08
iter = 92, step = 6.15996269289681e-02, func = 6.31791638998340e+02, norm = 1.34469748089801e-06, diff = 9.45675961189923e-08
iter = 93, step = 5.85196455825197e-02, func = 6.31791638970743e+02, norm = 1.61814300110883e-06, diff = 3.36161593161044e-08
iter = 94, step = 5.55936633033937e-02, func = 6.31791638998798e+02, norm = 8.09365495484173e-07, diff = 4.22527231692552e-08
iter = 95, step = 5.28139801382240e-02, func = 6.31791638999025e+02, norm = 4.17553417520284e-08, diff = 7.92188311841458e-09
iter = 96, step = 5.01732811313128e-02, func = 6.31791638999212e+02, norm = 3.04343968663182e-08, diff = 9.20070599638615e-09
iter = 97, step = 5.01732811313128e-02, func = 6.31791638993129e+02, norm = 6.57908251662752e-07, diff = 1.60657591168097e-08
iter = 98, step = 4.76646170747471e-02, func = 6.31791638999289e+02, norm = 3.29806992428970e-07, diff = 1.64261809933786e-08
iter = 99, step = 4.76646170747471e-02, func = 6.31791638996932e+02, norm = 4.04781214859604e-07, diff = 9.10074916849905e-09
iter = 100, step = 4.52813862210098e-02, func = 6.31791638999355e+02, norm = 2.03493954664091e-07, diff = 8.59431876307279e-09
iter = 101, step = 4.30173169099593e-02, func = 6.31791638999606e+02, norm = 2.04349856548704e-08, diff = 7.38256791893939e-10
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 6.317916e+02
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 2, while k = 2 and n = 5
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 1.28951e-321
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 25
Number of centers left            = 5
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 25 variables
Optimize a model with 41 rows, 30 columns and 120 nonzeros
Variable types: 5 continuous, 25 integer (25 binary)
Coefficient statistics:
  Matrix range     [1e+00, 6e+05]
  Objective range  [3e+01, 2e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 2e+00]
Presolve removed 0 rows and 10 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.000153 seconds
Total time elapsed: 0.003770 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running SC'
Running SC
+ /home/lykhovyd/progs/districting/districting myconfig.txt SC /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/SC.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/SC/counties/graph/SC.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/SC/counties/graph/SC_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/SC/counties/graph/SC.population
state[2]        = SC
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/SC.ralg_hot
nr_comp = 1
graph: 46 nodes, 109 edges (read)
Model input: L = 657463, U = 664070, k = 7.
Graph is connected.
Model input: total population = 4625364
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 8.83819520971870e+03, norm = 1.25015554287730e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 8.83986581907743e+03, norm = 6.15613670303631e+00, diff = 1.32562318906908e+00
iter = 3, step = 9.02500000000000e-01, func = 8.83998783797070e+03, norm = 6.32038504046363e+00, diff = 6.98371432268139e-01
iter = 4, step = 8.57375000000000e-01, func = 8.84021118410450e+03, norm = 7.37951772223157e+00, diff = 6.56101892424099e-01
iter = 5, step = 8.57375000000000e-01, func = 8.84038730688064e+03, norm = 6.80698686929862e+00, diff = 1.08104982138964e+00
iter = 6, step = 8.14506250000000e-01, func = 8.84059799259694e+03, norm = 4.58552336398923e+00, diff = 6.35927563202995e-01
iter = 7, step = 7.73780937500000e-01, func = 8.84104626786104e+03, norm = 4.72176321992995e+00, diff = 5.87883566435039e-01
iter = 8, step = 7.35091890625000e-01, func = 8.84099759041036e+03, norm = 5.10740945987222e+00, diff = 5.09737319652984e-01
iter = 9, step = 6.98337296093750e-01, func = 8.84191151491230e+03, norm = 4.17314941426309e+00, diff = 5.38142181217591e-01
iter = 10, step = 6.63420431289062e-01, func = 8.84141054681548e+03, norm = 4.66614271106333e+00, diff = 5.22290757019250e-01
iter = 11, step = 6.30249409724609e-01, func = 8.84189572644836e+03, norm = 4.35135197998517e+00, diff = 4.38304521427982e-01
iter = 12, step = 5.98736939238379e-01, func = 8.84218403406440e+03, norm = 4.03378475086350e+00, diff = 4.31596804988975e-01
iter = 13, step = 5.68800092276460e-01, func = 8.84205825592272e+03, norm = 4.58442916964017e+00, diff = 4.38364909543444e-01
iter = 14, step = 5.40360087662637e-01, func = 8.84209481298922e+03, norm = 3.93536970553394e+00, diff = 3.53633564982104e-01
iter = 15, step = 5.13342083279505e-01, func = 8.84200220105086e+03, norm = 3.66903605567179e+00, diff = 3.89490679208564e-01
iter = 16, step = 4.87674979115529e-01, func = 8.84226984203199e+03, norm = 3.32664491430385e+00, diff = 3.56711395967712e-01
iter = 17, step = 4.63291230159753e-01, func = 8.84222998897586e+03, norm = 3.22460885873262e+00, diff = 3.33669142896807e-01
iter = 18, step = 4.40126668651765e-01, func = 8.84224678575869e+03, norm = 3.40549997326392e+00, diff = 2.95193453172794e-01
iter = 19, step = 4.18120335219177e-01, func = 8.84247349791958e+03, norm = 3.08236312236264e+00, diff = 2.82441513733070e-01
iter = 20, step = 3.97214318458218e-01, func = 8.84242340107815e+03, norm = 3.37452356435848e+00, diff = 2.66940964443912e-01
iter = 21, step = 3.77353602535307e-01, func = 8.84249011644760e+03, norm = 2.95729111162108e+00, diff = 2.54282010248920e-01
iter = 22, step = 3.58485922408542e-01, func = 8.84241785648717e+03, norm = 3.38543769103749e+00, diff = 2.41819996098711e-01
iter = 23, step = 3.40561626288115e-01, func = 8.84261433488479e+03, norm = 2.66922759162955e+00, diff = 1.77158809197783e-01
iter = 24, step = 3.23533544973709e-01, func = 8.84263706429128e+03, norm = 2.67250456063429e+00, diff = 2.25669590225868e-01
iter = 25, step = 3.07356867725023e-01, func = 8.84249539826782e+03, norm = 3.21673016666799e+00, diff = 2.11184097510821e-01
iter = 26, step = 2.91989024338772e-01, func = 8.84268735362909e+03, norm = 2.90283557059567e+00, diff = 1.87770547523645e-01
iter = 27, step = 2.77389573121834e-01, func = 8.84263903363593e+03, norm = 2.76444769462073e+00, diff = 1.81307687686677e-01
iter = 28, step = 2.63520094465742e-01, func = 8.84263062982117e+03, norm = 2.83090882413986e+00, diff = 1.92698323327180e-01
iter = 29, step = 2.50344089742455e-01, func = 8.84268622492031e+03, norm = 2.22103145613468e+00, diff = 1.56800645869124e-01
iter = 30, step = 2.37826885255332e-01, func = 8.84270690437823e+03, norm = 2.61133584222422e+00, diff = 1.42349782635709e-01
iter = 31, step = 2.25935540992565e-01, func = 8.84275604798105e+03, norm = 2.55219812930687e+00, diff = 1.36419897483563e-01
iter = 32, step = 2.14638763942937e-01, func = 8.84276435235748e+03, norm = 2.50946570541868e+00, diff = 1.34725147719589e-01
iter = 33, step = 2.03906825745790e-01, func = 8.84270163312926e+03, norm = 2.63551048056558e+00, diff = 1.28883414982190e-01
iter = 34, step = 1.93711484458501e-01, func = 8.84277257142828e+03, norm = 2.19674234817986e+00, diff = 1.13720102894590e-01
iter = 35, step = 1.84025910235576e-01, func = 8.84278105371901e+03, norm = 2.05271061445895e+00, diff = 1.19546864719878e-01
iter = 36, step = 1.74824614723797e-01, func = 8.84281057672665e+03, norm = 1.65259245301798e+00, diff = 9.19437223845212e-02
iter = 37, step = 1.66083383987607e-01, func = 8.84281996056420e+03, norm = 2.22251370978094e+00, diff = 1.10329709249348e-01
iter = 38, step = 1.57779214788227e-01, func = 8.84282668444439e+03, norm = 1.85048282398228e+00, diff = 8.79157612185673e-02
iter = 39, step = 1.49890254048815e-01, func = 8.84280264396822e+03, norm = 2.12731166158473e+00, diff = 9.84354143584342e-02
iter = 40, step = 1.42395741346375e-01, func = 8.84280147521354e+03, norm = 2.35345976955186e+00, diff = 7.89176141331994e-02
iter = 41, step = 1.35275954279056e-01, func = 8.84282339862236e+03, norm = 2.16980143378845e+00, diff = 8.13570481017543e-02
iter = 42, step = 1.28512156565103e-01, func = 8.84285847412991e+03, norm = 1.82066935438081e+00, diff = 6.97173057593571e-02
iter = 43, step = 1.22086548736848e-01, func = 8.84286507211735e+03, norm = 1.88899301384644e+00, diff = 6.66504280845515e-02
iter = 44, step = 1.15982221300006e-01, func = 8.84285751425025e+03, norm = 1.81253296984942e+00, diff = 6.95775621943863e-02
iter = 45, step = 1.10183110235005e-01, func = 8.84289064959124e+03, norm = 1.54457292543394e+00, diff = 5.20502776700918e-02
iter = 46, step = 1.04673954723255e-01, func = 8.84287703659167e+03, norm = 1.80058061966865e+00, diff = 5.17985843945914e-02
iter = 47, step = 9.94402569870922e-02, func = 8.84289095742412e+03, norm = 1.62840789746366e+00, diff = 4.29966181081007e-02
iter = 48, step = 9.44682441377376e-02, func = 8.84288924781627e+03, norm = 1.42736590660548e+00, diff = 5.20405315627018e-02
iter = 49, step = 9.44682441377376e-02, func = 8.84287700660005e+03, norm = 1.80544443658218e+00, diff = 9.97732856810212e-02
iter = 50, step = 8.97448319308507e-02, func = 8.84291189301806e+03, norm = 1.13941696277213e+00, diff = 4.74720851004609e-02
iter = 51, step = 8.52575903343082e-02, func = 8.84290021572668e+03, norm = 1.68690118568471e+00, diff = 4.11527697915557e-02
iter = 52, step = 8.09947108175928e-02, func = 8.84291881050316e+03, norm = 1.19041352253480e+00, diff = 3.60933464626782e-02
iter = 53, step = 7.69449752767131e-02, func = 8.84290926242020e+03, norm = 1.75516009037626e+00, diff = 3.43169298295374e-02
iter = 54, step = 7.30977265128775e-02, func = 8.84292054358625e+03, norm = 1.16294150757808e+00, diff = 3.57553282019426e-02
iter = 55, step = 6.94428401872336e-02, func = 8.84292656569775e+03, norm = 1.42976487283014e+00, diff = 3.45974566419957e-02
iter = 56, step = 6.59706981778719e-02, func = 8.84292069655069e+03, norm = 1.39686804002475e+00, diff = 2.96152019759722e-02
iter = 57, step = 6.59706981778719e-02, func = 8.84292630050255e+03, norm = 1.12640732425773e+00, diff = 5.66965519004111e-02
iter = 58, step = 6.26721632689783e-02, func = 8.84293052230098e+03, norm = 1.10587153480921e+00, diff = 2.95504027728878e-02
iter = 59, step = 5.95385551055294e-02, func = 8.84292233963625e+03, norm = 1.32425207013198e+00, diff = 2.64161362083845e-02
iter = 60, step = 5.95385551055294e-02, func = 8.84292079393162e+03, norm = 1.44090635399587e+00, diff = 4.75514933992038e-02
iter = 61, step = 5.65616273502529e-02, func = 8.84293137554041e+03, norm = 1.14238951680365e+00, diff = 2.63909427813580e-02
iter = 62, step = 5.37335459827403e-02, func = 8.84293705623822e+03, norm = 7.86895125013011e-01, diff = 2.15685206203339e-02
iter = 63, step = 5.10468686836033e-02, func = 8.84294152165312e+03, norm = 9.27768285523317e-01, diff = 2.05921924308034e-02
iter = 64, step = 4.84945252494231e-02, func = 8.84293910011261e+03, norm = 1.05899053290104e+00, diff = 1.93149570407843e-02
iter = 65, step = 4.60697989869519e-02, func = 8.84294205917401e+03, norm = 1.02299974016836e+00, diff = 1.77145230967389e-02
iter = 66, step = 4.37663090376043e-02, func = 8.84294448879871e+03, norm = 9.42533937760447e-01, diff = 1.63345820449231e-02
iter = 67, step = 4.15779935857241e-02, func = 8.84294783607338e+03, norm = 8.70447280708786e-01, diff = 1.65349375939302e-02
iter = 68, step = 3.94990939064379e-02, func = 8.84294904889176e+03, norm = 9.23754198047713e-01, diff = 1.55857736382109e-02
iter = 69, step = 3.75241392111160e-02, func = 8.84294825439609e+03, norm = 9.22250616227380e-01, diff = 1.55554652306306e-02
iter = 70, step = 3.56479322505602e-02, func = 8.84295060037431e+03, norm = 8.03737442611676e-01, diff = 1.52808393228598e-02
iter = 71, step = 3.38655356380322e-02, func = 8.84295240197353e+03, norm = 8.28337106125973e-01, diff = 1.55889286013316e-02
iter = 72, step = 3.38655356380322e-02, func = 8.84295157721966e+03, norm = 9.05520272024215e-01, diff = 2.07521655403404e-02
iter = 73, step = 3.21722588561306e-02, func = 8.84295170809355e+03, norm = 7.87683143332105e-01, diff = 1.09205882750552e-02
iter = 74, step = 3.05636459133241e-02, func = 8.84295158993681e+03, norm = 7.64483812971299e-01, diff = 9.78328237321911e-03
iter = 75, step = 3.05636459133241e-02, func = 8.84295155967423e+03, norm = 7.79511085769455e-01, diff = 1.96120391163538e-02
iter = 76, step = 2.90354636176579e-02, func = 8.84295417982251e+03, norm = 6.84313260247215e-01, diff = 1.31687060819082e-02
iter = 77, step = 2.75836904367750e-02, func = 8.84295621130861e+03, norm = 6.79645021144422e-01, diff = 1.03913650779697e-02
iter = 78, step = 2.62045059149362e-02, func = 8.84295889245369e+03, norm = 5.96965638853342e-01, diff = 1.21831747960412e-02
iter = 79, step = 2.48942806191894e-02, func = 8.84295977618698e+03, norm = 5.76408099108851e-01, diff = 1.06044723829648e-02
iter = 80, step = 2.36495665882299e-02, func = 8.84295751730653e+03, norm = 6.74452480908067e-01, diff = 9.67550668339994e-03
iter = 81, step = 2.24670882588184e-02, func = 8.84295912340705e+03, norm = 5.81471955125173e-01, diff = 8.84767048255962e-03
iter = 82, step = 2.13437338458775e-02, func = 8.84296096661986e+03, norm = 5.61730167927630e-01, diff = 9.05068391145002e-03
iter = 83, step = 2.02765471535836e-02, func = 8.84296038758110e+03, norm = 7.46016595101451e-01, diff = 8.73396236229300e-03
iter = 84, step = 1.92627197959044e-02, func = 8.84296383446389e+03, norm = 4.91370200606583e-01, diff = 6.98660791704936e-03
iter = 85, step = 1.82995838061092e-02, func = 8.84296346379392e+03, norm = 5.51680414291151e-01, diff = 8.18960695036599e-03
iter = 86, step = 1.73846046158038e-02, func = 8.84296444878739e+03, norm = 7.03994151042455e-01, diff = 6.46722927610055e-03
iter = 87, step = 1.65153743850136e-02, func = 8.84296477872837e+03, norm = 6.77789878448975e-01, diff = 7.26606893374046e-03
iter = 88, step = 1.56896056657629e-02, func = 8.84296600558141e+03, norm = 5.02282526400432e-01, diff = 4.74184012084746e-03
iter = 89, step = 1.49051253824747e-02, func = 8.84296668054976e+03, norm = 4.34914239601928e-01, diff = 5.29053825498764e-03
iter = 90, step = 1.41598691133510e-02, func = 8.84296658061209e+03, norm = 5.75982302656414e-01, diff = 4.70592619050967e-03
iter = 91, step = 1.34518756576835e-02, func = 8.84296676850432e+03, norm = 4.93332653577832e-01, diff = 5.08053107422857e-03
iter = 92, step = 1.27792818747993e-02, func = 8.84296652354921e+03, norm = 5.96394945889135e-01, diff = 5.45086392160217e-03
iter = 93, step = 1.21403177810593e-02, func = 8.84296713017398e+03, norm = 4.28849483300116e-01, diff = 3.30988305417740e-03
iter = 94, step = 1.15333018920064e-02, func = 8.84296772283605e+03, norm = 4.78296724805483e-01, diff = 4.64367773873247e-03
iter = 95, step = 1.09566367974060e-02, func = 8.84296841291648e+03, norm = 4.14668463147273e-01, diff = 4.78491195246369e-03
iter = 96, step = 1.04088049575357e-02, func = 8.84296885687388e+03, norm = 5.29935332840770e-01, diff = 4.09071563424795e-03
iter = 97, step = 9.88836470965895e-03, func = 8.84296895686581e+03, norm = 4.13907210831541e-01, diff = 2.98303133967511e-03
iter = 98, step = 9.39394647417600e-03, func = 8.84296878174959e+03, norm = 4.83400173673485e-01, diff = 4.22355849113329e-03
iter = 99, step = 8.92424915046720e-03, func = 8.84296942730604e+03, norm = 3.86087814886712e-01, diff = 4.19039009707142e-03
iter = 100, step = 8.47803669294384e-03, func = 8.84296932179668e+03, norm = 4.83484763873597e-01, diff = 2.98096018433346e-03
iter = 101, step = 8.05413485829665e-03, func = 8.84296996678038e+03, norm = 3.88680239074483e-01, diff = 2.89075226704535e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 8.842981e+03
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 7, while k = 7 and n = 46
  UB from restricted IP = 34905.1 using centers : 4 28 11 15 24 35 17 
  UB from restricted IP = 17527.3 using centers : 31 38 34 14 21 33 18 
  UB from restricted IP = 13196.7 using centers : 17 38 34 14 21 41 23 
  UB from restricted IP = 12806.9 using centers : 17 38 20 14 21 41 23 
In iteration 0 of HessHeuristic, objective value of incumbent is = 12806.9
  UB from restricted IP = 39758.9 using centers : 31 41 32 6 2 24 36 
  UB from restricted IP = 16905.6 using centers : 23 38 33 10 14 4 36 
  UB from restricted IP = 14600.5 using centers : 23 38 33 10 27 4 36 
  UB from restricted IP = 13659.3 using centers : 23 38 33 10 21 4 36 
In iteration 1 of HessHeuristic, objective value of incumbent is = 12806.9
  UB from restricted IP = 54940.9 using centers : 39 4 30 1 0 8 42 
  UB from restricted IP = 19238 using centers : 22 4 21 3 19 38 26 
In iteration 2 of HessHeuristic, objective value of incumbent is = 12806.9
  UB from restricted IP = 47504.9 using centers : 34 30 45 23 35 18 25 
  UB from restricted IP = 16765.7 using centers : 34 21 42 22 35 4 38 
  UB from restricted IP = 14892.4 using centers : 20 21 40 22 35 17 38 
  UB from restricted IP = 12806.9 using centers : 20 21 23 14 41 17 38 
In iteration 3 of HessHeuristic, objective value of incumbent is = 12806.9
  UB from restricted IP = 68308.8 using centers : 4 37 2 1 21 14 45 
  UB from restricted IP = 15332.5 using centers : 17 8 38 12 21 6 23 
  UB from restricted IP = 12975.5 using centers : 17 20 38 14 21 33 23 
  UB from restricted IP = 12806.9 using centers : 17 20 38 14 21 41 23 
In iteration 4 of HessHeuristic, objective value of incumbent is = 12806.9
  UB from restricted IP = 25336.6 using centers : 0 23 19 11 25 21 44 
  UB from restricted IP = 16352.9 using centers : 37 31 38 11 25 21 12 
  UB from restricted IP = 15495.1 using centers : 37 31 38 33 25 21 12 
In iteration 5 of HessHeuristic, objective value of incumbent is = 12806.9
  UB from restricted IP = 34014.8 using centers : 36 0 10 3 18 24 17 
  UB from restricted IP = 14219.6 using centers : 21 38 34 11 23 14 4 
  UB from restricted IP = 12975.5 using centers : 21 38 20 33 23 14 17 
  UB from restricted IP = 12806.9 using centers : 21 38 20 41 23 14 17 
In iteration 6 of HessHeuristic, objective value of incumbent is = 12806.9
  UB from restricted IP = 36141.1 using centers : 26 44 6 43 8 14 31 
  UB from restricted IP = 16157.1 using centers : 9 12 19 21 38 3 31 
  UB from restricted IP = 14874.5 using centers : 9 4 19 27 38 3 31 
In iteration 7 of HessHeuristic, objective value of incumbent is = 12806.9
  UB from restricted IP = 37527.6 using centers : 20 19 45 39 40 22 15 
  UB from restricted IP = 18744.4 using centers : 34 38 42 4 43 17 3 
  UB from restricted IP = 15056.6 using centers : 34 38 40 4 8 36 3 
In iteration 8 of HessHeuristic, objective value of incumbent is = 12806.9
  UB from restricted IP = 33107.3 using centers : 6 24 2 31 15 8 25 
  UB from restricted IP = 13565.5 using centers : 19 17 21 40 15 9 38 
  UB from restricted IP = 13034 using centers : 19 17 21 23 12 8 38 
  UB from restricted IP = 12942.9 using centers : 19 17 21 40 12 8 38 
In iteration 9 of HessHeuristic, objective value of incumbent is = 12806.9
UB at end of HessHeuristic = 12806.9
UB of heuristicSolution = 12806.9
Best solution after 10 of HessHeuristic is 12806.86

Beginning LOCAL SEARCH with UB = 12806.9

Academic license - for non-commercial use only
# centers = 7, while k = 7 and n = 46
  checking neighbors of node 14
  checking neighbors of node 17
  checking neighbors of node 20
  checking neighbors of node 21
  checking neighbors of node 23
  checking neighbors of node 38
  checking neighbors of node 41
UB at end of local search heuristic = 12806.9
UB of heuristicSolution = 12806.9
Best solution after local search is 12806.86
Academic license - for non-commercial use only
# centers = 7, while k = 7 and n = 46
Optimize a model with 690 rows, 1848 columns and 6075 nonzeros
Variable types: 1526 continuous, 322 integer (322 binary)
Coefficient statistics:
  Matrix range     [1e+00, 5e+05]
  Objective range  [2e+01, 4e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+05]

MIP start did not produce a new incumbent solution

Presolve removed 123 rows and 571 columns
Presolve time: 0.01s
Presolved: 567 rows, 1277 columns, 4321 nonzeros
Variable types: 1015 continuous, 262 integer (262 binary)

Root relaxation: objective 1.169958e+04, 101 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 11699.5806    0   17          - 11699.5806      -     -    0s
Another try with MIP start
     0     0 12853.9258    0   36          - 12853.9258      -     -    0s
     0     0 12967.2231    0   36          - 12967.2231      -     -    0s
     0     0 12973.0002    0   31          - 12973.0002      -     -    0s
     0     0 12976.2667    0   32          - 12976.2667      -     -    0s
     0     0 12976.4953    0   32          - 12976.4953      -     -    0s
     0     0 13357.0310    0   57          - 13357.0310      -     -    0s
     0     0 13422.5857    0   63          - 13422.5857      -     -    0s
     0     0 13493.3187    0   53          - 13493.3187      -     -    0s
     0     0 13516.5659    0   55          - 13516.5659      -     -    0s
     0     0 13520.2867    0   59          - 13520.2867      -     -    0s
     0     0 13523.9218    0   64          - 13523.9218      -     -    0s
     0     0 13524.1753    0   65          - 13524.1753      -     -    0s
     0     0 13731.1512    0   58          - 13731.1512      -     -    0s
     0     0 13814.5936    0   64          - 13814.5936      -     -    0s
     0     0 13835.9545    0   56          - 13835.9545      -     -    0s
     0     0 13844.5827    0   58          - 13844.5827      -     -    0s
     0     0 13845.9758    0   58          - 13845.9758      -     -    0s
     0     0 13953.2072    0   56          - 13953.2072      -     -    0s
     0     0 14012.3561    0   64          - 14012.3561      -     -    0s
     0     0 14035.9259    0   66          - 14035.9259      -     -    0s
     0     0 14040.6716    0   58          - 14040.6716      -     -    0s
     0     0 14049.5942    0   49          - 14049.5942      -     -    0s
     0     0 14051.9895    0   59          - 14051.9895      -     -    0s
     0     0 14052.5568    0   59          - 14052.5568      -     -    0s
     0     0 14141.4228    0   63          - 14141.4228      -     -    0s
     0     0 14178.9623    0   66          - 14178.9623      -     -    0s
     0     0 14183.2301    0   66          - 14183.2301      -     -    0s
     0     0 14191.1421    0   69          - 14191.1421      -     -    0s
     0     0 14191.2059    0   71          - 14191.2059      -     -    0s
     0     0 14221.4295    0   80          - 14221.4295      -     -    0s
     0     0 14229.2588    0   75          - 14229.2588      -     -    0s
     0     0 14231.0124    0   77          - 14231.0124      -     -    0s
     0     0 14231.1021    0   78          - 14231.1021      -     -    0s
     0     0 14347.5203    0   75          - 14347.5203      -     -    0s
     0     0 14363.8295    0   71          - 14363.8295      -     -    0s
     0     0 14375.1923    0   71          - 14375.1923      -     -    0s
     0     0 14376.7017    0   72          - 14376.7017      -     -    0s
     0     0 14376.7017    0   72          - 14376.7017      -     -    0s
     0     0 14397.1421    0   59          - 14397.1421      -     -    0s
     0     0 14401.4820    0   52          - 14401.4820      -     -    0s
     0     0 14402.6119    0   56          - 14402.6119      -     -    0s
     0     0 14426.9211    0   64          - 14426.9211      -     -    0s
     0     0 14433.4565    0   68          - 14433.4565      -     -    0s
     0     0 14433.7231    0   70          - 14433.7231      -     -    0s
     0     0 14486.1732    0   64          - 14486.1732      -     -    0s
     0     0 14500.3851    0   73          - 14500.3851      -     -    0s
     0     0 14503.3291    0   80          - 14503.3291      -     -    0s
     0     0 14504.4443    0   81          - 14504.4443      -     -    0s
     0     0 14538.5525    0   74          - 14538.5525      -     -    0s
     0     0 14544.0472    0   76          - 14544.0472      -     -    0s
     0     0 14546.1253    0   73          - 14546.1253      -     -    0s
     0     0 14548.3385    0   79          - 14548.3385      -     -    0s
     0     0 14548.6735    0   81          - 14548.6735      -     -    0s
     0     0 14556.0235    0   74          - 14556.0235      -     -    0s
     0     0 14556.9115    0   79          - 14556.9115      -     -    0s
     0     0 14564.5844    0   69          - 14564.5844      -     -    0s
     0     0 14564.5844    0   69          - 14564.5844      -     -    0s
     0     2 14564.5844    0   69          - 14564.5844      -     -    0s

Cutting planes:
  Cover: 6
  Implied bound: 3
  Clique: 2
  MIR: 20
  Flow cover: 122
  Zero half: 3
  Network: 5

Explored 2629 nodes (167814 simplex iterations) in 3.92 seconds
Thread count was 8 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
UB at end of ContiguityHeuristic = 1e+20
UB of (contiguous) heuristicSolution = 12806.9

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 2116
Number of centers left            = 46
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 2116 variables
Optimize a model with 2255 rows, 2162 columns and 8648 nonzeros
Variable types: 46 continuous, 2116 integer (2116 binary)
Coefficient statistics:
  Matrix range     [1e+00, 7e+05]
  Objective range  [1e+01, 5e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 7e+00]

MIP start did not produce a new incumbent solution

Presolve removed 97 rows and 16 columns
Presolve time: 0.02s
Presolved: 2158 rows, 2146 columns, 8701 nonzeros
Variable types: 0 continuous, 2146 integer (2100 binary)

Concurrent LP optimizer: dual simplex and barrier
Showing barrier log only...

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 5.624e+04
 Factor NZ  : 1.365e+05 (roughly 3 MBytes of memory)
 Factor Ops : 8.970e+06 (less than 1 second per iteration)
 Threads    : 3

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   3.23967302e+06 -2.31745853e+05  9.66e+03 0.00e+00  1.43e+03     0s
   1   3.17081105e+05 -5.05762163e+05  8.19e+02 7.73e-14  1.81e+02     0s
   2   8.68737126e+04 -1.02479314e+05  1.30e+02 2.84e-14  3.24e+01     0s

Barrier performed 2 iterations in 0.04 seconds
Barrier solve interrupted - model solved by another algorithm


Solved with dual simplex

Root relaxation: objective 8.842981e+03, 495 iterations, 0.02 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 8842.98062    0   98          - 8842.98062      -     -    0s
Another try with MIP start
     0     0 9123.23265    0  129          - 9123.23265      -     -    0s
     0     0 9362.43953    0  152          - 9362.43953      -     -    0s
     0     0 9372.46446    0  154          - 9372.46446      -     -    0s
     0     0 9396.66535    0  154          - 9396.66535      -     -    0s
     0     0 9396.71530    0  163          - 9396.71530      -     -    0s
     0     0 9520.76545    0  135          - 9520.76545      -     -    0s
     0     0 9554.75538    0  133          - 9554.75538      -     -    0s
     0     0 9558.65075    0  144          - 9558.65075      -     -    0s
     0     0 9703.53982    0  165          - 9703.53982      -     -    0s
     0     0 9862.11088    0  144          - 9862.11088      -     -    0s
     0     0 9872.88054    0  153          - 9872.88054      -     -    0s
     0     0 9873.45739    0  139          - 9873.45739      -     -    0s
     0     0 9992.76740    0  176          - 9992.76740      -     -    0s
     0     0 9999.71141    0  165          - 9999.71141      -     -    0s
     0     0 9999.96782    0  165          - 9999.96782      -     -    0s
     0     0 10065.2808    0  167          - 10065.2808      -     -    0s
     0     0 10087.7865    0  184          - 10087.7865      -     -    0s
     0     0 10099.9816    0  173          - 10099.9816      -     -    0s
     0     0 10100.2892    0  173          - 10100.2892      -     -    0s
     0     0 10155.2285    0  181          - 10155.2285      -     -    0s
     0     0 10178.0234    0  182          - 10178.0234      -     -    0s
     0     0 10182.9237    0  181          - 10182.9237      -     -    0s
     0     0 10183.6619    0  183          - 10183.6619      -     -    0s
     0     0 10230.4564    0  187          - 10230.4564      -     -    0s
     0     0 10231.9578    0  165          - 10231.9578      -     -    0s
     0     0 10272.4234    0  156          - 10272.4234      -     -    0s
     0     0 10315.3329    0  150          - 10315.3329      -     -    0s
     0     0 10335.4396    0  153          - 10335.4396      -     -    0s
     0     0 10336.1985    0  167          - 10336.1985      -     -    0s
     0     0 10336.3053    0  160          - 10336.3053      -     -    0s
     0     0 10362.7645    0  169          - 10362.7645      -     -    0s
     0     0 10372.1906    0  185          - 10372.1906      -     -    0s
     0     0 10375.8791    0  186          - 10375.8791      -     -    0s
     0     0 10376.0036    0  187          - 10376.0036      -     -    0s
     0     0 10418.6242    0  173          - 10418.6242      -     -    0s
     0     0 10422.8654    0  165          - 10422.8654      -     -    0s
     0     0 10424.0718    0  167          - 10424.0718      -     -    0s
     0     0 10424.5494    0  167          - 10424.5494      -     -    0s
     0     0 10442.8362    0  174          - 10442.8362      -     -    0s
     0     0 10442.8883    0  175          - 10442.8883      -     -    0s
     0     0 10459.5249    0  169          - 10459.5249      -     -    0s
     0     0 10459.9859    0  182          - 10459.9859      -     -    0s
     0     0 10461.3240    0  181          - 10461.3240      -     -    0s
     0     0 10461.3240    0  181          - 10461.3240      -     -    0s
     0     2 10461.3240    0  181          - 10461.3240      -     -    0s
  1140  1003 12098.9360   17  261          - 11427.1932      -  40.5    5s
  3589  2307 15907.6652   23   71          - 11740.8020      -  58.1   10s
 10116  7367 32112.9882   75   25          - 12188.7802      -  52.1   15s
 18582 13903 14248.5309   25  137          - 12429.2447      -  49.1   20s
 27592 20682 24112.2192   57   23          - 12553.8392      -  47.7   25s
 36690 27535 15306.6640   38   83          - 12675.3449      -  47.1   30s
 46169 34306 13489.5050   23  173          - 12780.7290      -  46.7   35s
 56140 41259 infeasible   49               - 12876.6918      -  46.7   40s
 64697 47177 17067.7430   43   61          - 12945.0172      -  47.2   45s
 74684 54320 31175.7195   60   12          - 13025.7978      -  47.4   50s
 84635 61100 15991.0233   28   69          - 13107.1800      -  47.7   55s
 93473 67498 15450.0820   27   47          - 13164.0345      -  47.8   60s
 102996 74239 13798.9553   24  128          - 13217.2881      -  48.1   65s
 111830 80429 13618.8021   27   22          - 13277.9779      -  48.3   70s
 121238 87005 17484.9870   37   57          - 13325.1835      -  48.5   75s
 130774 93344 47755.9856   63   52          - 13370.6853      -  48.5   80s
 140977 99954 23109.2714   38   49          - 13413.9201      -  48.4   85s
 151549 107075 22905.6555   52   50          - 13456.9448      -  48.4   90s
 161193 113625 39636.9320   48   44          - 13501.4338      -  48.4   95s
 170857 120126 14672.4164   29  110          - 13538.4336      -  48.5  100s
 179810 126003 39991.8877   58   15          - 13571.9146      -  48.6  105s
 189817 132593 infeasible   76               - 13611.3414      -  48.5  110s
 199428 138871 infeasible   51               - 13639.3275      -  48.5  115s
 209912 145832 infeasible   39               - 13676.2421      -  48.5  120s
 219097 151843 17485.0513   31   28          - 13705.6987      -  48.6  125s
 229083 158620 15605.8443   33  122          - 13735.5264      -  48.6  130s
 239112 165118 17742.4470   43   27          - 13761.9627      -  48.6  135s
 249867 172228 15487.3408   35   68          - 13788.6510      -  48.5  140s
 259500 178662 18601.4537   37   45          - 13815.0894      -  48.5  145s
 269186 185176 15274.9415   30  106          - 13839.4218      -  48.5  150s
 278947 191695 19709.0750   35   64          - 13859.7908      -  48.5  155s
 288546 198169 17391.9049   33   52          - 13879.5191      -  48.5  160s
 298182 204814 23688.2674   33   46          - 13897.5103      -  48.5  165s
 307052 210948 88290.3834   87   25          - 13917.9164      -  48.5  170s
 315630 216887 15610.5788   29   62          - 13934.6574      -  48.6  175s
 324439 223085 16680.2349   35   94          - 13955.9231      -  48.7  180s
 333860 229657 21082.7563   36   80          - 13971.9862      -  48.8  185s
 342821 235689 101412.060   58   48          - 13991.5290      -  48.8  190s
 352574 242306 infeasible   40               - 14010.2854      -  48.8  195s
 361534 248515 15025.5047   28   57          - 14028.4205      -  48.8  200s
 371229 255084 19443.9690   29   57          - 14047.8525      -  48.8  205s
 380525 261287 infeasible   52               - 14064.9385      -  48.8  210s
 390033 267810 25929.5121   47   25          - 14079.1309      -  48.8  215s
 399506 274177 16602.4866   34   57          - 14098.4160      -  48.8  220s
 409478 280716 infeasible   52               - 14112.7401      -  48.8  225s
 419617 287283 24287.1957   32   42          - 14130.9857      -  48.7  230s
 429260 293596 21638.7950   39   42          - 14147.0644      -  48.7  235s
 438970 300245 15503.0107   33   77          - 14162.9431      -  48.7  240s
 448888 306917 19869.1542   43   36          - 14178.4469      -  48.7  245s
 458400 313289 40644.8182   61   44          - 14196.5818      -  48.7  250s
 468559 319816 16906.0443   43   93          - 14213.9257      -  48.7  255s
 478244 326177 14739.3341   30   64          - 14229.8101      -  48.7  260s
 487931 332463 25923.8586   51   28          - 14245.9936      -  48.7  265s
 497475 338691 18561.8189   30   66          - 14260.6294      -  48.7  270s
 507234 344845 15276.6701   28   75          - 14274.6903      -  48.7  275s
 517190 351191 infeasible   38               - 14289.6654      -  48.7  280s
 527589 357618 27824.6755   39   33          - 14306.7163      -  48.7  285s
 536944 363540 52667.3192   57   16          - 14321.9231      -  48.7  290s
 547158 369990 17947.3697   36   49          - 14335.2499      -  48.6  295s
 558132 376664 26835.1187   46   39          - 14354.1785      -  48.5  300s
 568845 383175 34297.0843   43   54          - 14369.8556      -  48.5  305s
 579294 389586 17143.6444   32   14          - 14385.6146      -  48.4  310s
 588881 395518 45816.0169   44   42          - 14399.1046      -  48.4  315s
 599400 402071 34914.3626   62   24          - 14413.5676      -  48.3  320s
 608852 408018 37985.0526   65   17          - 14427.2280      -  48.4  325s
 618359 413829 19782.3331   37   44          - 14441.0478      -  48.4  330s
 628492 420044 24317.6779   31   82          - 14454.5450      -  48.3  335s
 638323 426318 18146.2924   32   77          - 14466.4591      -  48.3  340s
 648003 432264 17646.5729   40   67          - 14479.1337      -  48.3  345s
 657888 438427 16890.7288   33   84          - 14491.1578      -  48.3  350s
 668922 445182 36348.7165   52   33          - 14503.8221      -  48.2  355s
 678942 451475 46257.5577   69   47          - 14514.6389      -  48.2  360s
 689397 458030 42741.8805   57   38          - 14524.4898      -  48.2  365s
 698654 463909 infeasible   40               - 14533.8495      -  48.2  370s
 709102 470286 41412.9753   63   19          - 14545.0370      -  48.1  375s
 719811 477044 24887.9323   57   65          - 14557.1339      -  48.1  380s
 729165 482821 14977.1510   32   97          - 14569.0679      -  48.1  385s
 739000 489075 21094.2421   45   26          - 14579.0824      -  48.1  390s
 749913 495712 15634.8794   33   41          - 14589.9941      -  48.0  395s
 759155 501254 21285.2659   45   76          - 14599.7262      -  48.1  400s
 769073 507468 30472.4194   52   66          - 14609.5649      -  48.0  405s
 778602 513487 23588.4070   30   34          - 14618.5257      -  48.0  410s
 789618 520275 16053.7266   35   76          - 14626.8841      -  48.0  415s
 799295 526366 32221.2729   33   46          - 14637.0024      -  47.9  420s
 809813 532998 19858.4940   40   44          - 14644.6683      -  47.9  425s
 819506 539003 15386.4537   29   44          - 14652.8371      -  47.9  430s
 829196 544980 infeasible   58               - 14661.7544      -  47.9  435s
 839591 551500 19758.9533   31   70          - 14670.8159      -  47.9  440s
 850484 558316 18258.5943   29   76          - 14678.9317      -  47.8  445s
 860224 564463 33113.1497   54   39          - 14686.4055      -  47.8  450s
 870378 570913 15717.2415   34   44          - 14695.5096      -  47.8  455s
 880701 577495 28664.8401   40   76          - 14703.6803      -  47.8  460s
 891113 584163 22094.4547   49   23          - 14711.1297      -  47.7  465s
 902155 591086 18005.5135   46   64          - 14720.6114      -  47.7  470s
 912574 597755 18996.0790   42   45          - 14728.4086      -  47.6  475s
 923176 604502 76438.2509   70   49          - 14736.6056      -  47.6  480s
 933755 611273 30865.5653   58   35          - 14744.2199      -  47.6  485s
 943707 617486 15927.7778   36   85          - 14752.7569      -  47.5  490s
 954228 624257 26335.7186   57   19          - 14760.2524      -  47.5  495s
 964034 630436 infeasible   64               - 14767.3522      -  47.5  500s
 974513 636877 30818.2637   56   49          - 14774.9106      -  47.5  505s
 985056 643639 29523.4736   49   36          - 14781.2993      -  47.4  510s
 995926 650376 infeasible   68               - 14789.6099      -  47.4  515s
 1005758 656690 infeasible   66               - 14796.3367      -  47.4  520s
 1014767 662709 16986.5562   43   75          - 14803.1979      -  47.4  525s
 1024641 669215 51202.4282   49   47          - 14810.9032      -  47.4  530s
 1033963 675480 22640.5547   39   30          - 14816.5519      -  47.3  535s
 1044194 682420 infeasible   39               - 14821.7840      -  47.3  540s
 1053113 688257 67518.6027   71   23          - 14827.9674      -  47.3  545s
 1063254 694841 30629.5682   36   62          - 14835.3175      -  47.3  550s
 1073271 701463 23248.0873   44   45          - 14842.2641      -  47.3  555s
 1082828 707595 15276.4393   35   43          - 14848.3399      -  47.3  560s
 1092797 713963 53637.1381   56   15          - 14854.8626      -  47.2  565s
 1102040 720043 36316.9201   33   48          - 14860.8280      -  47.2  570s
 1112329 726749 27043.1237   57   51          - 14867.0695      -  47.2  575s
 1121225 732632 17402.9008   28   72          - 14873.7221      -  47.2  580s
 1131845 739605 30571.7890   45   28          - 14880.3035      -  47.2  585s
 1140967 745540 17291.3613   39   82          - 14886.8389      -  47.2  590s
 1151063 752011 15051.8129   32   52          - 14893.1686      -  47.1  595s
 1160833 758218 infeasible   68               - 14899.5513      -  47.1  600s
 1170328 764457 53482.0664   68   15          - 14904.9474      -  47.1  605s
 1179533 770437 17163.5400   38   68          - 14910.8165      -  47.1  610s
 1189497 776843 18046.5080   35   55          - 14918.3106      -  47.1  615s
 1199462 783277 24405.4535   30   52          - 14923.8422      -  47.1  620s
 1209225 789668 24884.3804   40   37          - 14929.9645      -  47.1  625s
 1220059 796491 31489.5682   47   48          - 14936.5315      -  47.1  630s
 1230531 802923 53778.6350   81   37          - 14942.8773      -  47.0  635s
 1240775 809202 18815.7733   41   51          - 14949.0895      -  47.0  640s
 1250562 815169 15334.9450   42   42          - 14955.7128      -  47.0  645s
 1261211 821797 30518.2857   62   63          - 14962.9195      -  47.0  650s
 1270001 827241 19202.4405   43   74          - 14968.5233      -  47.0  655s
 1280157 833421 infeasible   44               - 14975.3916      -  47.0  660s
 1291281 840462 19907.5835   41   44          - 14982.4004      -  47.0  665s
 1301444 846856 infeasible   88               - 14987.7411      -  47.0  670s
 1311320 853074 38512.1916   62   41          - 14992.7946      -  47.0  675s
 1321569 859542 34622.7896   67   42          - 14998.3590      -  47.0  680s
 1332651 866453 15387.9305   42  107          - 15005.6523      -  47.0  685s
 1342205 872407 34650.4741   56   43          - 15011.2799      -  47.0  690s
 1352161 878676 15682.7005   35  103          - 15017.2659      -  47.0  695s
 1362209 884621 26676.0957   75   27          - 15022.8549      -  47.0  700s
 1372531 890908 19989.7173   34   80          - 15028.4718      -  47.0  705s
 1382293 896975 25972.1380   40   67          - 15033.8798      -  47.0  710s
 1392634 903322 30330.0996   45   50          - 15039.4628      -  47.0  715s
 1402014 909291 20460.4750   34   47          - 15044.6828      -  47.0  720s
 1412844 916296 15210.8310   33   50          - 15050.8601      -  46.9  725s
 1422665 922455 60743.0776   48   43          - 15055.9825      -  46.9  730s
 1433245 929029 38863.1964   88   34          - 15061.1187      -  46.9  735s
 1444271 936005 22123.5968   57   27          - 15066.9036      -  46.9  740s
 1454168 942234 26048.2603   43   43          - 15071.9359      -  46.9  745s
 1464413 948725 22686.6547   40   85          - 15077.1684      -  46.9  750s
 1474468 955127 infeasible   53               - 15082.2197      -  46.9  755s
 1484768 961454 44038.3421   68   26          - 15088.0003      -  46.9  760s
 1495180 968037 31126.3480   41   78          - 15092.4738      -  46.9  765s
 1506167 975059 26397.7818   44   29          - 15098.1382      -  46.8  770s
 1516418 981485 19382.7315   35   40          - 15102.8979      -  46.8  775s
 1526195 987585 20723.0639   45   27          - 15108.7274      -  46.8  780s
 1536229 993830 68417.7095   59   41          - 15114.3341      -  46.8  785s
 1546238 1000248 24929.3519   42   62          - 15118.8119      -  46.8  790s
 1556311 1006607 35901.4560   70   64          - 15123.7231      -  46.8  795s
 1567112 1013452 60244.0467   47   27          - 15129.6583      -  46.8  800s
 1576985 1019855 40133.1394   58   27          - 15134.2514      -  46.8  805s
 1587167 1026260 32199.5509   42   37          - 15139.5637      -  46.8  810s
 1598298 1033317 49339.6748   48   28          - 15145.3631      -  46.8  815s
 1608036 1039439 17046.3560   35   85          - 15150.4797      -  46.8  820s
 1617676 1045422 18197.1627   42   32          - 15155.2158      -  46.8  825s
 1629021 1052632 17955.1472   39   76          - 15160.8798      -  46.8  830s
 1638800 1058705 17960.6121   42   33          - 15165.6504      -  46.8  835s
 1648899 1065143 17167.2765   46   41          - 15170.5821      -  46.8  840s
 1659287 1071807 25429.3372   32   57          - 15176.0040      -  46.7  845s
 1669165 1078011 18561.8111   41   34          - 15181.0384      -  46.7  850s
 1679357 1084492 infeasible   37               - 15185.5498      -  46.7  855s
 1689895 1091055 38099.8990   43   43          - 15190.8555      -  46.7  860s
 1701144 1098186 22459.1570   46   30          - 15196.2825      -  46.7  865s
 1710890 1104299 26434.3915   49   67          - 15201.1248      -  46.7  870s
 1720894 1110535 19345.7972   32   63          - 15205.2613      -  46.7  875s
 1731331 1117191 16489.0394   40   52          - 15209.5520      -  46.7  880s
 1741791 1123638 infeasible  101               - 15214.3930      -  46.7  885s
 1752566 1130567 31822.6049   38   35          - 15219.0571      -  46.7  890s
 1762346 1136826 21950.4051   32   39          - 15222.8544      -  46.6  895s
 1773424 1143771 27463.1491   51   71          - 15227.5100      -  46.6  900s
 1783131 1149874 25820.8513   31   51          - 15231.0839      -  46.6  905s
 1794570 1157111 infeasible   97               - 15235.9295      -  46.6  910s
 1804585 1163341 98413.0852   68   30          - 15241.1409      -  46.6  915s
 1814816 1169884 92408.3833   76   27          - 15244.7329      -  46.6  920s
 1826310 1177170 31428.3654   48   69          - 15249.6242      -  46.6  925s
 1836296 1183531 22797.9756   41   66          - 15253.7373      -  46.6  930s
 1846640 1189888 20456.9670   55   36          - 15258.4696      -  46.5  935s
 1857165 1196683 27417.1326   36   43          - 15262.9044      -  46.5  940s
 1867349 1203197 16687.2513   41   42          - 15267.0625      -  46.5  945s
 1878077 1210142 infeasible   86               - 15271.6337      -  46.5  950s
 1888674 1216950 26161.8149   54   32          - 15276.0255      -  46.5  955s
 1898909 1223540 17869.0622   29   45          - 15280.2563      -  46.5  960s
 1909560 1230261 16661.3453   33   63          - 15284.4747      -  46.5  965s
 1920435 1237344 32596.2148   42   30          - 15288.5667      -  46.5  970s
 1930759 1243776 27860.7283   53   43          - 15292.7611      -  46.5  975s
 1941818 1250675 22253.3509   34   75          - 15297.5143      -  46.4  980s
 1951841 1257168 infeasible   77               - 15301.5441      -  46.4  985s
 1961892 1263502 36557.3525   41   43          - 15304.8686      -  46.4  990s
 1972802 1270293 19361.3639   30   46          - 15308.6938      -  46.4  995s
 1983766 1277186 infeasible   82               - 15313.0816      -  46.4 1000s
 1994650 1284119 infeasible   40               - 15317.2949      -  46.4 1005s
 2004808 1290428 68773.7412   74   20          - 15320.7429      -  46.4 1010s
 2015167 1297004 28983.6774   37   77          - 15324.6943      -  46.4 1015s
 2025453 1303534 56247.2377   75   32          - 15328.9906      -  46.3 1020s
 2035729 1309983 37146.3241   62   50          - 15332.5353      -  46.3 1025s
 2047595 1317482 15484.3321   36  112          - 15336.3928      -  46.3 1030s
 2057874 1324125 47448.2929   59   33          - 15340.4504      -  46.3 1035s
 2068089 1330599 61863.4548   87   31          - 15344.0198      -  46.3 1040s
 2078408 1337197 40770.5925   57   58          - 15347.7190      -  46.3 1045s
 2088510 1343562 infeasible   62               - 15351.9595      -  46.3 1050s
 2099439 1350612 19019.2367   38   62          - 15355.6341      -  46.3 1055s
 2109990 1357355 infeasible   83               - 15359.0724      -  46.2 1060s
 2120048 1363810 20065.7156   35   58          - 15363.0542      -  46.2 1065s
 2130677 1370659 77577.6630   78   38          - 15366.6424      -  46.2 1070s
 2141346 1377443 22093.4415   37   65          - 15370.2133      -  46.2 1075s
 2151996 1384084 20065.4002   49   64          - 15374.0040      -  46.2 1080s
 2163252 1391199 23997.0295   38   41          - 15377.6190      -  46.2 1085s
 2173620 1397633 15472.3044   44   51          - 15381.8424      -  46.2 1090s
 2184154 1404357 20457.7914   54   24          - 15385.3447      -  46.2 1095s
 2194967 1411308 19068.1757   52   33          - 15388.5287      -  46.2 1100s
 2205602 1418126 18967.1449   47   55          - 15391.9643      -  46.2 1105s
 2216264 1424884 26584.1892   61   34          - 15395.4286      -  46.2 1110s
 2226988 1431753 31136.0325   47   46          - 15399.3336      -  46.1 1115s
 2238559 1438977 42978.1627   60   24          - 15402.7924      -  46.1 1120s
 2248839 1445468 75176.2107   78   26          - 15406.2118      -  46.1 1125s
 2259167 1451996 infeasible   89               - 15409.6958      -  46.1 1130s
 2269401 1458443 31186.1251   40   35          - 15412.8502      -  46.1 1135s
 2279832 1465055 17857.6126   38   64          - 15416.5982      -  46.1 1140s
 2290259 1471562 15926.9130   30   88          - 15419.5644      -  46.1 1145s
 2300657 1478155 17514.6643   29   35          - 15423.6614      -  46.1 1150s
 2311111 1484708 54495.5897   47   35          - 15426.7586      -  46.1 1155s
 2321574 1491265 infeasible   53               - 15430.2240      -  46.1 1160s
 2332263 1498137 69058.7752   66   52          - 15433.6163      -  46.1 1165s
 2343228 1504897 17551.6725   32   92          - 15436.9278      -  46.1 1170s
 2353798 1511638 15517.2465   35  101          - 15440.1987      -  46.0 1175s
 2364118 1518163 16705.6121   43   80          - 15443.6851      -  46.0 1180s
 2374526 1524634 15684.3047   37  104          - 15447.2353      -  46.0 1185s
 2385175 1531354 43786.2644   69   22          - 15450.6306      -  46.0 1190s
 2396264 1538223 19566.5510   41   55          - 15454.0416      -  46.0 1195s
 2406492 1544533 75216.0544   69   41          - 15457.6430      -  46.0 1200s
 2417496 1551332 16092.1946   38   44          - 15462.0048      -  46.0 1205s
 2428123 1558034 56985.6085   64   28          - 15465.3323      -  46.0 1210s
 2438439 1564493 67559.6986   69   19          - 15468.6076      -  46.0 1215s
 2448657 1571091 18640.5102   33   30          - 15471.8777      -  46.0 1220s
 2458782 1577351 18883.0631   36   44          - 15475.5754      -  46.0 1225s
 2470021 1584560 71620.3258   66   35          - 15479.2035      -  45.9 1230s
 2480318 1590916 18745.2950   36   72          - 15482.7821      -  45.9 1235s
 2491706 1598102 31205.6344   46   53          - 15486.3273      -  45.9 1240s
 2502045 1604521 21399.6841   40   45          - 15489.8136      -  45.9 1245s
 2513585 1611713 42274.4084   55   42          - 15493.5205      -  45.9 1250s
 2524349 1618446 17095.7720   36   59          - 15496.5923      -  45.9 1255s
 2535251 1625205 28587.6114   35   57          - 15500.0516      -  45.9 1260s
 2546232 1632254 19609.6908   32   38          - 15503.5488      -  45.9 1265s
 2555893 1638338 68115.6300   48   29          - 15506.6220      -  45.9 1270s
 2566802 1645174 19460.9075   45   45          - 15509.6224      -  45.9 1275s
 2577678 1652024 18602.2698   30   59          - 15512.8437      -  45.8 1280s
 2588305 1658689 42147.4105   61   43          - 15516.3210      -  45.8 1285s
 2598750 1665373 83799.7580   49   33          - 15519.8507      -  45.8 1290s
 2609570 1672040 46110.6413   52   58          - 15523.6384      -  45.8 1295s
 2620296 1678629 infeasible   57               - 15526.9500      -  45.8 1300s
 2630337 1685002 infeasible   72               - 15530.8655      -  45.8 1305s
 2641307 1691765 41759.4263   57   37          - 15533.9839      -  45.8 1310s
 2652075 1698493 16124.2063   41   64          - 15537.7056      -  45.8 1315s
 2661739 1704428 17361.1507   49   44          - 15540.4873      -  45.8 1320s
 2672440 1711079 infeasible   55               - 15543.5578      -  45.8 1325s
 2683690 1717995 33761.4797   57   27          - 15546.7706      -  45.8 1330s
 2694462 1724695 52124.1625   48   36          - 15550.0842      -  45.7 1335s
 2704401 1731097 infeasible   86               - 15552.7675      -  45.7 1340s
 2715405 1738075 18291.6441   40   46          - 15555.4847      -  45.7 1345s
 2725396 1744476 56020.8657   93   32          - 15557.9292      -  45.7 1350s
 2736477 1751461 21771.8348   42   63          - 15560.8675      -  45.7 1355s
 2747408 1758400 21172.1261   45   34          - 15563.3394      -  45.7 1360s
 2758322 1765323 17773.6682   36   40          - 15566.6571      -  45.7 1365s
 2768978 1772266 18752.9290   47   94          - 15569.7853      -  45.7 1370s
 2779971 1779135 infeasible   86               - 15572.9708      -  45.7 1375s
 2791677 1786340 62486.4822   48   35          - 15576.3977      -  45.6 1380s
 2802516 1792965 26483.2248   46   45          - 15579.3908      -  45.6 1385s
 2813228 1799744 20204.4042   38   61          - 15582.3881      -  45.6 1390s
 2824315 1806765 37065.9311   60   34          - 15585.2823      -  45.6 1395s
 2834549 1813204 18082.7322   35   52          - 15588.1533      -  45.6 1400s
 2845464 1820042 17597.0039   34   40          - 15591.4291      -  45.6 1405s
 2856090 1826541 infeasible   78               - 15594.3435      -  45.6 1410s
 2865791 1832612 21561.4200   49   17          - 15597.2977      -  45.6 1415s
 2876789 1839555 29100.2139   72   28          - 15600.3941      -  45.6 1420s
 2887785 1846324 20496.0165   31   53          - 15603.5615      -  45.6 1425s
 2897592 1852394 19055.9632   46   54          - 15606.0750      -  45.6 1430s
 2908475 1859158 23548.5793   52   41          - 15608.8421      -  45.6 1435s
 2916682 1864187 28459.4213   50   60          - 15610.7923      -  45.6 1440s
 2924216 1868849 16566.1938   40   37          - 15612.8171      -  45.6 1445s
 2932492 1874001 81948.2141   77   25          - 15615.1476      -  45.6 1450s
 2940623 1879172 infeasible   64               - 15617.1586      -  45.6 1455s
 2948974 1884407 32913.2364   39   51          - 15619.2189      -  45.6 1460s
 2957298 1889662 24413.6223   41   79          - 15621.6243      -  45.5 1465s
 2965286 1894747 18713.8071   59   37          - 15623.3834      -  45.5 1470s
 2972708 1899446 infeasible   36               - 15625.3393      -  45.5 1475s
 2980442 1904327 infeasible   64               - 15627.7401      -  45.5 1480s
 2988033 1909252 36366.1049   55   19          - 15629.8820      -  45.5 1485s
 2995797 1914232 15989.0604   37   62          - 15631.9977      -  45.5 1490s
 3003451 1919114 15894.6787   31  117          - 15634.2234      -  45.5 1495s
 3011781 1924336 18312.7397   52   21          - 15636.6790      -  45.5 1500s
 3019187 1929014 55938.9103   77   22          - 15639.0662      -  45.5 1505s
 3027452 1934416 99651.1579   58   31          - 15641.2991      -  45.5 1510s
 3035582 1939662 20139.6614   64   29          - 15643.5359      -  45.5 1515s
 3043417 1944838 32137.4015   51   54          - 15645.9834      -  45.5 1520s
 3050774 1949516 17160.7351   35   61          - 15647.8975      -  45.5 1525s
 3059053 1954844 30214.8998   37   48          - 15650.2774      -  45.5 1530s
 3066428 1959470 28897.4398   41   50          - 15652.3838      -  45.5 1535s
 3074363 1964482 16566.2577   66   49          - 15654.4633      -  45.5 1540s
 3082405 1969640 infeasible   37               - 15656.5899      -  45.5 1545s
 3090129 1974623 65063.4413   85   17          - 15658.3114      -  45.5 1550s
 3098254 1979939 infeasible   67               - 15660.5582      -  45.5 1555s
 3106648 1985265 17641.3490   46   25          - 15662.4849      -  45.5 1560s
 3114047 1990011 17637.7935   42   38          - 15664.4793      -  45.5 1565s
 3122229 1995261 84350.7944   63   47          - 15666.7686      -  45.5 1570s
 3129579 1999955 27374.1860   48   56          - 15668.7554      -  45.5 1575s
 3136679 2004544 21457.1556   52   34          - 15670.7401      -  45.5 1580s
 3144500 2009549 17146.4902   35   66          - 15672.4354      -  45.5 1585s
 3153233 2015084 17117.5235   43   32          - 15674.5442      -  45.5 1590s
 3160746 2019781 20030.3301   39   53          - 15676.3472      -  45.5 1595s
 3167994 2024378 infeasible   45               - 15678.2460      -  45.5 1600s
 3176915 2030083 65371.0936   67   24          - 15680.5952      -  45.4 1605s
 3185818 2035703 16044.9738   45   34          - 15682.6820      -  45.4 1610s
 3196284 2042386 20729.5489   42   50          - 15685.4630      -  45.4 1615s
 3206511 2048969 20185.4917   47   62          - 15687.7343      -  45.4 1620s
 3217244 2055932 17158.3160   39   69          - 15690.5002      -  45.4 1625s
 3227433 2062507 21274.6507   37   48          - 15692.7241      -  45.4 1630s
 3237004 2068646 18104.2280   46   77          - 15694.9538      -  45.4 1635s
 3246876 2074913 34081.3538   61   41          - 15697.2032      -  45.4 1640s
 3257492 2081600 37153.2137   39   61          - 15699.9046      -  45.4 1645s
 3266991 2087771 28771.4170   46   29          - 15702.6838      -  45.4 1650s
 3277932 2094826 55417.1579   70   50          - 15705.3070      -  45.4 1655s
 3288281 2101450 19253.4383   40   68          - 15707.7327      -  45.4 1660s
 3298746 2108056 56710.9361   82   15          - 15709.8526      -  45.4 1665s
 3309136 2114742 27728.0206   57   91          - 15712.2386      -  45.4 1670s
 3320576 2121792 21248.4281   41   52          - 15714.8626      -  45.4 1675s
 3331070 2128315 25621.1843   44   61          - 15717.1574      -  45.3 1680s
 3341723 2135044 21984.0725   42   43          - 15719.2209      -  45.3 1685s
 3352789 2142013 22987.1386   68   11          - 15721.6524      -  45.3 1690s
 3362779 2148296 53670.1253   81   25          - 15723.5444      -  45.3 1695s
 3373989 2155208 22630.6061   29   86          - 15726.0947      -  45.3 1700s
 3384417 2161547 23267.3361   43   54          - 15728.4304      -  45.3 1705s
 3395590 2168477 19485.1461   54   26          - 15731.0928      -  45.3 1710s
 3405234 2174465 23936.0524   39   61          - 15733.4256      -  45.3 1715s
 3415364 2180727 55405.0658   69   31          - 15736.1015      -  45.3 1720s
 3425817 2187089 45784.6282   50   31          - 15738.8002      -  45.3 1725s
 3435979 2193246 infeasible   49               - 15741.1732      -  45.3 1730s
 3446921 2199935 18981.6917   25   37          - 15743.3333      -  45.3 1735s
 3458173 2206826 90145.3801   56   41          - 15746.0341      -  45.3 1740s
 3468383 2213277 34001.9217   60   25          - 15748.1197      -  45.3 1745s
 3479605 2220120 29970.1328   44   33          - 15750.6107      -  45.3 1750s
 3489914 2226374 21874.3732   37   72          - 15753.2005      -  45.3 1755s
 3501018 2233118 31368.3414   56   61          - 15755.8746      -  45.3 1760s
 3511410 2239484 infeasible   47               - 15758.1960      -  45.3 1765s
 3521757 2245874 22877.8598   51   40          - 15760.4666      -  45.3 1770s
 3532325 2252402 20920.3181   44   72          - 15763.2253      -  45.3 1775s
 3542307 2258581 21493.4506   44   66          - 15765.4203      -  45.3 1780s
 3553876 2265574 16465.4857   42   59          - 15768.0642      -  45.3 1785s
 3564337 2271984 19852.8245   34   33          - 15770.5007      -  45.2 1790s
 3575346 2278819 99800.5069   60   43          - 15772.9000      -  45.2 1795s
 3585997 2285293 46060.3466   59   46          - 15775.2111      -  45.2 1800s
 3596704 2291947 61971.9566   79   28          - 15777.6499      -  45.2 1805s
 3607537 2298496 54242.5316   70   32          - 15780.1900      -  45.2 1810s
 3618562 2305277 32079.7925   33   59          - 15782.8036      -  45.2 1815s
 3629115 2311713 32913.7511   78   38          - 15784.7942      -  45.2 1820s
 3639663 2318303 97685.2493   80   46          - 15786.9406      -  45.2 1825s
 3651230 2325537 19497.5829   37   74          - 15789.2439      -  45.2 1830s
 3661723 2332100 15995.0930   44   48          - 15791.4998      -  45.2 1835s
 3672160 2338683 infeasible   92               - 15793.4932      -  45.2 1840s
 3682968 2345395 infeasible   53               - 15795.5880      -  45.2 1845s
 3692691 2351578 32819.9745   39   48          - 15797.7758      -  45.2 1850s
 3703659 2358385 17685.8969   37   22          - 15799.8504      -  45.2 1855s
 3713691 2364671 17183.5910   38   35          - 15802.2899      -  45.2 1860s
 3724987 2371846 49823.7223   46   47          - 15804.3883      -  45.2 1865s
 3735852 2378514 38463.8745   43   55          - 15806.5130      -  45.2 1870s
 3745798 2384742 42501.4581   46   42          - 15808.6742      -  45.2 1875s
 3756578 2391342 16204.9360   46   49          - 15810.9571      -  45.2 1880s
 3766862 2397899 20427.6853   38   30          - 15812.9248      -  45.2 1885s
 3778073 2404900 38075.4424   54   20          - 15815.5262      -  45.2 1890s
 3788416 2411376 71605.4286   60   31          - 15817.6464      -  45.2 1895s
 3799142 2417968 39358.1001   55   48          - 15820.1488      -  45.2 1900s
 3810055 2424636 18836.8819   40   35          - 15822.3866      -  45.1 1905s
 3821272 2431529 17129.2043   39   40          - 15824.4480      -  45.1 1910s
 3831050 2437618 40620.6162   63   28          - 15826.3763      -  45.1 1915s
 3841932 2444435 infeasible   74               - 15829.1388      -  45.1 1920s
 3851927 2450554 34500.5447   48   30          - 15831.2757      -  45.1 1925s
 3862949 2457422 21144.5549   45   65          - 15833.1693      -  45.1 1930s
 3873168 2463746 38942.0105   69   61          - 15835.3130      -  45.1 1935s
 3883859 2470440 18933.8123   47   57          - 15837.3343      -  45.1 1940s
 3895246 2477319 53763.8448   87   23          - 15839.7543      -  45.1 1945s
 3905777 2483963 50077.5116   58   36          - 15841.7660      -  45.1 1950s
 3917040 2490733 20539.2531   43   27          - 15844.3213      -  45.1 1955s
 3927584 2497345 37699.2593   47   49          - 15846.2462      -  45.1 1960s
 3937977 2503756 36139.4417   44   37          - 15848.1681      -  45.1 1965s
 3949369 2510741 36643.8448   72   31          - 15850.4360      -  45.1 1970s
 3959611 2517133 20715.3727   35   43          - 15852.4910      -  45.1 1975s
 3970566 2523950 42206.5870   56   29          - 15854.5779      -  45.1 1980s
 3981289 2530619 23872.9607   58   54          - 15856.6329      -  45.1 1985s
 3991750 2536938 17191.1180   32   83          - 15858.6124      -  45.1 1990s
 4003055 2544061 30653.3335   50   37          - 15861.0621      -  45.1 1995s
 4013174 2550005 17561.5151   44   44          - 15863.0941      -  45.1 2000s
 4024368 2556652 29261.9355   48   68          - 15865.4105      -  45.1 2005s
 4035770 2563639 80810.8521   63   37          - 15867.8135      -  45.1 2010s
 4046017 2569920 18902.7387   47   37          - 15869.8358      -  45.1 2015s
 4056708 2576337 infeasible   80               - 15872.1346      -  45.0 2020s
 4068386 2583417 20605.6850   41   37          - 15874.2647      -  45.0 2025s
 4078567 2589696 19732.2049   44   59          - 15876.4027      -  45.0 2030s
 4090423 2596866 42581.2459   57   46          - 15878.7161      -  45.0 2035s
 4100448 2603055 17335.2991   35   45          - 15880.5602      -  45.0 2040s
 4111946 2610329 20764.1234   52   67          - 15882.7407      -  45.0 2045s
 4122154 2616516 infeasible   48               - 15884.8665      -  45.0 2050s
 4132830 2623170 29371.5869   45   57          - 15886.9296      -  45.0 2055s
 4144661 2630533 27182.7025   61   86          - 15889.2882      -  45.0 2060s
 4154784 2636833 64038.9976   62   33          - 15891.1440      -  45.0 2065s
 4165490 2643448 22737.2997   45   44          - 15893.2171      -  45.0 2070s
 4175960 2649981 19725.7888   41   49          - 15895.1993      -  45.0 2075s
 4186256 2656325 16290.1268   32   50          - 15897.1181      -  45.0 2080s
 4197182 2663188 22372.6571   41   80          - 15898.7869      -  45.0 2085s
 4207608 2669679 45901.9726   40   32          - 15900.7164      -  45.0 2090s
 4219224 2676956 28323.6175   39   92          - 15902.7303      -  45.0 2095s
 4229855 2683477 infeasible   80               - 15904.7086      -  45.0 2100s
 4241168 2690498 infeasible   58               - 15906.8590      -  45.0 2105s
 4251237 2696604 32994.0462   52   67          - 15908.9241      -  45.0 2110s
 4261892 2703280 infeasible   82               - 15910.7501      -  45.0 2115s
 4272688 2709812 57215.4189   77   28          - 15912.7400      -  45.0 2120s
 4283303 2716423 16906.3042   40   56          - 15914.8284      -  45.0 2125s
 4294974 2723644 42577.4556   66   20          - 15916.9813      -  45.0 2130s
 4305672 2730195 17113.2830   39   36          - 15918.8643      -  44.9 2135s
 4315940 2736633 27771.3884   52   37          - 15920.6825      -  44.9 2140s
 4327269 2743598 17101.5405   39   43          - 15923.1658      -  44.9 2145s
 4337787 2750131 16431.5720   34   92          - 15925.1989      -  44.9 2150s
 4348189 2756479 41520.7384   43   29          - 15926.9985      -  44.9 2155s
 4358803 2762826 40292.2846   71   27          - 15929.1933      -  44.9 2160s
 4369349 2769485 39221.7289   66   48          - 15930.9760      -  44.9 2165s
 4380103 2776172 22283.7727   43   43          - 15933.2142      -  44.9 2170s
 4391838 2783373 27605.9206   50   52          - 15935.0960      -  44.9 2175s
 4402417 2789852 18541.5197   34   67          - 15937.1094      -  44.9 2180s
 4412500 2796006 28722.4762   53   31          - 15938.8799      -  44.9 2185s
 4423027 2802550 23895.4444   57   36          - 15940.6156      -  44.9 2190s
 4434946 2809800 25582.6926   44   32          - 15942.7740      -  44.9 2195s
 4445599 2816072 infeasible   50               - 15944.7099      -  44.9 2200s
 4455848 2822285 infeasible   37               - 15946.6639      -  44.9 2205s
 4466338 2828795 21050.2057   52   41          - 15948.7717      -  44.9 2210s
 4476990 2835443 20018.9625   42   65          - 15950.6976      -  44.9 2215s
 4488512 2842644 31939.1701   50   80          - 15952.7226      -  44.9 2220s
 4499123 2849232 16515.7761   49   24          - 15954.4691      -  44.9 2225s
 4509512 2855692 44390.3782   60   30          - 15956.5614      -  44.9 2230s
 4520197 2862304 32879.3425   48   44          - 15958.4055      -  44.9 2235s
 4530923 2868832 70675.6262   63   53          - 15960.1781      -  44.9 2240s
 4541221 2875112 infeasible   75               - 15962.3345      -  44.9 2245s
 4551600 2881451 47277.9722   69   51          - 15964.2469      -  44.9 2250s
 4562161 2887879 18919.4965   30   16          - 15966.1068      -  44.9 2255s
 4572727 2894352 31235.0215   75   31          - 15968.0381      -  44.9 2260s
 4582395 2900268 91002.3938   50   42          - 15969.5830      -  44.9 2265s
 4593036 2906933 42325.9312   81   37          - 15971.5194      -  44.9 2270s
 4603755 2913454 29445.0106   64   23          - 15973.4895      -  44.9 2275s
 4613822 2919594 89670.8606   68   42          - 15975.3408      -  44.9 2280s
 4624564 2926286 53014.5818   49   15          - 15977.0814      -  44.9 2285s
 4635384 2932780 23215.9633   35   60          - 15979.1460      -  44.9 2290s
 4646111 2939271 25209.7968   42   52          - 15980.9024      -  44.9 2295s
 4656895 2945852 25460.2785   48   40          - 15982.8237      -  44.9 2300s
 4667406 2952370 75097.7462   74   50          - 15984.5320      -  44.9 2305s
 4678388 2959106 45579.9000   71   29          - 15986.1378      -  44.9 2310s
 4688313 2965260 29115.5809   46   56          - 15987.7619      -  44.9 2315s
 4699653 2972144 23071.3346   58   24          - 15989.6613      -  44.9 2320s
 4710660 2978917 infeasible   36               - 15991.7758      -  44.9 2325s
 4721186 2985345 61814.7905   46   30          - 15993.7291      -  44.9 2330s
 4731528 2991812 16704.7749   34   33          - 15995.5198      -  44.9 2335s
 4742026 2998378 25871.5379   33   57          - 15997.2435      -  44.9 2340s
 4752809 3004807 20696.9536   48   38          - 15999.0648      -  44.9 2345s
 4763521 3011563 29338.4897   55   47          - 16001.0034      -  44.9 2350s
 4775351 3018848 30639.5428   53   42          - 16003.0243      -  44.8 2355s
 4785768 3024986 25920.6178   45   41          - 16004.6404      -  44.8 2360s
 4797183 3032016 16507.1404   35   38          - 16006.5743      -  44.8 2365s
 4807196 3038151 40730.6233   73   40          - 16008.1038      -  44.8 2370s
 4818222 3044800 21054.3786   35   33          - 16010.1897      -  44.8 2375s
 4828460 3051175 16329.7804   52   40          - 16011.8136      -  44.8 2380s
 4838801 3057403 18925.6126   40   39          - 16013.4430      -  44.8 2385s
 4849925 3064303 19133.3483   35   61          - 16015.0284      -  44.8 2390s
 4861520 3071189 29628.5235   53   44          - 16017.0950      -  44.8 2395s
 4871881 3077420 74137.2440   57   33          - 16018.7877      -  44.8 2400s
 4882878 3084186 16984.1372   38   44          - 16020.5866      -  44.8 2405s
 4893970 3091038 19956.4563   53   52          - 16022.5153      -  44.8 2410s
 4904061 3097151 21391.1701   39   58          - 16024.3548      -  44.8 2415s
 4914842 3103733 104764.722   50   48          - 16026.4341      -  44.8 2420s
 4925587 3110244 16429.3305   43   49          - 16028.3008      -  44.8 2425s
 4936384 3116882 18083.4630   39   78          - 16030.1017      -  44.8 2430s
 4946521 3123056 infeasible   63               - 16031.9376      -  44.8 2435s
 4956745 3129332 19396.8477   41   37          - 16033.4697      -  44.8 2440s
 4967476 3135843 29095.6967   46   65          - 16035.3127      -  44.8 2445s
 4977978 3142390 40919.5415   71   33          - 16037.0919      -  44.8 2450s
 4988644 3148936 21659.5756   39   58          - 16038.7945      -  44.8 2455s
 4999664 3155719 19381.4358   56   39          - 16040.6131      -  44.8 2460s
 5010013 3161899 21003.6079   46   47          - 16042.4394      -  44.8 2465s
 5020307 3168281 52097.7352   68   40          - 16044.1442      -  44.8 2470s
 5030690 3174608 49910.9717   46   43          - 16045.9084      -  44.8 2475s
 5041271 3181076 102442.574   42   48          - 16047.6037      -  44.8 2480s
 5050789 3186920 30439.5732   39   52          - 16049.0722      -  44.8 2485s
 5061604 3193561 37300.4635   52   39          - 16050.6429      -  44.8 2490s
 5072273 3199940 infeasible   58               - 16052.8109      -  44.8 2495s
 5083015 3206465 40867.1691   56   55          - 16054.5952      -  44.8 2500s
 5094714 3213344 59377.4931   69   24          - 16056.7292      -  44.8 2505s
 5104768 3219466 41511.5585   67   36          - 16058.3752      -  44.8 2510s
 5115114 3225736 30678.4601   50   53          - 16060.4684      -  44.8 2515s
 5125920 3232381 53196.2702   64   47          - 16062.4718      -  44.8 2520s
 5135355 3238174 47615.2837   58   41          - 16063.9021      -  44.8 2525s
 5146315 3244967 19737.8998   41   76          - 16065.7949      -  44.8 2530s
 5156600 3251176 22863.9805   49   34          - 16067.5691      -  44.8 2535s
 5167070 3257456 54927.4515   78   17          - 16069.4122      -  44.8 2540s
 5177889 3263965 58213.9870   60   36          - 16071.3798      -  44.8 2545s
 5188325 3270235 infeasible   83               - 16073.0642      -  44.8 2550s
 5198769 3276750 19252.6445   42   40          - 16074.6074      -  44.8 2555s
 5209187 3282947 61480.6002   79   38          - 16076.2878      -  44.8 2560s
 5218878 3288720 40988.3032   62   50          - 16078.0127      -  44.8 2565s
 5229522 3295109 17028.8989   31  128          - 16079.9643      -  44.8 2570s
 5240056 3301388 19048.1289   43   30          - 16081.7283      -  44.8 2575s
 5250142 3307511 29052.0956   43   59          - 16083.4073      -  44.8 2580s
 5260904 3313880 16745.3767   44   42          - 16085.2911      -  44.8 2585s
 5271425 3320035 25675.1938   40   42          - 16087.3043      -  44.8 2590s
 5281223 3325966 19801.8396   39   58          - 16088.6467      -  44.8 2595s
 5292000 3332368 34176.1082   44  100          - 16090.2606      -  44.8 2600s
 5302324 3338575 24323.3616   43   52          - 16091.9630      -  44.8 2605s
 5313174 3345134 35982.9786   64   33          - 16093.7801      -  44.8 2610s
 5323836 3351520 17044.3785   48   54          - 16095.7157      -  44.8 2615s
 5334439 3358063 21163.1507   40   79          - 16097.3714      -  44.8 2620s
 5345808 3364919 33353.6075   69   31          - 16099.4225      -  44.8 2625s
 5356000 3371101 21110.2095   37   68          - 16101.0826      -  44.8 2630s
 5365745 3376869 37481.7307   51   42          - 16102.5936      -  44.8 2635s
 5376581 3383549 33054.0482   45   34          - 16104.5341      -  44.8 2640s
 5387203 3389925 22185.3087   58   56          - 16106.1177      -  44.8 2645s
 5397718 3396230 60488.8031   66   30          - 16107.8659      -  44.8 2650s
 5408216 3402554 17420.1198   37   42          - 16109.6007      -  44.8 2655s
 5420224 3409667 96230.5355   74   21          - 16111.6217      -  44.8 2660s
 5429624 3415341 20388.0082   48   87          - 16113.0382      -  44.8 2665s
 5440489 3421711 18054.2893   46   31          - 16114.9581      -  44.8 2670s
 5451142 3427991 18813.8648   43   35          - 16116.7693      -  44.8 2675s
 5461726 3434405 30926.3695   69   51          - 16118.6495      -  44.8 2680s
 5472016 3440647 28271.6186   41   44          - 16120.2581      -  44.8 2685s
 5481224 3446295 16868.5497   40   44          - 16121.7300      -  44.8 2690s
 5492085 3452753 20835.4921   49   29          - 16123.4315      -  44.8 2695s
 5503184 3459433 52335.6561   54   24          - 16125.0402      -  44.8 2700s
 5513204 3465391 20384.3996   38   73          - 16126.7377      -  44.8 2705s
 5523460 3471456 18064.2839   37   28          - 16128.4183      -  44.8 2710s
 5533232 3477325 19375.4301   41   36          - 16130.0329      -  44.8 2715s
 5543738 3483801 47251.3013   65   52          - 16131.8511      -  44.8 2720s
 5554463 3490272 60852.1955   69   51          - 16133.7151      -  44.8 2725s
 5564687 3496411 41868.1110   50   30          - 16135.3121      -  44.8 2730s
 5574211 3502195 30801.6554   57   55          - 16136.8411      -  44.8 2735s
 5585394 3508838 49547.9889   57   44          - 16138.6775      -  44.8 2740s
 5595899 3515293 58565.7323   63   14          - 16140.2682      -  44.8 2745s
 5606846 3521913 19025.1740   47   29          - 16141.9704      -  44.8 2750s
 5616922 3527953 31759.2233   51   28          - 16143.5395      -  44.8 2755s
 5627501 3534247 20077.1230   43   67          - 16145.4500      -  44.8 2760s
 5638365 3541025 21218.6563   52   54          - 16146.9828      -  44.8 2765s
 5648728 3547415 28492.5052   41   68          - 16148.5399      -  44.8 2770s
 5659571 3553738 91828.6115   64   45          - 16150.0468      -  44.8 2775s
 5671013 3560697 32924.9498   58   41          - 16151.8404      -  44.8 2780s
 5681148 3566636 16744.3531   44   26          - 16153.3968      -  44.8 2785s
 5692158 3573001 61986.9462   46   50          - 16155.0726      -  44.7 2790s
 5702359 3579050 28985.2388   67   47          - 16156.6684      -  44.7 2795s
 5713113 3585456 55997.7652   59   45          - 16158.4135      -  44.7 2800s
 5723697 3591753 19092.0101   46   56          - 16160.0672      -  44.7 2805s
 5734071 3598014 37812.8001   85   35          - 16161.5736      -  44.7 2810s
 5744174 3604121 25565.7814   66   30          - 16163.1768      -  44.7 2815s
 5755336 3610885 35647.5829   63   36          - 16164.6872      -  44.7 2820s
 5765961 3617275 24023.8963   54   55          - 16166.4151      -  44.7 2825s
 5776368 3623518 107685.143   72   49          - 16167.7816      -  44.7 2830s
 5787008 3629766 29832.3604   56   65          - 16169.4775      -  44.7 2835s
 5798347 3636453 18434.1394   41   47          - 16171.2437      -  44.7 2840s
 5808317 3642272 21737.3623   39   78          - 16172.7353      -  44.7 2845s
 5817849 3647986 71357.3912   71   40          - 16174.3241      -  44.7 2850s
 5828359 3654167 82644.7012   58   20          - 16175.9541      -  44.7 2855s
 5837741 3659849 45038.7199   53   44          - 16177.3596      -  44.7 2860s
 5848590 3666273 infeasible   73               - 16179.2931      -  44.7 2865s
 5859357 3672693 17137.7728   46   92          - 16181.0035      -  44.7 2870s
 5869023 3678558 57999.2770   73   46          - 16182.4414      -  44.7 2875s
 5879596 3684979 19531.5605   47   42          - 16183.9819      -  44.7 2880s
 5889729 3691057 infeasible   47               - 16185.6458      -  44.7 2885s
 5900469 3697414 infeasible   66               - 16187.3791      -  44.7 2890s
 5911221 3703814 22265.2862   46   33          - 16188.7819      -  44.7 2895s
 5920635 3709504 42004.1866   51   49          - 16190.1916      -  44.7 2900s
 5931458 3716027 infeasible   61               - 16191.8676      -  44.7 2905s
 5941899 3722240 109070.062  103   51          - 16193.3381      -  44.7 2910s
 5952306 3728301 22173.3286   55   42          - 16194.7361      -  44.8 2915s
 5963325 3734864 infeasible   71               - 16196.7261      -  44.8 2920s
 5973952 3741167 18409.3623   33   71          - 16198.4704      -  44.7 2925s
 5984428 3747517 18745.1067   49   36          - 16200.1445      -  44.7 2930s
 5996110 3754563 infeasible   45               - 16201.9599      -  44.7 2935s
 6006473 3760560 39497.0879   51   48          - 16203.7376      -  44.7 2940s
 6017504 3767064 93343.6773   71   19          - 16205.5130      -  44.7 2945s
 6028567 3773817 18516.9464   35   40          - 16207.1565      -  44.7 2950s
 6039335 3780140 32371.4076   59   39          - 16208.8164      -  44.7 2955s
 6049776 3786440 18132.6608   33   39          - 16210.1355      -  44.7 2960s
 6060853 3793022 27214.5689   42   38          - 16211.5554      -  44.7 2965s
 6070394 3798826 19786.6126   37   56          - 16212.8550      -  44.7 2970s
 6081309 3805294 19458.7830   64   76          - 16214.6541      -  44.7 2975s
 6092517 3811963 20175.2782   48   37          - 16216.2931      -  44.7 2980s
 6102571 3817795 infeasible   61               - 16217.8263      -  44.7 2985s
 6113814 3824446 44364.9361   67   36          - 16219.3455      -  44.7 2990s
 6124429 3830754 21226.3094   34   63          - 16220.9658      -  44.7 2995s
 6134473 3836606 67656.4742   61   46          - 16222.5183      -  44.7 3000s
 6144232 3842376 19352.8378   39   39          - 16223.9097      -  44.7 3005s
 6155144 3848787 28535.2449   50   53          - 16225.4231      -  44.7 3010s
 6166674 3855697 33466.1008   49   65          - 16227.2221      -  44.7 3015s
 6176913 3861695 16428.5353   46   50          - 16228.6793      -  44.7 3020s
 6187544 3868007 21016.7479   43   42          - 16230.3227      -  44.7 3025s
 6197915 3874297 64991.1792   65   36          - 16231.7850      -  44.7 3030s
 6208820 3880876 30754.6563   64   28          - 16233.4071      -  44.7 3035s
 6219896 3887558 51699.4770   73   22          - 16234.8383      -  44.7 3040s
 6229775 3893469 21146.7736   52   57          - 16236.4147      -  44.7 3045s
 6240541 3899971 32628.0485   51   32          - 16237.8469      -  44.7 3050s
 6251549 3906620 24753.5069   48   27          - 16239.5439      -  44.7 3055s
 6263139 3913540 infeasible   83               - 16241.1738      -  44.7 3060s
 6273880 3920063 42028.0814   44   71          - 16242.6832      -  44.7 3065s
 6285051 3926582 16887.0651   46   44          - 16244.1951      -  44.7 3070s
 6295716 3933053 54770.3053   81   33          - 16245.7129      -  44.7 3075s
 6306730 3939388 24007.6639   49   77          - 16247.3751      -  44.7 3080s
 6317840 3945937 17940.9448   48   42          - 16248.9260      -  44.7 3085s
 6328380 3952191 23958.8543   38   73          - 16250.4839      -  44.7 3090s
 6339853 3959047 22387.6099   57   30          - 16252.0530      -  44.7 3095s
 6350250 3965260 45495.7285   62   45          - 16253.4540      -  44.7 3100s
 6361977 3972352 30051.5763   50   31          - 16255.0410      -  44.7 3105s
 6372503 3978647 63168.2805   53   32          - 16256.4137      -  44.7 3110s
 6383718 3985372 55127.1278   51   50          - 16257.9513      -  44.7 3115s
 6393986 3991590 infeasible   76               - 16259.4358      -  44.7 3120s
 6405274 3998355 98060.3820   60   35          - 16260.9914      -  44.7 3125s
 6416423 4005239 infeasible   83               - 16262.6175      -  44.7 3130s
 6427026 4011664 78464.2730   61   35          - 16264.1001      -  44.7 3135s
 6438742 4018780 36932.9713   53   64          - 16265.7527      -  44.6 3140s
 6449041 4024914 16759.8370   38   83          - 16267.3280      -  44.6 3145s
 6460351 4031696 48510.6585   68   35          - 16268.8867      -  44.6 3150s
 6471443 4038322 21515.4189   40   54          - 16270.3595      -  44.6 3155s
 6482199 4044766 20837.7370   38   76          - 16271.8134      -  44.6 3160s
 6493406 4051310 29896.4986   36   49          - 16273.3819      -  44.6 3165s
 6504256 4057629 20180.5366   57   40          - 16274.7332      -  44.6 3170s
 6515431 4064308 35784.0853   70   36          - 16276.2692      -  44.6 3175s
 6526096 4070716 23872.1525   40   55          - 16277.7646      -  44.6 3180s
 6536424 4077031 61467.0747   64   20          - 16279.1640      -  44.6 3185s
 6548525 4084218 39126.9580   59   59          - 16280.8601      -  44.6 3190s
 6558976 4090516 infeasible   71               - 16282.2765      -  44.6 3195s
 6570412 4097132 45603.1064   54   60          - 16283.9271      -  44.6 3200s
 6581449 4103542 61876.4302   46   59          - 16285.5635      -  44.6 3205s
 6592079 4109701 24154.1713   49   33          - 16287.0344      -  44.6 3210s
 6602124 4115574 57669.6470   59   40          - 16288.6807      -  44.6 3215s
 6613139 4122015 24460.0170   45   50          - 16290.3060      -  44.6 3220s
 6624331 4128564 70536.8649   59   29          - 16292.1447      -  44.6 3225s
 6634657 4134598 29394.6088   66   27          - 16293.6964      -  44.6 3230s
 6645145 4140898 47317.8635   60   39          - 16295.1651      -  44.6 3235s
 6654653 4146272 42198.8140   38   46          - 16296.6160      -  44.6 3240s
 6665829 4152767 26053.8305   53   57          - 16298.1107      -  44.6 3245s
 6676193 4158935 63169.2281   44   57          - 16299.5210      -  44.6 3250s
 6687992 4165863 19790.8452   62   51          - 16301.2658      -  44.6 3255s
 6698783 4172111 18745.9119   34   37          - 16302.8764      -  44.6 3260s
 6709383 4178483 27136.7673   49   44          - 16304.3362      -  44.6 3265s
 6719600 4184595 21520.0505   42   57          - 16305.8985      -  44.6 3270s
 6729966 4190724 38000.4919   51   26          - 16307.3107      -  44.6 3275s
 6740530 4196888 107149.043   64   37          - 16308.8737      -  44.6 3280s
 6751129 4203034 16493.8471   44   68          - 16310.4288      -  44.6 3285s
 6763068 4210133 18473.2462   42   48          - 16311.9920      -  44.6 3290s
 6773324 4216202 43894.4053   63   22          - 16313.6463      -  44.6 3295s
 6784102 4222432 49546.4962   38   33          - 16314.9829      -  44.6 3300s
 6795503 4229053 17767.0175   40   66          - 16316.5361      -  44.6 3305s
 6806140 4235251 infeasible   64               - 16318.0269      -  44.6 3310s
 6817605 4241932 23478.1144   56   35          - 16319.7626      -  44.6 3315s
 6827735 4247844 36472.9475   46   26          - 16321.2272      -  44.6 3320s
 6838575 4254344 infeasible   63               - 16322.5379      -  44.6 3325s
 6848881 4260210 24037.2411   37   42          - 16323.9643      -  44.6 3330s
 6859333 4266526 17842.1193   41   70          - 16325.4462      -  44.6 3335s
 6869021 4272532 23405.1797   55   39          - 16326.6011      -  44.6 3340s
 6879628 4278736 18820.3368   54   61          - 16328.3461      -  44.6 3345s
 6889997 4284701 20538.9509   54   17          - 16329.7889      -  44.6 3350s
 6900869 4290948 19598.7073   44   41          - 16331.2718      -  44.6 3355s
 6911271 4297169 40524.4659   57   30          - 16332.8150      -  44.6 3360s
 6923490 4304376 26959.4593   38   38          - 16334.4082      -  44.6 3365s
 6933578 4310433 16595.3609   33   44          - 16335.9107      -  44.6 3370s
 6944360 4316823 27580.6864   47   53          - 16337.3582      -  44.5 3375s
 6954843 4322993 16576.7352   40  108          - 16338.6792      -  44.5 3380s
 6966371 4329769 26054.4749   52   32          - 16340.1793      -  44.5 3385s
 6977241 4336021 17900.0897   45   63          - 16341.6715      -  44.5 3390s
 6987348 4342186 18091.7401   37   51          - 16342.9894      -  44.5 3395s
 6997720 4348451 17512.8074   61   44          - 16344.4264      -  44.5 3400s
 7008046 4354428 122737.595   86   36          - 16345.8330      -  44.5 3405s
 7018324 4360606 61794.7593   64   43          - 16347.3712      -  44.5 3410s
 7029261 4367039 20937.5950   43   59          - 16348.8517      -  44.5 3415s
 7039845 4373383 104412.771   78   33          - 16350.2928      -  44.5 3420s
 7050554 4379664 63674.6055   56   41          - 16351.7193      -  44.5 3425s
 7060545 4385732 25048.1359   61   48          - 16353.0889      -  44.5 3430s
 7071318 4392071 56388.4923   63   38          - 16354.4867      -  44.5 3435s
 7081978 4398419 16762.0761   42   67          - 16355.9663      -  44.5 3440s
 7092588 4404746 21950.4142   36   47          - 16357.4363      -  44.5 3445s
 7103585 4411324 19107.9770   53   28          - 16358.6165      -  44.5 3450s
 7113856 4417375 86054.0427   70   45          - 16359.9298      -  44.5 3455s
 7125422 4424412 20866.0659   66   39          - 16361.4240      -  44.5 3460s
 7136041 4430751 21882.8425   45   37          - 16362.8717      -  44.5 3465s
 7146587 4436957 72830.1091   43   46          - 16364.2014      -  44.5 3470s
 7157189 4443264 23835.8808   48   42          - 16365.5438      -  44.5 3475s
 7167139 4449174 31997.6116   62   69          - 16366.6449      -  44.5 3480s
 7177951 4455643 21621.9592   68   64          - 16368.0145      -  44.5 3485s
 7188863 4462032 26735.7298   45   43          - 16369.5421      -  44.5 3490s
 7199439 4468415 49545.9837   76   38          - 16370.9375      -  44.5 3495s
 7211142 4475193 80153.9006   71   40          - 16372.4055      -  44.5 3500s
 7221557 4481574 16595.4778   42   52          - 16373.6621      -  44.5 3505s
 7232209 4487912 25199.7016   45   49          - 16374.9631      -  44.5 3510s
 7243040 4494236 24637.1930   30   45          - 16376.3660      -  44.5 3515s
 7254532 4500884 infeasible   84               - 16377.8566      -  44.5 3520s
 7264650 4506927 23339.1425   39   30          - 16379.0245      -  44.5 3525s
 7275674 4513641 29443.6625   56   37          - 16380.2765      -  44.5 3530s
 7287026 4520581 29415.7722   85   46          - 16381.4464      -  44.5 3535s
 7297288 4526744 17964.9591   41   45          - 16382.6489      -  44.5 3540s
 7308081 4533114 69735.1439   38   62          - 16384.0471      -  44.5 3545s
 7318546 4539483 16804.6200   41   63          - 16385.4944      -  44.5 3550s
 7329594 4546085 24670.7228   40   47          - 16386.7951      -  44.5 3555s
 7340988 4552764 30305.2228   48   65          - 16388.3058      -  44.5 3560s
 7351203 4558816 infeasible   64               - 16389.5852      -  44.5 3565s
 7361622 4565258 infeasible   82               - 16391.0875      -  44.5 3570s
 7371883 4571579 34921.3717   79   37          - 16392.2245      -  44.5 3575s
 7382587 4578007 67124.0638   73   29          - 16393.6178      -  44.5 3580s
 7393145 4584112 21230.4932   54   30          - 16394.9032      -  44.5 3585s
 7404131 4590657 25492.6279   47   30          - 16396.2042      -  44.5 3590s
 7415712 4597587 26798.7752   51   80          - 16397.7415      -  44.5 3595s
 7426208 4603790 16488.3410   36   27          - 16399.1058      -  44.5 3600s

Cutting planes:
  Gomory: 1
  Cover: 67
  MIR: 19
  StrongCG: 4
  Flow cover: 23
  GUB cover: 8
  Inf proof: 2
  Zero half: 12
  Lazy constraints: 2908

Explored 7426781 nodes (330369780 simplex iterations) in 3600.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 0

Time limit reached
Best objective -, best bound 1.639914987130e+04, gap -
IP duration time: 3600.001808 seconds
Total time elapsed: 3606.779515 seconds
Number of callbacks: 260
Time in callbacks: 0.036813 seconds
Number of lazy constraints generated: 3059
Error code = 10005
Var::get
+ for state in $states
+ echo 'Running SD'
Running SD
+ /home/lykhovyd/progs/districting/districting myconfig.txt SD /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/SD.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/SD/counties/graph/SD.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/SD/counties/graph/SD_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/SD/counties/graph/SD.population
state[2]        = SD
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/SD.ralg_hot
nr_comp = 1
graph: 66 nodes, 164 edges (read)
Model input: L = 810110, U = 818250, k = 1.
Graph is connected.
Model input: total population = 814180
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 3.90529015312654e+04, norm = 1.41395390520959e-02, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 3.90529055963130e+04, norm = 7.06976952604795e-03, diff = 1.42500000000000e+00
iter = 3, step = 1.14000000000000e+00, func = 3.90529075759184e+04, norm = 3.53488476302397e-03, diff = 5.70000000000000e-01
iter = 4, step = 1.14000000000000e+00, func = 3.90529076111974e+04, norm = 1.76744238151199e-03, diff = 2.85000000000000e-01
iter = 5, step = 1.14000000000000e+00, func = 3.90529085833605e+04, norm = 8.83721190755993e-04, diff = 1.42500000000000e-01
iter = 6, step = 1.08300000000000e+00, func = 3.90529083667790e+04, norm = 4.41860595377997e-04, diff = 3.56250000000000e-02
iter = 7, step = 1.08300000000000e+00, func = 3.90529085959535e+04, norm = 2.20930297688998e-04, diff = 3.38437500000000e-02
iter = 8, step = 1.02885000000000e+00, func = 3.90529085462297e+04, norm = 1.10465148844499e-04, diff = 8.46093749999994e-03
iter = 9, step = 1.02885000000000e+00, func = 3.90529085989443e+04, norm = 5.52325744222487e-05, diff = 8.03789062499992e-03
iter = 10, step = 9.77407500000000e-01, func = 3.90529085888492e+04, norm = 2.76162872111253e-05, diff = 2.00947265625000e-03
iter = 11, step = 9.77407500000000e-01, func = 3.90529085996547e+04, norm = 1.38081436055619e-05, diff = 1.90899902343744e-03
iter = 12, step = 9.28537125000000e-01, func = 3.90529085989713e+04, norm = 6.90407180278032e-06, diff = 4.77249755859359e-04
iter = 13, step = 9.28537125000000e-01, func = 3.90529085998234e+04, norm = 3.45203590139020e-06, diff = 4.53387268066345e-04
iter = 14, step = 9.28537125000000e-01, func = 3.90529086005739e+04, norm = 1.72601795069588e-06, diff = 2.26693634033251e-04
iter = 15, step = 9.28537125000000e-01, func = 3.90529086006247e+04, norm = 8.63008975347234e-07, diff = 1.13346817016573e-04
iter = 16, step = 9.28537125000000e-01, func = 3.90529086009747e+04, norm = 4.31504487674219e-07, diff = 5.66734085083274e-05
iter = 17, step = 8.82110268750000e-01, func = 3.90529086009253e+04, norm = 2.15752243837458e-07, diff = 1.41683521271081e-05
iter = 18, step = 8.82110268750000e-01, func = 3.90529086009795e+04, norm = 1.07876121918682e-07, diff = 1.34599345207657e-05
iter = 19, step = 8.38004755312500e-01, func = 3.90529086009848e+04, norm = 7.06941620273543e-03, diff = 3.36498363020684e-06
iter = 20, step = 7.96104517546875e-01, func = 3.90529056389130e+04, norm = 7.06941620283729e-03, diff = 4.19002377665579e-01
iter = 21, step = 9.55325421056250e-01, func = 3.90529073420914e+04, norm = 3.53470810141864e-03, diff = 5.97078388173450e-01
iter = 22, step = 9.55325421056250e-01, func = 3.90529081715104e+04, norm = 1.76735405070932e-03, diff = 2.38831355269380e-01
iter = 23, step = 9.55325421056250e-01, func = 3.90529081862905e+04, norm = 8.83677025354661e-04, diff = 1.19415677634690e-01
iter = 24, step = 9.55325421056250e-01, func = 3.90529085936100e+04, norm = 4.41838512677330e-04, diff = 5.97078388173450e-02
iter = 25, step = 9.07559150003437e-01, func = 3.90529085028652e+04, norm = 2.20919256338665e-04, diff = 1.49269597043363e-02
iter = 26, step = 9.07559150003437e-01, func = 3.90529085988862e+04, norm = 1.10459628169333e-04, diff = 1.41806117191194e-02
iter = 27, step = 8.62181192503265e-01, func = 3.90529085780517e+04, norm = 5.52298140846663e-05, diff = 3.54515292977986e-03
iter = 28, step = 8.62181192503265e-01, func = 3.90529086001393e+04, norm = 2.76149070423331e-05, diff = 3.36789528329087e-03
iter = 29, step = 8.19072132878102e-01, func = 3.90529085959085e+04, norm = 1.38074535211666e-05, diff = 8.41973820822717e-04
iter = 30, step = 8.19072132878102e-01, func = 3.90529086004369e+04, norm = 6.90372676058329e-06, diff = 7.99875129781581e-04
iter = 31, step = 7.78118526234197e-01, func = 3.90529086001494e+04, norm = 3.45186338029164e-06, diff = 1.99968782445395e-04
iter = 32, step = 7.78118526234197e-01, func = 3.90529086005076e+04, norm = 1.72593169014582e-06, diff = 1.89970343323125e-04
iter = 33, step = 7.78118526234197e-01, func = 3.90529086008209e+04, norm = 8.62965845072911e-07, diff = 9.49851716615627e-05
iter = 34, step = 7.78118526234197e-01, func = 3.90529086008434e+04, norm = 4.31482922536456e-07, diff = 4.74925858307814e-05
iter = 35, step = 7.78118526234197e-01, func = 3.90529086009888e+04, norm = 2.15741461268228e-07, diff = 2.37462929153907e-05
iter = 36, step = 7.39212599922487e-01, func = 3.90529086009693e+04, norm = 1.07870730634114e-07, diff = 5.93657322884767e-06
iter = 37, step = 7.39212599922487e-01, func = 3.90529086009909e+04, norm = 5.39353653170569e-08, diff = 5.63974456740529e-06
iter = 38, step = 7.02251969926363e-01, func = 3.90529086009966e+04, norm = 3.01519913435000e-08, diff = 1.40993614185132e-06
iter = 39, step = 6.67139371430044e-01, func = 3.90529086009915e+04, norm = 3.41129135766393e-08, diff = 1.80357777964566e-06
iter = 40, step = 6.67139371430044e-01, func = 3.90529086009973e+04, norm = 1.70564567883196e-08, diff = 1.71339889066337e-06
iter = 41, step = 6.33782402858542e-01, func = 3.90529086009978e+04, norm = 1.21660517939396e-08, diff = 4.28349722665843e-07
iter = 42, step = 6.02093282715615e-01, func = 3.90529086009982e+04, norm = 1.25727153688324e-08, diff = 5.78495712614256e-07
iter = 43, step = 6.02093282715615e-01, func = 3.90529086009981e+04, norm = 6.28635768441620e-09, diff = 5.49570926983543e-07
iter = 44, step = 6.02093282715615e-01, func = 3.90529086009994e+04, norm = 4.09370207101182e-09, diff = 2.74785463491772e-07
iter = 45, step = 5.71988618579834e-01, func = 3.90529086009991e+04, norm = 4.35571978133464e-09, diff = 1.91914825856028e-07
iter = 46, step = 5.71988618579834e-01, func = 3.90529086009997e+04, norm = 2.17785989066732e-09, diff = 1.82319084563227e-07
iter = 47, step = 5.71988618579834e-01, func = 3.90529086009998e+04, norm = 1.08892994533366e-09, diff = 9.11595422816135e-08
iter = 48, step = 5.71988618579834e-01, func = 3.90529086009999e+04, norm = 5.44464972666830e-10, diff = 4.55797711408068e-08
iter = 49, step = 5.43389187650842e-01, func = 3.90529086010000e+04, norm = 1.31599215359672e-09, diff = 1.13949427852017e-08
iter = 50, step = 5.16219728268300e-01, func = 3.90529086009997e+04, norm = 1.32578459711225e-09, diff = 5.09876226903812e-08
iter = 51, step = 5.16219728268300e-01, func = 3.90529086010000e+04, norm = 6.62892298556123e-10, diff = 4.84382415558621e-08
iter = 52, step = 5.16219728268300e-01, func = 3.90529086009999e+04, norm = 3.31446149278062e-10, diff = 2.42191207779311e-08
iter = 53, step = 5.16219728268300e-01, func = 3.90529086010000e+04, norm = 1.58730405651394e-10, diff = 1.21095603889655e-08
iter = 54, step = 5.16219728268300e-01, func = 3.90529086010000e+04, norm = 1.80573432082749e-10, diff = 1.43723698270415e-08
iter = 55, step = 5.16219728268300e-01, func = 3.90529086010000e+04, norm = 8.95834299580279e-11, diff = 7.18618491352073e-09
iter = 56, step = 4.90408741854885e-01, func = 3.90529086010000e+04, norm = 8.39990345112993e-11, diff = 3.19276023061849e-09
iter = 57, step = 4.90408741854885e-01, func = 3.90529086010000e+04, norm = 4.19995172556497e-11, diff = 3.03312221908757e-09
iter = 58, step = 4.65888304762141e-01, func = 3.90529086010000e+04, norm = 3.56571928264587e-11, diff = 7.58280554771892e-10
iter = 59, step = 4.42593889524034e-01, func = 3.90529086010000e+04, norm = 3.71929283089634e-11, diff = 1.24365878124575e-09
iter = 60, step = 4.42593889524034e-01, func = 3.90529086010000e+04, norm = 1.85964641544817e-11, diff = 1.18147584218346e-09
iter = 61, step = 4.42593889524034e-01, func = 3.90529086010000e+04, norm = 9.29823207724084e-12, diff = 5.90737921091731e-10
iter = 62, step = 4.20464195047832e-01, func = 3.90529086010000e+04, norm = 4.64911603862042e-12, diff = 1.47684480272933e-10
iter = 63, step = 3.99440985295441e-01, func = 3.90529086010000e+04, norm = 2.32455801931021e-12, diff = 7.01501281296430e-11
B(grad) is 0, break
ralg done, iterations : 64, matrix resets : 0
f_optimal = 3.905291e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 66
  UB from restricted IP = 76305.4 using centers : 4 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 0 of HessHeuristic, objective value of incumbent is = 39052.9
  UB from restricted IP = 117438 using centers : 2 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 1 of HessHeuristic, objective value of incumbent is = 39052.9
  UB from restricted IP = 85756 using centers : 56 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 2 of HessHeuristic, objective value of incumbent is = 39052.9
  UB from restricted IP = 76305.4 using centers : 4 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 3 of HessHeuristic, objective value of incumbent is = 39052.9
  UB from restricted IP = 73830.5 using centers : 7 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 4 of HessHeuristic, objective value of incumbent is = 39052.9
  UB from restricted IP = 53854.9 using centers : 19 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 5 of HessHeuristic, objective value of incumbent is = 39052.9
  UB from restricted IP = 147166 using centers : 40 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 6 of HessHeuristic, objective value of incumbent is = 39052.9
  UB from restricted IP = 82189.5 using centers : 47 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 7 of HessHeuristic, objective value of incumbent is = 39052.9
  UB from restricted IP = 63666.1 using centers : 42 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 8 of HessHeuristic, objective value of incumbent is = 39052.9
  UB from restricted IP = 62996.9 using centers : 50 
  UB from restricted IP = 39052.9 using centers : 43 
In iteration 9 of HessHeuristic, objective value of incumbent is = 39052.9
UB at end of HessHeuristic = 39052.9
UB of heuristicSolution = 39052.9
Best solution after 10 of HessHeuristic is 39052.91

Beginning LOCAL SEARCH with UB = 39052.9

Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 66
  checking neighbors of node 43
UB at end of local search heuristic = 39052.9
UB of heuristicSolution = 39052.9
Best solution after local search is 39052.91
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 66
Optimize a model with 198 rows, 394 columns and 1297 nonzeros
Variable types: 328 continuous, 66 integer (66 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+05]
  Objective range  [4e+00, 8e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+05]

Loaded MIP start with objective 39052.9

Presolve removed 68 rows and 71 columns
Presolve time: 0.00s
Presolved: 130 rows, 323 columns, 964 nonzeros
Variable types: 323 continuous, 0 integer (0 binary)

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 39052.9 

Optimal solution found (tolerance 1.00e-04)
Best objective 3.905290860100e+04, best bound 3.905290860100e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 39052.9 using centers : 43 
UB at end of ContiguityHeuristic = 39052.9
UB of (contiguous) heuristicSolution = 39052.9

Number of variables fixed to zero = 4290
Number of variables fixed to one  = 0
Number of variables not fixed     = 66
Number of centers left            = 1
Percentage of vars fixed = 0.98
Academic license - for non-commercial use only
Build hess : created 66 variables
Optimize a model with 330 rows, 132 columns and 463 nonzeros
Variable types: 66 continuous, 66 integer (66 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+05]
  Objective range  [4e+00, 8e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]

Loaded MIP start with objective 39052.9

Presolve removed 330 rows and 132 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 1: 39052.9 

Optimal solution found (tolerance 0.00e+00)
Best objective 3.905290860100e+04, best bound 3.905290860100e+04, gap 0.0000%
IP duration time: 0.000394 seconds
Total time elapsed: 0.060773 seconds
Number of callbacks: 1
Time in callbacks: 0.000012 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running TN'
Running TN
+ /home/lykhovyd/progs/districting/districting myconfig.txt TN /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/TN.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/TN/counties/graph/TN.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/TN/counties/graph/TN_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/TN/counties/graph/TN.population
state[2]        = TN
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/TN.ralg_hot
nr_comp = 1
graph: 95 nodes, 240 edges (read)
Model input: L = 701598, U = 708648, k = 9.
Graph is connected.
Model input: total population = 6346105
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.32570615683699e+04, norm = 2.07805564725050e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.32583480865552e+04, norm = 1.26406452418885e+01, diff = 7.26404639547987e-01
iter = 3, step = 9.02500000000000e-01, func = 1.32604064983161e+04, norm = 1.25978356471613e+01, diff = 1.30583916251490e+00
iter = 4, step = 8.57375000000000e-01, func = 1.32616349445974e+04, norm = 1.04383926203609e+01, diff = 6.06154624295671e-01
iter = 5, step = 8.14506250000000e-01, func = 1.32613167019008e+04, norm = 1.20200769749780e+01, diff = 5.72119981622489e-01
iter = 6, step = 7.73780937500000e-01, func = 1.32611815284226e+04, norm = 1.05204567375382e+01, diff = 5.97325263813640e-01
iter = 7, step = 7.35091890625000e-01, func = 1.32621474131019e+04, norm = 8.82633473163502e+00, diff = 5.50148097988277e-01
iter = 8, step = 6.98337296093750e-01, func = 1.32626445763415e+04, norm = 7.99393818434731e+00, diff = 5.43500876455423e-01
iter = 9, step = 6.63420431289062e-01, func = 1.32628630202017e+04, norm = 6.31389099324528e+00, diff = 4.46145774717943e-01
iter = 10, step = 6.30249409724609e-01, func = 1.32630013576204e+04, norm = 5.84335235110334e+00, diff = 4.73364279852043e-01
iter = 11, step = 5.98736939238379e-01, func = 1.32628799448274e+04, norm = 5.55767680931339e+00, diff = 4.24341103288207e-01
iter = 12, step = 5.68800092276460e-01, func = 1.32636112186902e+04, norm = 4.96777028548688e+00, diff = 3.74061211581112e-01
iter = 13, step = 5.40360087662637e-01, func = 1.32637105792803e+04, norm = 5.24296911843585e+00, diff = 3.65875337224033e-01
iter = 14, step = 5.13342083279505e-01, func = 1.32635148248932e+04, norm = 6.71437207440893e+00, diff = 3.68347397369965e-01
iter = 15, step = 4.87674979115529e-01, func = 1.32635351732847e+04, norm = 5.78345034262667e+00, diff = 3.05494865107614e-01
iter = 16, step = 4.63291230159753e-01, func = 1.32633438661678e+04, norm = 5.99071814401321e+00, diff = 3.21323518877373e-01
iter = 17, step = 4.40126668651765e-01, func = 1.32638235516129e+04, norm = 5.08607535463423e+00, diff = 3.08439665850994e-01
iter = 18, step = 4.18120335219177e-01, func = 1.32638550554188e+04, norm = 4.95280993449101e+00, diff = 3.17009221685347e-01
iter = 19, step = 3.97214318458218e-01, func = 1.32638890716966e+04, norm = 5.23411927887181e+00, diff = 2.93499287706782e-01
iter = 20, step = 3.77353602535307e-01, func = 1.32639309061976e+04, norm = 5.00323047912725e+00, diff = 2.45394252602736e-01
iter = 21, step = 3.58485922408542e-01, func = 1.32638743818290e+04, norm = 5.67341093431125e+00, diff = 2.48589616017468e-01
iter = 22, step = 3.40561626288115e-01, func = 1.32639795911970e+04, norm = 4.39921212729299e+00, diff = 2.41968973658592e-01
iter = 23, step = 3.23533544973709e-01, func = 1.32639525742744e+04, norm = 4.94610189863376e+00, diff = 2.37913748882353e-01
iter = 24, step = 3.07356867725023e-01, func = 1.32640939763215e+04, norm = 3.87802070379801e+00, diff = 2.00728217321478e-01
iter = 25, step = 2.91989024338772e-01, func = 1.32641113302354e+04, norm = 4.56818153574605e+00, diff = 2.18323316630395e-01
iter = 26, step = 2.77389573121834e-01, func = 1.32642607059508e+04, norm = 4.31549367540586e+00, diff = 1.94990027377705e-01
iter = 27, step = 2.63520094465742e-01, func = 1.32641950207717e+04, norm = 4.15471262054573e+00, diff = 1.76273390934143e-01
iter = 28, step = 2.50344089742455e-01, func = 1.32641082035166e+04, norm = 4.39213738673801e+00, diff = 1.76847880501089e-01
iter = 29, step = 2.37826885255332e-01, func = 1.32642195087649e+04, norm = 3.67886013849053e+00, diff = 1.43757064479953e-01
iter = 30, step = 2.25935540992565e-01, func = 1.32643193678073e+04, norm = 3.58074470814253e+00, diff = 1.61113783934146e-01
iter = 31, step = 2.14638763942937e-01, func = 1.32643087548694e+04, norm = 3.87121904978140e+00, diff = 1.44648455927010e-01
iter = 32, step = 2.03906825745790e-01, func = 1.32642738432141e+04, norm = 3.58557118969452e+00, diff = 1.30516109908858e-01
iter = 33, step = 1.93711484458501e-01, func = 1.32642688153144e+04, norm = 3.73243755944451e+00, diff = 1.33278765195777e-01
iter = 34, step = 1.84025910235576e-01, func = 1.32643724909624e+04, norm = 3.05973657835553e+00, diff = 1.20990499360739e-01
iter = 35, step = 1.74824614723797e-01, func = 1.32643095061936e+04, norm = 3.71607686391561e+00, diff = 1.28061872853377e-01
iter = 36, step = 1.66083383987607e-01, func = 1.32644115718741e+04, norm = 2.83764732901081e+00, diff = 9.70187684618352e-02
iter = 37, step = 1.57779214788227e-01, func = 1.32643848643439e+04, norm = 3.67472784041488e+00, diff = 1.13533384669690e-01
iter = 38, step = 1.49890254048815e-01, func = 1.32644271499488e+04, norm = 3.07779652842653e+00, diff = 9.04129133219895e-02
iter = 39, step = 1.42395741346375e-01, func = 1.32643595992272e+04, norm = 3.79771758292750e+00, diff = 9.34569489354850e-02
iter = 40, step = 1.35275954279056e-01, func = 1.32644317871766e+04, norm = 3.26875528767860e+00, diff = 8.35572549923197e-02
iter = 41, step = 1.28512156565103e-01, func = 1.32644217570371e+04, norm = 3.45345457016115e+00, diff = 8.59583030730245e-02
iter = 42, step = 1.22086548736848e-01, func = 1.32644548650350e+04, norm = 2.82034291956257e+00, diff = 8.15169611923452e-02
iter = 43, step = 1.15982221300006e-01, func = 1.32644536964516e+04, norm = 2.87663043273072e+00, diff = 8.12521781608838e-02
iter = 44, step = 1.10183110235005e-01, func = 1.32644622058637e+04, norm = 2.34812401164072e+00, diff = 6.69393620800711e-02
iter = 45, step = 1.04673954723255e-01, func = 1.32644953315699e+04, norm = 2.17486693234841e+00, diff = 6.86232582330230e-02
iter = 46, step = 9.94402569870922e-02, func = 1.32644828279776e+04, norm = 2.30392455366126e+00, diff = 7.18811467930921e-02
iter = 47, step = 9.44682441377376e-02, func = 1.32644850040777e+04, norm = 2.18992661624681e+00, diff = 5.36775701517482e-02
iter = 48, step = 8.97448319308507e-02, func = 1.32645017349497e+04, norm = 2.10596228992122e+00, diff = 5.11791964450150e-02
iter = 49, step = 8.52575903343082e-02, func = 1.32645130031635e+04, norm = 1.73812025885427e+00, diff = 6.01599731160100e-02
iter = 50, step = 8.09947108175928e-02, func = 1.32644889296248e+04, norm = 3.00810470346194e+00, diff = 5.15128842031904e-02
iter = 51, step = 7.69449752767131e-02, func = 1.32645100060738e+04, norm = 1.98675777568048e+00, diff = 4.24895448886173e-02
iter = 52, step = 7.30977265128775e-02, func = 1.32645072110524e+04, norm = 1.95290681041365e+00, diff = 4.98485114059642e-02
iter = 53, step = 6.94428401872336e-02, func = 1.32645071444715e+04, norm = 2.44401730730254e+00, diff = 4.30202210560450e-02
iter = 54, step = 6.59706981778719e-02, func = 1.32645216496418e+04, norm = 2.07519366032590e+00, diff = 3.81756918555643e-02
iter = 55, step = 6.26721632689783e-02, func = 1.32645305364526e+04, norm = 2.05137368559098e+00, diff = 3.69542920189056e-02
iter = 56, step = 5.95385551055294e-02, func = 1.32645380449573e+04, norm = 1.96189536788496e+00, diff = 4.10922776901309e-02
iter = 57, step = 5.65616273502529e-02, func = 1.32645292094356e+04, norm = 2.38771667453828e+00, diff = 3.40962429065987e-02
iter = 58, step = 5.37335459827403e-02, func = 1.32645442495914e+04, norm = 2.30507151111922e+00, diff = 2.98008651891957e-02
iter = 59, step = 5.10468686836033e-02, func = 1.32645444028274e+04, norm = 1.85705441420318e+00, diff = 2.64275956505813e-02
iter = 60, step = 4.84945252494231e-02, func = 1.32645455990469e+04, norm = 1.77248845909131e+00, diff = 3.41253967076843e-02
iter = 61, step = 4.60697989869519e-02, func = 1.32645473549484e+04, norm = 2.04909381602071e+00, diff = 2.66933576120551e-02
iter = 62, step = 4.37663090376043e-02, func = 1.32645525672065e+04, norm = 1.24819366495935e+00, diff = 2.07618678273414e-02
iter = 63, step = 4.15779935857241e-02, func = 1.32645553943036e+04, norm = 1.27040648730298e+00, diff = 2.74878234981006e-02
iter = 64, step = 3.94990939064379e-02, func = 1.32645607028128e+04, norm = 1.13640960865987e+00, diff = 2.31186047051769e-02
iter = 65, step = 3.75241392111160e-02, func = 1.32645645003404e+04, norm = 1.72765137482682e+00, diff = 1.93436857587473e-02
iter = 66, step = 3.56479322505602e-02, func = 1.32645651301563e+04, norm = 1.90804939082631e+00, diff = 1.72290701057371e-02
iter = 67, step = 3.38655356380322e-02, func = 1.32645721505205e+04, norm = 1.48869050781216e+00, diff = 1.77508305830581e-02
iter = 68, step = 3.21722588561306e-02, func = 1.32645577094766e+04, norm = 1.85509083732386e+00, diff = 2.43149421977299e-02
iter = 69, step = 3.05636459133241e-02, func = 1.32645561104400e+04, norm = 1.65693291192267e+00, diff = 1.92647124552946e-02
iter = 70, step = 3.05636459133241e-02, func = 1.32645689466046e+04, norm = 1.56612274859751e+00, diff = 3.58139870564302e-02
iter = 71, step = 2.90354636176579e-02, func = 1.32645743671882e+04, norm = 1.14871826583208e+00, diff = 1.63896935490442e-02
iter = 72, step = 2.75836904367750e-02, func = 1.32645714858903e+04, norm = 1.25704098028478e+00, diff = 1.75405443649016e-02
iter = 73, step = 2.62045059149362e-02, func = 1.32645760470986e+04, norm = 1.32652354806305e+00, diff = 1.53030059007180e-02
iter = 74, step = 2.48942806191894e-02, func = 1.32645754303322e+04, norm = 1.79298215858037e+00, diff = 1.34999375241801e-02
iter = 75, step = 2.48942806191894e-02, func = 1.32645766855318e+04, norm = 1.37988069297799e+00, diff = 2.55346499575871e-02
iter = 76, step = 2.36495665882299e-02, func = 1.32645816431991e+04, norm = 1.22888558630525e+00, diff = 1.34309105163308e-02
iter = 77, step = 2.24670882588184e-02, func = 1.32645830231750e+04, norm = 7.96698940050545e-01, diff = 1.27365241420504e-02
iter = 78, step = 2.13437338458775e-02, func = 1.32645820103614e+04, norm = 9.80226214194959e-01, diff = 1.42508914412846e-02
iter = 79, step = 2.02765471535836e-02, func = 1.32645837770261e+04, norm = 1.09278644845643e+00, diff = 1.01430380145980e-02
iter = 80, step = 1.92627197959044e-02, func = 1.32645849808778e+04, norm = 1.12777121703087e+00, diff = 8.93559798852234e-03
iter = 81, step = 1.82995838061092e-02, func = 1.32645886727238e+04, norm = 1.03861788042244e+00, diff = 9.11675898328449e-03
iter = 82, step = 1.73846046158038e-02, func = 1.32645886262732e+04, norm = 8.78858528981374e-01, diff = 1.06517345971917e-02
iter = 83, step = 1.65153743850136e-02, func = 1.32645891514887e+04, norm = 8.89634731979369e-01, diff = 9.74461674607596e-03
iter = 84, step = 1.98184492620163e-02, func = 1.32645902126250e+04, norm = 1.09754143249210e+00, diff = 2.52108729746646e-02
iter = 85, step = 1.88275267989155e-02, func = 1.32645901746343e+04, norm = 1.05179645993214e+00, diff = 8.64764995317490e-03
iter = 86, step = 1.88275267989155e-02, func = 1.32645910637825e+04, norm = 1.22936291791264e+00, diff = 1.59621417591332e-02
iter = 87, step = 1.88275267989155e-02, func = 1.32645930753831e+04, norm = 1.22825589537782e+00, diff = 1.72238948903700e-02
iter = 88, step = 1.78861504589697e-02, func = 1.32645943720539e+04, norm = 1.24889217552375e+00, diff = 8.25009393270290e-03
iter = 89, step = 1.69918429360212e-02, func = 1.32645949594051e+04, norm = 1.03155700233539e+00, diff = 7.32275630260319e-03
iter = 90, step = 1.61422507892202e-02, func = 1.32645969556706e+04, norm = 8.39736552094570e-01, diff = 9.41316856598273e-03
iter = 91, step = 1.53351382497591e-02, func = 1.32645965623947e+04, norm = 1.39376783641553e+00, diff = 9.07356683622915e-03
iter = 92, step = 1.45683813372712e-02, func = 1.32645984701445e+04, norm = 8.25294933123232e-01, diff = 6.47763968484229e-03
iter = 93, step = 1.38399622704076e-02, func = 1.32645990470531e+04, norm = 6.62269748932386e-01, diff = 9.70722959456076e-03
iter = 94, step = 1.31479641568872e-02, func = 1.32646001410725e+04, norm = 6.15098186492979e-01, diff = 8.22933189537476e-03
iter = 95, step = 1.31479641568872e-02, func = 1.32646018378867e+04, norm = 1.21964276993639e+00, diff = 1.32834797447234e-02
iter = 96, step = 1.24905659490429e-02, func = 1.32646028626237e+04, norm = 1.11258469219178e+00, diff = 4.68779476274329e-03
iter = 97, step = 1.24905659490429e-02, func = 1.32646038510562e+04, norm = 8.44028304968580e-01, diff = 1.09830996627003e-02
iter = 98, step = 1.18660376515907e-02, func = 1.32646036280834e+04, norm = 9.95937676837553e-01, diff = 6.51947022846749e-03
iter = 99, step = 1.18660376515907e-02, func = 1.32646037527270e+04, norm = 8.86946328998364e-01, diff = 9.54546218901645e-03
iter = 100, step = 1.12727357690112e-02, func = 1.32646050631417e+04, norm = 9.07095204358523e-01, diff = 5.18106902194956e-03
iter = 101, step = 1.07090989805606e-02, func = 1.32646064842802e+04, norm = 9.54328535620199e-01, diff = 4.92171195318261e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.326464e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 9, while k = 9 and n = 95
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 3.6094e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 9025
Number of centers left            = 95
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 9025 variables
Optimize a model with 9311 rows, 9120 columns and 36480 nonzeros
Variable types: 95 continuous, 9025 integer (9025 binary)
Coefficient statistics:
  Matrix range     [1e+00, 9e+05]
  Objective range  [3e+00, 5e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 9e+00]
Presolve removed 0 rows and 96 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.005826 seconds
Total time elapsed: 0.120109 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running TX'
Running TX
+ /home/lykhovyd/progs/districting/districting myconfig.txt TX /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/TX.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/TX/counties/graph/TX.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/TX/counties/graph/TX_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/TX/counties/graph/TX.population
state[2]        = TX
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/TX.ralg_hot
nr_comp = 1
graph: 254 nodes, 661 edges (read)
Model input: L = 694996, U = 701980, k = 36.
Graph is connected.
Model input: total population = 25145561
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.05160946026972e+05, norm = 3.41783291704636e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.05162307853249e+05, norm = 2.28682045038467e+01, diff = 8.78883738813930e-01
iter = 3, step = 8.57375000000000e-01, func = 1.05159988432249e+05, norm = 2.57461268130404e+01, diff = 7.39208186751113e-01
iter = 4, step = 8.14506250000000e-01, func = 1.05159595095683e+05, norm = 2.10984398082261e+01, diff = 6.26888009720014e-01
iter = 5, step = 7.73780937500000e-01, func = 1.05160469549123e+05, norm = 1.90708867561338e+01, diff = 6.44502945767001e-01
iter = 6, step = 7.35091890625000e-01, func = 1.05160519551702e+05, norm = 1.81535775893687e+01, diff = 5.98938450429235e-01
iter = 7, step = 6.98337296093750e-01, func = 1.05160018012878e+05, norm = 1.70648345324291e+01, diff = 5.74144852210105e-01
iter = 8, step = 6.63420431289062e-01, func = 1.05160932122995e+05, norm = 1.84106798390005e+01, diff = 5.47172102907005e-01
iter = 9, step = 6.30249409724609e-01, func = 1.05161396571940e+05, norm = 2.03419494901773e+01, diff = 4.74377799327835e-01
iter = 10, step = 5.98736939238379e-01, func = 1.05161439651110e+05, norm = 1.81491373865663e+01, diff = 4.45627042940246e-01
iter = 11, step = 5.68800092276460e-01, func = 1.05161909227077e+05, norm = 1.46438572872417e+01, diff = 4.64107896240306e-01
iter = 12, step = 5.40360087662637e-01, func = 1.05161004515061e+05, norm = 1.78296082494651e+01, diff = 4.54627006629441e-01
iter = 13, step = 5.13342083279505e-01, func = 1.05161674369061e+05, norm = 1.48902542829754e+01, diff = 3.58018003576666e-01
iter = 14, step = 4.87674979115529e-01, func = 1.05162244493115e+05, norm = 1.31533283632592e+01, diff = 3.75959040151448e-01
iter = 15, step = 4.63291230159753e-01, func = 1.05162627660349e+05, norm = 1.58709149629329e+01, diff = 3.86620108966603e-01
iter = 16, step = 4.40126668651765e-01, func = 1.05161444844391e+05, norm = 2.16508844914954e+01, diff = 3.34734046293414e-01
iter = 17, step = 4.18120335219177e-01, func = 1.05162526742161e+05, norm = 1.62253991946899e+01, diff = 2.91608258587206e-01
iter = 18, step = 3.97214318458218e-01, func = 1.05162961172538e+05, norm = 1.56237578012828e+01, diff = 3.09908853524265e-01
iter = 19, step = 3.77353602535307e-01, func = 1.05163258674109e+05, norm = 1.47454138903268e+01, diff = 3.06438249997345e-01
iter = 20, step = 3.58485922408542e-01, func = 1.05163521365402e+05, norm = 1.36836189407927e+01, diff = 2.75555481371376e-01
iter = 21, step = 3.40561626288115e-01, func = 1.05163419181209e+05, norm = 1.38400498624323e+01, diff = 2.57202348394910e-01
iter = 22, step = 3.23533544973709e-01, func = 1.05163736927307e+05, norm = 1.27122221100927e+01, diff = 2.46357691720570e-01
iter = 23, step = 3.07356867725023e-01, func = 1.05163403886224e+05, norm = 1.60200061356369e+01, diff = 2.27780615436237e-01
iter = 24, step = 2.91989024338772e-01, func = 1.05164127232564e+05, norm = 1.40292897165758e+01, diff = 1.97305427270621e-01
iter = 25, step = 2.77389573121834e-01, func = 1.05164262234815e+05, norm = 1.28946431942626e+01, diff = 2.09487161785387e-01
iter = 26, step = 2.63520094465742e-01, func = 1.05164121262993e+05, norm = 1.47487974024611e+01, diff = 2.12364432881402e-01
iter = 27, step = 2.50344089742455e-01, func = 1.05164164089746e+05, norm = 1.63188882518697e+01, diff = 1.81422303464758e-01
iter = 28, step = 2.37826885255332e-01, func = 1.05164537795287e+05, norm = 1.52433402512580e+01, diff = 1.57675547035392e-01
iter = 29, step = 2.25935540992565e-01, func = 1.05164400892927e+05, norm = 1.55955706286441e+01, diff = 1.72389193182926e-01
iter = 30, step = 2.14638763942937e-01, func = 1.05164581415819e+05, norm = 1.51227404179560e+01, diff = 1.58084849366393e-01
iter = 31, step = 2.03906825745790e-01, func = 1.05164605725399e+05, norm = 1.49831494591666e+01, diff = 1.49040131028872e-01
iter = 32, step = 1.93711484458501e-01, func = 1.05164642465632e+05, norm = 1.53208018568631e+01, diff = 1.44024897968745e-01
iter = 33, step = 1.84025910235576e-01, func = 1.05164808540550e+05, norm = 1.29817500999344e+01, diff = 1.30601211640924e-01
iter = 34, step = 1.74824614723797e-01, func = 1.05164726362215e+05, norm = 1.34839330946292e+01, diff = 1.29688937160646e-01
iter = 35, step = 1.66083383987607e-01, func = 1.05164967006856e+05, norm = 1.20474920671861e+01, diff = 1.19209275457418e-01
iter = 36, step = 1.57779214788227e-01, func = 1.05164881991330e+05, norm = 1.35186585131658e+01, diff = 1.11029753775140e-01
iter = 37, step = 1.49890254048815e-01, func = 1.05164994663766e+05, norm = 1.34056373665910e+01, diff = 1.09579265157794e-01
iter = 38, step = 1.42395741346375e-01, func = 1.05165080781506e+05, norm = 1.25565617110995e+01, diff = 1.01751403728046e-01
iter = 39, step = 1.35275954279056e-01, func = 1.05165129351065e+05, norm = 1.25173494262143e+01, diff = 1.00479091540786e-01
iter = 40, step = 1.28512156565103e-01, func = 1.05164994786849e+05, norm = 1.37023915038303e+01, diff = 9.25472049466569e-02
iter = 41, step = 1.22086548736848e-01, func = 1.05165228085319e+05, norm = 1.17395451511995e+01, diff = 8.31697413916655e-02
iter = 42, step = 1.15982221300006e-01, func = 1.05165256204540e+05, norm = 1.19412027588319e+01, diff = 8.91977895275906e-02
iter = 43, step = 1.10183110235005e-01, func = 1.05165224859537e+05, norm = 1.28543826180338e+01, diff = 7.59465789182283e-02
iter = 44, step = 1.04673954723255e-01, func = 1.05165406758077e+05, norm = 9.15693062657797e+00, diff = 7.36397537366040e-02
iter = 45, step = 9.94402569870922e-02, func = 1.05165289487281e+05, norm = 1.46102074408919e+01, diff = 7.49972892678945e-02
iter = 46, step = 9.44682441377376e-02, func = 1.05165412761738e+05, norm = 1.21510826059566e+01, diff = 6.35476277744697e-02
iter = 47, step = 8.97448319308507e-02, func = 1.05165368893978e+05, norm = 1.40053272363750e+01, diff = 6.70889933990215e-02
iter = 48, step = 8.52575903343082e-02, func = 1.05165465797847e+05, norm = 1.07511672046843e+01, diff = 5.95157727254907e-02
iter = 49, step = 8.09947108175928e-02, func = 1.05165461099821e+05, norm = 1.15308363778990e+01, diff = 6.22307193007551e-02
iter = 50, step = 7.69449752767131e-02, func = 1.05165505700507e+05, norm = 1.01334155325367e+01, diff = 5.13193567825118e-02
iter = 51, step = 7.30977265128775e-02, func = 1.05165409944928e+05, norm = 1.42205337594830e+01, diff = 5.39129926998565e-02
iter = 52, step = 6.94428401872336e-02, func = 1.05165588482237e+05, norm = 1.07764149721148e+01, diff = 4.46820991425098e-02
iter = 53, step = 6.59706981778719e-02, func = 1.05165470731897e+05, norm = 1.32651464448000e+01, diff = 5.07930781682251e-02
iter = 54, step = 6.26721632689783e-02, func = 1.05165520987455e+05, norm = 1.07880346556992e+01, diff = 4.12007262932901e-02
iter = 55, step = 5.95385551055294e-02, func = 1.05165621386522e+05, norm = 1.02589455843529e+01, diff = 4.17174732288383e-02
iter = 56, step = 5.65616273502529e-02, func = 1.05165634704553e+05, norm = 9.66837811292095e+00, diff = 4.09472521289394e-02
iter = 57, step = 5.37335459827403e-02, func = 1.05165635507702e+05, norm = 9.87038036335727e+00, diff = 3.61449872778153e-02
iter = 58, step = 5.10468686836033e-02, func = 1.05165670947718e+05, norm = 1.07640016750649e+01, diff = 3.38307676306736e-02
iter = 59, step = 4.84945252494231e-02, func = 1.05165669565799e+05, norm = 9.83251946964308e+00, diff = 3.17473957967505e-02
iter = 60, step = 4.60697989869519e-02, func = 1.05165649695142e+05, norm = 1.26861648890729e+01, diff = 3.39141681192947e-02
iter = 61, step = 4.37663090376043e-02, func = 1.05165650365565e+05, norm = 1.08610888974990e+01, diff = 2.76599298617813e-02
iter = 62, step = 4.15779935857241e-02, func = 1.05165679930944e+05, norm = 8.67478925107573e+00, diff = 2.94788827256349e-02
iter = 63, step = 3.94990939064379e-02, func = 1.05165680340678e+05, norm = 1.06458733469746e+01, diff = 2.88253604846025e-02
iter = 64, step = 3.75241392111160e-02, func = 1.05165712219423e+05, norm = 7.55343212597550e+00, diff = 2.31893790530965e-02
iter = 65, step = 3.56479322505602e-02, func = 1.05165694310050e+05, norm = 8.90013815111084e+00, diff = 2.71114999344364e-02
iter = 66, step = 3.38655356380322e-02, func = 1.05165738737129e+05, norm = 6.68934148422432e+00, diff = 2.15702992108707e-02
iter = 67, step = 3.21722588561306e-02, func = 1.05165733385137e+05, norm = 8.23993982167057e+00, diff = 2.17801684115838e-02
iter = 68, step = 3.05636459133241e-02, func = 1.05165723428272e+05, norm = 1.19039257153597e+01, diff = 2.04949851024579e-02
iter = 69, step = 2.90354636176579e-02, func = 1.05165750919798e+05, norm = 8.31939825206791e+00, diff = 1.72752468904200e-02
iter = 70, step = 2.75836904367750e-02, func = 1.05165756921393e+05, norm = 7.79742773183827e+00, diff = 1.97378684146613e-02
iter = 71, step = 2.62045059149362e-02, func = 1.05165740511256e+05, norm = 8.65335417566823e+00, diff = 1.84475493117681e-02
iter = 72, step = 2.48942806191894e-02, func = 1.05165754038312e+05, norm = 7.22654899989634e+00, diff = 1.58015700843885e-02
iter = 73, step = 2.36495665882299e-02, func = 1.05165761902247e+05, norm = 7.11032405960478e+00, diff = 1.62478510057269e-02
iter = 74, step = 2.24670882588184e-02, func = 1.05165769024525e+05, norm = 6.42161413748242e+00, diff = 1.61161763894086e-02
iter = 75, step = 2.13437338458775e-02, func = 1.05165787653190e+05, norm = 5.66176738362233e+00, diff = 1.35341250818609e-02
iter = 76, step = 2.02765471535836e-02, func = 1.05165773945292e+05, norm = 9.84292286230860e+00, diff = 1.39900883572633e-02
iter = 77, step = 1.92627197959044e-02, func = 1.05165788628978e+05, norm = 8.15281333533860e+00, diff = 1.07812838720620e-02
iter = 78, step = 1.82995838061092e-02, func = 1.05165786178644e+05, norm = 7.52877168462181e+00, diff = 1.20850696878914e-02
iter = 79, step = 1.73846046158038e-02, func = 1.05165789827319e+05, norm = 7.69696383134102e+00, diff = 1.20747754856872e-02
iter = 80, step = 1.65153743850136e-02, func = 1.05165799282819e+05, norm = 6.62134867385544e+00, diff = 1.03184887333528e-02
iter = 81, step = 1.56896056657629e-02, func = 1.05165790119834e+05, norm = 7.29042085557705e+00, diff = 1.12047368086189e-02
iter = 82, step = 1.49051253824747e-02, func = 1.05165793508613e+05, norm = 6.76538616810224e+00, diff = 9.16104099847259e-03
iter = 83, step = 1.41598691133510e-02, func = 1.05165798741559e+05, norm = 7.92160913690194e+00, diff = 9.59096335861512e-03
iter = 84, step = 1.34518756576835e-02, func = 1.05165809772058e+05, norm = 6.80115300344526e+00, diff = 7.99409486023518e-03
iter = 85, step = 1.27792818747993e-02, func = 1.05165813616687e+05, norm = 5.26688026305685e+00, diff = 8.87004369566532e-03
iter = 86, step = 1.21403177810593e-02, func = 1.05165817410225e+05, norm = 5.28756011129632e+00, diff = 8.16536830301575e-03
iter = 87, step = 1.15333018920064e-02, func = 1.05165814426374e+05, norm = 7.27289984272902e+00, diff = 7.13603544200638e-03
iter = 88, step = 1.09566367974060e-02, func = 1.05165822458324e+05, norm = 5.30112222869145e+00, diff = 5.62392042878441e-03
iter = 89, step = 1.04088049575357e-02, func = 1.05165822522830e+05, norm = 5.95460171455066e+00, diff = 6.99037578379150e-03
iter = 90, step = 9.88836470965895e-03, func = 1.05165828101697e+05, norm = 5.40463378017189e+00, diff = 6.55379257915781e-03
iter = 91, step = 9.39394647417600e-03, func = 1.05165830303951e+05, norm = 4.44324620402017e+00, diff = 6.05448308100289e-03
iter = 92, step = 8.92424915046720e-03, func = 1.05165830263689e+05, norm = 4.93816432420109e+00, diff = 6.14613189530023e-03
iter = 93, step = 8.47803669294384e-03, func = 1.05165834705263e+05, norm = 5.86635763431533e+00, diff = 5.08071564005961e-03
iter = 94, step = 8.05413485829665e-03, func = 1.05165834305029e+05, norm = 6.49332313112842e+00, diff = 4.24450161316724e-03
iter = 95, step = 7.65142811538181e-03, func = 1.05165837645667e+05, norm = 5.25069432597858e+00, diff = 4.62856070903708e-03
iter = 96, step = 7.26885670961272e-03, func = 1.05165835494913e+05, norm = 7.70585203684495e+00, diff = 4.74124534106583e-03
iter = 97, step = 6.90541387413209e-03, func = 1.05165836421858e+05, norm = 5.69482623679397e+00, diff = 3.64917606209197e-03
iter = 98, step = 6.56014318042548e-03, func = 1.05165835995039e+05, norm = 6.79142037006255e+00, diff = 4.06787369110076e-03
iter = 99, step = 6.23213602140421e-03, func = 1.05165838175174e+05, norm = 6.07137425592481e+00, diff = 3.63844470095277e-03
iter = 100, step = 5.92052922033400e-03, func = 1.05165840872539e+05, norm = 4.74579174070220e+00, diff = 3.51594694894168e-03
iter = 101, step = 5.62450275931730e-03, func = 1.05165839667199e+05, norm = 5.84936716887708e+00, diff = 3.76858530487439e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.051660e+05
Time stats : init 0.0, compute 1.0, total 1.0
Academic license - for non-commercial use only
# centers = 36, while k = 36 and n = 254
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 2.57134e-318
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 64516
Number of centers left            = 254
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 64516 variables
Optimize a model with 65279 rows, 64770 columns and 259080 nonzeros
Variable types: 254 continuous, 64516 integer (64516 binary)
Coefficient statistics:
  Matrix range     [1e+00, 4e+06]
  Objective range  [2e-01, 5e+06]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+01]
Presolve removed 0 rows and 2040 columns
Presolve time: 0.02s

Explored 0 nodes (0 simplex iterations) in 0.04 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.042091 seconds
Total time elapsed: 0.901248 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running UT'
Running UT
+ /home/lykhovyd/progs/districting/districting myconfig.txt UT /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/UT.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/UT/counties/graph/UT.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/UT/counties/graph/UT_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/UT/counties/graph/UT.population
state[2]        = UT
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/UT.ralg_hot
nr_comp = 1
graph: 29 nodes, 67 edges (read)
Model input: L = 687517, U = 694426, k = 4.
Graph is connected.
Model input: total population = 2763885
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.49778540780120e+04, norm = 1.03628190217732e+01, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 2.49792971909643e+04, norm = 6.14551789216949e+00, diff = 2.09448599534676e+00
iter = 3, step = 1.08300000000000e+00, func = 2.49783598744342e+04, norm = 5.56766232519575e+00, diff = 9.20702718801606e-01
iter = 4, step = 1.02885000000000e+00, func = 2.49798091441096e+04, norm = 3.49208699365986e+00, diff = 7.35660674524153e-01
iter = 5, step = 9.77407500000000e-01, func = 2.49807069009732e+04, norm = 3.28027207599682e+00, diff = 7.87219836286031e-01
iter = 6, step = 9.28537125000000e-01, func = 2.49808150890656e+04, norm = 1.89596964025200e+00, diff = 6.69987744319059e-01
iter = 7, step = 8.82110268750000e-01, func = 2.49810290652914e+04, norm = 2.72463445047623e+00, diff = 6.58288419382597e-01
iter = 8, step = 8.38004755312500e-01, func = 2.49812095090199e+04, norm = 3.37014001233407e+00, diff = 5.77517830552607e-01
iter = 9, step = 7.96104517546875e-01, func = 2.49812296087045e+04, norm = 2.17215275299681e+00, diff = 5.94790427902542e-01
iter = 10, step = 7.56299291669531e-01, func = 2.49810244773742e+04, norm = 2.59891314027584e+00, diff = 5.11203993868061e-01
iter = 11, step = 7.18484327086054e-01, func = 2.49816513855700e+04, norm = 2.06598287100032e+00, diff = 4.41282824728097e-01
iter = 12, step = 6.82560110731752e-01, func = 2.49810522080113e+04, norm = 2.50773276808901e+00, diff = 4.88264183981694e-01
iter = 13, step = 6.48432105195164e-01, func = 2.49812916086015e+04, norm = 2.87590881288238e+00, diff = 4.27245553506875e-01
iter = 14, step = 6.16010499935406e-01, func = 2.49814541099498e+04, norm = 2.17925743819545e+00, diff = 3.64635320244587e-01
iter = 15, step = 5.85209974938635e-01, func = 2.49816147963816e+04, norm = 2.16635133001816e+00, diff = 3.96994469294906e-01
iter = 16, step = 5.55949476191704e-01, func = 2.49814650314272e+04, norm = 2.19005898018474e+00, diff = 3.27221067183578e-01
iter = 17, step = 5.28152002382118e-01, func = 2.49814086529701e+04, norm = 1.92641293238652e+00, diff = 3.60716814918250e-01
iter = 18, step = 5.28152002382118e-01, func = 2.49815163376148e+04, norm = 1.88720370494799e+00, diff = 5.10027221519116e-01
iter = 19, step = 5.01744402263013e-01, func = 2.49816740816742e+04, norm = 1.30765812854555e+00, diff = 3.12043808785148e-01
iter = 20, step = 4.76657182149862e-01, func = 2.49816606409233e+04, norm = 1.06858834935067e+00, diff = 3.04566644502657e-01
iter = 21, step = 4.52824323042369e-01, func = 2.49817219343571e+04, norm = 1.21391632384246e+00, diff = 2.17887232889249e-01
iter = 22, step = 4.30183106890250e-01, func = 2.49817693843805e+04, norm = 1.47400678086765e+00, diff = 2.16755946206968e-01
iter = 23, step = 4.08673951545738e-01, func = 2.49815966789797e+04, norm = 1.61466282528138e+00, diff = 2.36674155729795e-01
iter = 24, step = 3.88240253968451e-01, func = 2.49817707627419e+04, norm = 1.11480861881214e+00, diff = 1.85475213714248e-01
iter = 25, step = 3.68828241270028e-01, func = 2.49818402841249e+04, norm = 9.25002648308443e-01, diff = 1.88679471890562e-01
iter = 26, step = 3.50386829206527e-01, func = 2.49818253989345e+04, norm = 9.90343600958224e-01, diff = 1.01894933057467e-01
iter = 27, step = 3.32867487746201e-01, func = 2.49817877198942e+04, norm = 1.08914663208165e+00, diff = 1.42449563216639e-01
iter = 28, step = 3.32867487746201e-01, func = 2.49817973288918e+04, norm = 9.93119249113387e-01, diff = 2.25976406285500e-01
iter = 29, step = 3.16224113358890e-01, func = 2.49818527291867e+04, norm = 8.21573353613749e-01, diff = 1.35649741092984e-01
iter = 30, step = 3.00412907690946e-01, func = 2.49818741416243e+04, norm = 7.50855764127555e-01, diff = 1.28308744299592e-01
iter = 31, step = 2.85392262306399e-01, func = 2.49818929497705e+04, norm = 6.23722560992625e-01, diff = 1.06155048543770e-01
iter = 32, step = 2.71122649191079e-01, func = 2.49818896513994e+04, norm = 6.27957351337351e-01, diff = 7.51054170302513e-02
iter = 33, step = 2.57566516731525e-01, func = 2.49818651567307e+04, norm = 1.46822454237866e+00, diff = 6.91257105939518e-02
iter = 34, step = 2.44688190894949e-01, func = 2.49817645612694e+04, norm = 1.31796024467518e+00, diff = 1.41754760573241e-01
iter = 35, step = 2.44688190894949e-01, func = 2.49818451281845e+04, norm = 1.23477575397225e+00, diff = 1.40391067690237e-01
iter = 36, step = 2.44688190894949e-01, func = 2.49818774037532e+04, norm = 7.17410305404781e-01, diff = 1.25540787222322e-01
iter = 37, step = 2.32453781350201e-01, func = 2.49819006752547e+04, norm = 5.95144705125110e-01, diff = 9.86114353512476e-02
iter = 38, step = 2.20831092282691e-01, func = 2.49818916223652e+04, norm = 6.09747106455711e-01, diff = 8.70926342111505e-02
iter = 39, step = 2.09789537668556e-01, func = 2.49818911960812e+04, norm = 5.35097975176057e-01, diff = 4.79105184541880e-02
iter = 40, step = 1.99300060785129e-01, func = 2.49818848959084e+04, norm = 5.90282061196665e-01, diff = 3.98828484769859e-02
iter = 41, step = 1.99300060785129e-01, func = 2.49819051439540e+04, norm = 4.61125623155680e-01, diff = 7.24754452545271e-02
iter = 42, step = 1.89335057745872e-01, func = 2.49818962232158e+04, norm = 4.38524157887348e-01, diff = 4.23393153854295e-02
iter = 43, step = 1.89335057745872e-01, func = 2.49819028291110e+04, norm = 3.92177585665645e-01, diff = 9.15313191974192e-02
iter = 44, step = 1.79868304858579e-01, func = 2.49819150698759e+04, norm = 4.18550897394311e-01, diff = 3.83519748897412e-02
iter = 45, step = 1.70874889615650e-01, func = 2.49819190278986e+04, norm = 3.47928954067411e-01, diff = 3.58679428013938e-02
iter = 46, step = 1.62331145134867e-01, func = 2.49819220501636e+04, norm = 3.31435525947576e-01, diff = 5.24565173786594e-02
iter = 47, step = 1.54214587878124e-01, func = 2.49819276302553e+04, norm = 2.80541740257679e-01, diff = 3.01352282214550e-02
iter = 48, step = 1.46503858484218e-01, func = 2.49819302182721e+04, norm = 2.97568832944041e-01, diff = 2.56496170735563e-02
iter = 49, step = 1.39178665560007e-01, func = 2.49819333973202e+04, norm = 2.82308044224636e-01, diff = 1.71339202343419e-02
iter = 50, step = 1.32219732282006e-01, func = 2.49819362497681e+04, norm = 2.53445091209826e-01, diff = 1.96419837356004e-02
iter = 51, step = 1.32219732282006e-01, func = 2.49819375667397e+04, norm = 2.50207673852449e-01, diff = 3.28714317378703e-02
iter = 52, step = 1.25608745667906e-01, func = 2.49819461946072e+04, norm = 1.64465484604615e-01, diff = 1.78379558403755e-02
iter = 53, step = 1.19328308384511e-01, func = 2.49819427578006e+04, norm = 2.00793804122201e-01, diff = 1.78302040468398e-02
iter = 54, step = 1.13361892965285e-01, func = 2.49819429052485e+04, norm = 2.16014031385279e-01, diff = 1.88348720101418e-02
iter = 55, step = 1.07693798317021e-01, func = 2.49819475028692e+04, norm = 1.54757883078431e-01, diff = 1.82188652227958e-02
iter = 56, step = 1.02309108401170e-01, func = 2.49819510848068e+04, norm = 1.68270655008084e-01, diff = 1.78544883110727e-02
iter = 57, step = 9.71936529811114e-02, func = 2.49819504671780e+04, norm = 1.43354445399403e-01, diff = 1.67108959792230e-02
iter = 58, step = 9.23339703320558e-02, func = 2.49819479740596e+04, norm = 1.52935554477980e-01, diff = 1.67183572724861e-02
iter = 59, step = 9.23339703320558e-02, func = 2.49819517863734e+04, norm = 1.46748496378640e-01, diff = 2.95649192083562e-02
iter = 60, step = 8.77172718154530e-02, func = 2.49819514592636e+04, norm = 1.36123212598016e-01, diff = 1.78046177166139e-02
iter = 61, step = 8.33314082246804e-02, func = 2.49819524687340e+04, norm = 5.35156314589249e-01, diff = 1.63103383751319e-02
iter = 62, step = 7.91648378134463e-02, func = 2.49819543529010e+04, norm = 2.86660759709627e-01, diff = 3.72750957902382e-02
iter = 63, step = 7.52065959227740e-02, func = 2.49819538785227e+04, norm = 1.47366964363532e-01, diff = 1.27461139711246e-02
iter = 64, step = 7.14462661266353e-02, func = 2.49819529632893e+04, norm = 1.23463468340327e-01, diff = 1.18551673668054e-02
iter = 65, step = 7.14462661266353e-02, func = 2.49819542338637e+04, norm = 1.11831536842933e-01, diff = 2.07246689897367e-02
iter = 66, step = 6.78739528203035e-02, func = 2.49819548103675e+04, norm = 9.26053951896129e-02, diff = 1.04781636634393e-02
iter = 67, step = 6.78739528203035e-02, func = 2.49819562559407e+04, norm = 1.07933346342650e-01, diff = 2.36651464958015e-02
iter = 68, step = 6.44802551792883e-02, func = 2.49819570622393e+04, norm = 9.57880588407237e-02, diff = 1.18729510419743e-02
iter = 69, step = 6.12562424203239e-02, func = 2.49819580044797e+04, norm = 6.90559779685256e-02, diff = 8.94807039582561e-03
iter = 70, step = 5.81934302993077e-02, func = 2.49819584814153e+04, norm = 6.19115875719760e-02, diff = 1.20875249685213e-02
iter = 71, step = 5.81934302993077e-02, func = 2.49819587494893e+04, norm = 7.03106555225720e-02, diff = 2.45404593319456e-02
iter = 72, step = 5.81934302993077e-02, func = 2.49819538870476e+04, norm = 3.41405142354301e-01, diff = 2.82380507628996e-02
iter = 73, step = 5.52837587843423e-02, func = 2.49819598093403e+04, norm = 1.77544673448912e-01, diff = 5.36827832965386e-03
iter = 74, step = 5.25195708451252e-02, func = 2.49819603581708e+04, norm = 7.81738048168963e-02, diff = 8.81822446537544e-03
iter = 75, step = 4.98935923028690e-02, func = 2.49819605437935e+04, norm = 6.57169175032737e-02, diff = 1.17479522281515e-02
iter = 76, step = 4.98935923028690e-02, func = 2.49819612568293e+04, norm = 4.51951964975431e-02, diff = 2.74087112436938e-02
iter = 77, step = 4.73989126877255e-02, func = 2.49819614365111e+04, norm = 5.09531886251393e-02, diff = 1.56293731999558e-02
iter = 78, step = 4.50289670533392e-02, func = 2.49819612454201e+04, norm = 4.95163562851823e-02, diff = 1.24088227005955e-02
iter = 79, step = 4.27775187006723e-02, func = 2.49819615587276e+04, norm = 9.17148860293993e-02, diff = 1.40889269049670e-02
iter = 80, step = 4.06386427656386e-02, func = 2.49819619377904e+04, norm = 5.42827207239693e-02, diff = 6.36900167983464e-03
iter = 81, step = 3.86067106273567e-02, func = 2.49819621602114e+04, norm = 4.14744077554721e-02, diff = 1.38094216370189e-02
iter = 82, step = 3.66763750959889e-02, func = 2.49819621551824e+04, norm = 3.96447113359141e-02, diff = 1.15432814731201e-02
iter = 83, step = 3.48425563411894e-02, func = 2.49819623204475e+04, norm = 3.82080426609035e-02, diff = 1.34919253749967e-02
iter = 84, step = 3.31004285241300e-02, func = 2.49819626558535e+04, norm = 3.73443881293841e-02, diff = 1.21308650999770e-02
iter = 85, step = 3.14454070979235e-02, func = 2.49819629289056e+04, norm = 2.79842570173725e-02, diff = 1.14007915098202e-02
iter = 86, step = 2.98731367430273e-02, func = 2.49819629594634e+04, norm = 3.20653884191645e-02, diff = 1.51060149934006e-02
iter = 87, step = 3.58477640916327e-02, func = 2.49819632900190e+04, norm = 2.30905680663453e-02, diff = 3.91945578931553e-02
iter = 88, step = 4.30173169099593e-02, func = 2.49819637410490e+04, norm = 2.51167384903092e-02, diff = 6.91399359469348e-02
iter = 89, step = 5.16207802919511e-02, func = 2.49819641683626e+04, norm = 2.72435453471388e-02, diff = 6.66639379411654e-02
iter = 90, step = 4.90397412773536e-02, func = 2.49819639395251e+04, norm = 1.44169224700135e-01, diff = 2.38746880393176e-02
iter = 91, step = 4.65877542134859e-02, func = 2.49819645696984e+04, norm = 7.40895325466662e-02, diff = 6.97777465627735e-03
iter = 92, step = 4.42583665028116e-02, func = 2.49819648058387e+04, norm = 3.18675898171858e-02, diff = 1.71540081954869e-02
iter = 93, step = 4.42583665028116e-02, func = 2.49819650076507e+04, norm = 4.22859290170889e-02, diff = 3.99934347883628e-02
iter = 94, step = 9.17741487802301e-02, func = 2.49819657418132e+04, norm = 2.43870209673725e-02, diff = 2.45194295657965e-01
iter = 95, step = 1.10128978536276e-01, func = 2.49819587771377e+04, norm = 3.99993750403440e-01, diff = 1.62418364822144e-01
iter = 96, step = 1.04622529609462e-01, func = 2.49819667391198e+04, norm = 2.00587720706208e-01, diff = 3.76736142390887e-02
iter = 97, step = 1.04622529609462e-01, func = 2.49819674769647e+04, norm = 4.81355939484710e-01, diff = 8.42643348147983e-02
iter = 98, step = 9.93914031289892e-02, func = 2.49819682758078e+04, norm = 2.41261540377374e-01, diff = 3.34055039288972e-02
iter = 99, step = 9.44218329725397e-02, func = 2.49819690972123e+04, norm = 2.57784744519201e-02, diff = 4.24757097879420e-02
iter = 100, step = 9.44218329725397e-02, func = 2.49819695966242e+04, norm = 1.93090622055783e-02, diff = 1.10857383015747e-01
iter = 101, step = 9.44218329725397e-02, func = 2.49819209304494e+04, norm = 1.36549934940361e+00, diff = 1.11610740708264e-01
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 2.498197e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 4, while k = 4 and n = 29
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 3.45302e-320
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 841
Number of centers left            = 29
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 841 variables
Optimize a model with 929 rows, 870 columns and 3480 nonzeros
Variable types: 29 continuous, 841 integer (841 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+06]
  Objective range  [4e+00, 2e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 4e+00]
Presolve removed 0 rows and 30 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.000711 seconds
Total time elapsed: 0.015423 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running VA'
Running VA
+ /home/lykhovyd/progs/districting/districting myconfig.txt VA /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/VA.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/VA/counties/graph/VA.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/VA/counties/graph/VA_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/VA/counties/graph/VA.population
state[2]        = VA
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/VA.ralg_hot
nr_comp = 1
graph: 134 nodes, 306 edges (read)
Model input: L = 723729, U = 731002, k = 11.
Graph is connected.
Model input: total population = 8001024
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.36601292197358e+04, norm = 1.26268887061021e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 1.36587047632855e+04, norm = 9.33763695669568e+00, diff = 8.89992679511041e-01
iter = 3, step = 8.57375000000000e-01, func = 1.36603202500379e+04, norm = 8.91405930298949e+00, diff = 6.40812707110671e-01
iter = 4, step = 8.14506250000000e-01, func = 1.36585173871106e+04, norm = 9.64423843821456e+00, diff = 5.72022991957046e-01
iter = 5, step = 7.73780937500000e-01, func = 1.36599166197940e+04, norm = 6.16917429281467e+00, diff = 6.19287876638515e-01
iter = 6, step = 7.35091890625000e-01, func = 1.36601354128188e+04, norm = 7.15251485585327e+00, diff = 6.29934340834269e-01
iter = 7, step = 6.98337296093750e-01, func = 1.36601742528316e+04, norm = 7.52140561983712e+00, diff = 5.00870568595712e-01
iter = 8, step = 6.63420431289062e-01, func = 1.36593461519504e+04, norm = 8.67999519634449e+00, diff = 4.89646407914596e-01
iter = 9, step = 6.63420431289062e-01, func = 1.36596322395872e+04, norm = 6.61161469073092e+00, diff = 9.12311002186728e-01
iter = 10, step = 6.30249409724609e-01, func = 1.36594509098973e+04, norm = 6.19348504328528e+00, diff = 5.00983180797399e-01
iter = 11, step = 6.30249409724609e-01, func = 1.36597747891134e+04, norm = 5.56357340287936e+00, diff = 9.18432110284846e-01
iter = 12, step = 5.98736939238379e-01, func = 1.36601049093020e+04, norm = 5.99237015771093e+00, diff = 4.49334802608335e-01
iter = 13, step = 5.68800092276460e-01, func = 1.36607050469108e+04, norm = 4.79837907238919e+00, diff = 4.01719184247935e-01
iter = 14, step = 5.40360087662637e-01, func = 1.36610012061276e+04, norm = 5.09073807593640e+00, diff = 4.32969655172968e-01
iter = 15, step = 5.13342083279505e-01, func = 1.36605726867827e+04, norm = 5.30716623663669e+00, diff = 3.96317617765779e-01
iter = 16, step = 4.87674979115529e-01, func = 1.36610037850255e+04, norm = 3.56990090870114e+00, diff = 3.56684733173662e-01
iter = 17, step = 4.63291230159753e-01, func = 1.36608009951142e+04, norm = 4.90232134335414e+00, diff = 3.68149285846893e-01
iter = 18, step = 4.40126668651765e-01, func = 1.36609497706793e+04, norm = 5.07810856228782e+00, diff = 2.78313140290197e-01
iter = 19, step = 4.18120335219177e-01, func = 1.36610796390380e+04, norm = 4.98271609008204e+00, diff = 2.89526690650740e-01
iter = 20, step = 3.97214318458218e-01, func = 1.36609806579699e+04, norm = 4.62792881825749e+00, diff = 2.98975002165012e-01
iter = 21, step = 3.77353602535307e-01, func = 1.36611155330855e+04, norm = 4.17006527705786e+00, diff = 2.84320386332081e-01
iter = 22, step = 3.58485922408542e-01, func = 1.36612191989070e+04, norm = 4.51531451286427e+00, diff = 2.52400957023736e-01
iter = 23, step = 3.40561626288115e-01, func = 1.36612107564767e+04, norm = 4.67644579826858e+00, diff = 2.24060869247452e-01
iter = 24, step = 3.23533544973709e-01, func = 1.36614196290787e+04, norm = 3.81020068086424e+00, diff = 2.15223046495485e-01
iter = 25, step = 3.07356867725023e-01, func = 1.36612195309484e+04, norm = 4.24171719079812e+00, diff = 1.89226811692016e-01
iter = 26, step = 2.91989024338772e-01, func = 1.36614374823298e+04, norm = 2.98058420236915e+00, diff = 1.95770409719189e-01
iter = 27, step = 2.77389573121834e-01, func = 1.36613809944422e+04, norm = 4.00845724718080e+00, diff = 1.94482556084384e-01
iter = 28, step = 2.63520094465742e-01, func = 1.36614027362012e+04, norm = 4.19464299229695e+00, diff = 1.70718430344848e-01
iter = 29, step = 2.50344089742455e-01, func = 1.36614601474854e+04, norm = 3.57680031056966e+00, diff = 1.59467865956142e-01
iter = 30, step = 2.37826885255332e-01, func = 1.36614416672020e+04, norm = 3.13675384129700e+00, diff = 1.59111965566003e-01
iter = 31, step = 2.25935540992565e-01, func = 1.36614931071494e+04, norm = 2.59023650802023e+00, diff = 1.45105150775189e-01
iter = 32, step = 2.14638763942937e-01, func = 1.36615255909297e+04, norm = 2.91270177570920e+00, diff = 1.26365095018127e-01
iter = 33, step = 2.03906825745790e-01, func = 1.36615707024903e+04, norm = 3.15866306005563e+00, diff = 1.26356652027631e-01
iter = 34, step = 1.93711484458501e-01, func = 1.36615461945598e+04, norm = 3.84878758704913e+00, diff = 1.32510797464623e-01
iter = 35, step = 1.84025910235576e-01, func = 1.36615738851023e+04, norm = 3.42453331899961e+00, diff = 1.02931746577020e-01
iter = 36, step = 1.74824614723797e-01, func = 1.36616331780979e+04, norm = 2.35156595650792e+00, diff = 1.19721142234416e-01
iter = 37, step = 1.66083383987607e-01, func = 1.36615688779691e+04, norm = 2.70236477291408e+00, diff = 1.05411378754459e-01
iter = 38, step = 1.57779214788227e-01, func = 1.36615610574324e+04, norm = 2.53113054568743e+00, diff = 8.86591247894586e-02
iter = 39, step = 1.49890254048815e-01, func = 1.36616040623582e+04, norm = 2.19712164683531e+00, diff = 7.81255509098070e-02
iter = 40, step = 1.42395741346375e-01, func = 1.36616635343755e+04, norm = 2.22154519474127e+00, diff = 9.27778801148717e-02
iter = 41, step = 1.35275954279056e-01, func = 1.36616491983276e+04, norm = 2.13651669874949e+00, diff = 8.37621141304399e-02
iter = 42, step = 1.28512156565103e-01, func = 1.36615662726212e+04, norm = 3.16452139225892e+00, diff = 7.96380341212499e-02
iter = 43, step = 1.28512156565103e-01, func = 1.36616505617353e+04, norm = 2.48325949343792e+00, diff = 1.23813986913252e-01
iter = 44, step = 1.22086548736848e-01, func = 1.36616375993697e+04, norm = 2.62704428050291e+00, diff = 7.61100049012529e-02
iter = 45, step = 1.15982221300006e-01, func = 1.36616558862721e+04, norm = 2.25857678977770e+00, diff = 5.99708570840427e-02
iter = 46, step = 1.10183110235005e-01, func = 1.36616656362312e+04, norm = 2.22472438371497e+00, diff = 7.07429261462953e-02
iter = 47, step = 1.04673954723255e-01, func = 1.36616664969494e+04, norm = 2.09445248896488e+00, diff = 6.38709448403924e-02
iter = 48, step = 9.94402569870922e-02, func = 1.36616721037836e+04, norm = 2.37647383428878e+00, diff = 5.35655267280504e-02
iter = 49, step = 9.44682441377376e-02, func = 1.36616675970681e+04, norm = 2.49020813674816e+00, diff = 5.58603754953341e-02
iter = 50, step = 8.97448319308507e-02, func = 1.36617155998063e+04, norm = 1.76401895867941e+00, diff = 5.01601513559881e-02
iter = 51, step = 8.52575903343082e-02, func = 1.36616960369858e+04, norm = 2.06483937056730e+00, diff = 5.15563532470203e-02
iter = 52, step = 8.09947108175928e-02, func = 1.36617118236879e+04, norm = 2.43036428375855e+00, diff = 4.11495604907801e-02
iter = 53, step = 7.69449752767131e-02, func = 1.36617220133734e+04, norm = 2.03711878866062e+00, diff = 3.97790196846019e-02
iter = 54, step = 7.30977265128775e-02, func = 1.36617254910359e+04, norm = 2.20497117468165e+00, diff = 4.23534188260573e-02
iter = 55, step = 6.94428401872336e-02, func = 1.36617365326425e+04, norm = 1.91177740232303e+00, diff = 3.93050156106796e-02
iter = 56, step = 6.59706981778719e-02, func = 1.36617346037898e+04, norm = 1.83766602847820e+00, diff = 3.01233765422125e-02
iter = 57, step = 6.26721632689783e-02, func = 1.36617413506226e+04, norm = 1.57676535706149e+00, diff = 2.88992827569078e-02
iter = 58, step = 5.95385551055294e-02, func = 1.36617510147968e+04, norm = 1.36861505074248e+00, diff = 2.87033637153378e-02
iter = 59, step = 5.65616273502529e-02, func = 1.36617392443482e+04, norm = 1.59038700622508e+00, diff = 2.78591463399781e-02
iter = 60, step = 5.37335459827403e-02, func = 1.36617536494279e+04, norm = 1.43690270721641e+00, diff = 2.47265407025386e-02
iter = 61, step = 5.10468686836033e-02, func = 1.36617638765846e+04, norm = 1.37983136635479e+00, diff = 2.20715139924184e-02
iter = 62, step = 4.84945252494231e-02, func = 1.36617567343519e+04, norm = 1.76516936750382e+00, diff = 2.19452199570695e-02
iter = 63, step = 4.60697989869519e-02, func = 1.36617585333048e+04, norm = 1.62710240745795e+00, diff = 2.39708541047023e-02
iter = 64, step = 4.37663090376043e-02, func = 1.36617638623890e+04, norm = 1.42264444224013e+00, diff = 1.94810533569874e-02
iter = 65, step = 4.15779935857241e-02, func = 1.36617631582550e+04, norm = 1.43703261956541e+00, diff = 1.69303082021724e-02
iter = 66, step = 3.94990939064379e-02, func = 1.36617701036659e+04, norm = 1.44258407691169e+00, diff = 1.75133381768686e-02
iter = 67, step = 3.75241392111160e-02, func = 1.36617727894868e+04, norm = 1.03976942247285e+00, diff = 1.39609945455042e-02
iter = 68, step = 3.56479322505602e-02, func = 1.36617737982235e+04, norm = 1.22088341097986e+00, diff = 1.59019371608097e-02
iter = 69, step = 3.38655356380322e-02, func = 1.36617691196224e+04, norm = 1.28437562423847e+00, diff = 1.31903731272696e-02
iter = 70, step = 3.21722588561306e-02, func = 1.36617750993640e+04, norm = 1.30918693103574e+00, diff = 1.16987658492724e-02
iter = 71, step = 3.05636459133241e-02, func = 1.36617719291016e+04, norm = 1.38871483868598e+00, diff = 1.73034896245990e-02
iter = 72, step = 2.90354636176579e-02, func = 1.36617743082396e+04, norm = 1.57576827157876e+00, diff = 1.32571177348267e-02
iter = 73, step = 2.75836904367750e-02, func = 1.36617776365969e+04, norm = 1.28965175943997e+00, diff = 1.17683571327260e-02
iter = 74, step = 2.62045059149362e-02, func = 1.36617789654547e+04, norm = 1.16845602464071e+00, diff = 1.17322288732650e-02
iter = 75, step = 2.48942806191894e-02, func = 1.36617807410887e+04, norm = 8.89026211188115e-01, diff = 9.77116526150600e-03
iter = 76, step = 2.36495665882299e-02, func = 1.36617827845129e+04, norm = 1.25052079092933e+00, diff = 9.13227663800176e-03
iter = 77, step = 2.24670882588184e-02, func = 1.36617792139001e+04, norm = 1.37844892527406e+00, diff = 1.09319374156314e-02
iter = 78, step = 2.13437338458775e-02, func = 1.36617849360550e+04, norm = 9.01292143789650e-01, diff = 9.90229582106462e-03
iter = 79, step = 2.02765471535836e-02, func = 1.36617849143288e+04, norm = 1.10145076393558e+00, diff = 9.62340679544448e-03
iter = 80, step = 1.92627197959044e-02, func = 1.36617816638691e+04, norm = 1.29915944109592e+00, diff = 8.43199232871599e-03
iter = 81, step = 1.82995838061092e-02, func = 1.36617841068284e+04, norm = 1.27006928179918e+00, diff = 8.18735196589847e-03
iter = 82, step = 1.73846046158038e-02, func = 1.36617857089564e+04, norm = 1.38897826591078e+00, diff = 7.37944786791519e-03
iter = 83, step = 1.65153743850136e-02, func = 1.36617879619651e+04, norm = 1.04651357748745e+00, diff = 7.62562166286960e-03
iter = 84, step = 1.56896056657629e-02, func = 1.36617827923780e+04, norm = 1.32238035634358e+00, diff = 7.50762070617470e-03
iter = 85, step = 1.49051253824747e-02, func = 1.36617868550538e+04, norm = 7.29365492470088e-01, diff = 5.44348491443715e-03
iter = 86, step = 1.41598691133510e-02, func = 1.36617886402698e+04, norm = 7.51566089867904e-01, diff = 6.91116111334311e-03
iter = 87, step = 1.34518756576835e-02, func = 1.36617894872757e+04, norm = 8.86449081952834e-01, diff = 5.27990532551373e-03
iter = 88, step = 1.27792818747993e-02, func = 1.36617880884884e+04, norm = 1.22734700368737e+00, diff = 5.21162600882324e-03
iter = 89, step = 1.21403177810593e-02, func = 1.36617901116742e+04, norm = 8.73845025364368e-01, diff = 3.98129966810501e-03
iter = 90, step = 1.15333018920064e-02, func = 1.36617895673448e+04, norm = 9.81222571802051e-01, diff = 4.17283408154758e-03
iter = 91, step = 1.09566367974060e-02, func = 1.36617910860549e+04, norm = 7.85188513975596e-01, diff = 4.11528003569712e-03
iter = 92, step = 1.04088049575357e-02, func = 1.36617909562011e+04, norm = 8.62782280166193e-01, diff = 4.43761450665946e-03
iter = 93, step = 9.88836470965895e-03, func = 1.36617915023337e+04, norm = 8.02832587438132e-01, diff = 3.53874516809725e-03
iter = 94, step = 9.39394647417600e-03, func = 1.36617920479169e+04, norm = 6.82520905297823e-01, diff = 3.08537353890366e-03
iter = 95, step = 8.92424915046720e-03, func = 1.36617926197712e+04, norm = 5.53544985915811e-01, diff = 3.74087807904245e-03
iter = 96, step = 8.47803669294384e-03, func = 1.36617923416246e+04, norm = 6.83182375896535e-01, diff = 3.63811101433051e-03
iter = 97, step = 8.05413485829665e-03, func = 1.36617933911181e+04, norm = 6.50774745293204e-01, diff = 3.05994328212676e-03
iter = 98, step = 7.65142811538181e-03, func = 1.36617927024693e+04, norm = 1.27415796826885e+00, diff = 2.43535537749546e-03
iter = 99, step = 7.26885670961272e-03, func = 1.36617937550274e+04, norm = 7.83987064911743e-01, diff = 2.24256181158770e-03
iter = 100, step = 6.90541387413209e-03, func = 1.36617931847876e+04, norm = 8.42835128629913e-01, diff = 2.56971925446876e-03
iter = 101, step = 6.56014318042548e-03, func = 1.36617939787019e+04, norm = 6.30980129377091e-01, diff = 2.28732408274277e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.366182e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 11, while k = 11 and n = 134
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 7.2097e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 17956
Number of centers left            = 134
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 17956 variables
Optimize a model with 18359 rows, 18090 columns and 72360 nonzeros
Variable types: 134 continuous, 17956 integer (17956 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+06]
  Objective range  [1e-02, 3e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+01]
Presolve removed 0 rows and 135 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.010965 seconds
Total time elapsed: 0.226799 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running VT'
Running VT
+ /home/lykhovyd/progs/districting/districting myconfig.txt VT /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/VT.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/VT/counties/graph/VT.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/VT/counties/graph/VT_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/VT/counties/graph/VT.population
state[2]        = VT
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/VT.ralg_hot
nr_comp = 1
graph: 14 nodes, 27 edges (read)
Model input: L = 622613, U = 628869, k = 1.
Graph is connected.
Model input: total population = 625741
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 3.40025798226556e+03, norm = 1.41394789198754e-02, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 3.40026204735571e+03, norm = 7.06973945993771e-03, diff = 1.42500000000000e+00
iter = 3, step = 1.14000000000000e+00, func = 3.40026402689280e+03, norm = 3.53486972996885e-03, diff = 5.70000000000000e-01
iter = 4, step = 1.14000000000000e+00, func = 3.40026406223145e+03, norm = 1.76743486498443e-03, diff = 2.85000000000000e-01
iter = 5, step = 1.14000000000000e+00, func = 3.40026503433068e+03, norm = 8.83717432492212e-04, diff = 1.42500000000000e-01
iter = 6, step = 1.08300000000000e+00, func = 3.40026481780986e+03, norm = 4.41858716246107e-04, diff = 3.56250000000000e-02
iter = 7, step = 1.08300000000000e+00, func = 3.40026504692365e+03, norm = 2.20929358123054e-04, diff = 3.38437500000001e-02
iter = 8, step = 1.02885000000000e+00, func = 3.40026499725973e+03, norm = 1.10464679061527e-04, diff = 8.46093749999998e-03
iter = 9, step = 1.02885000000000e+00, func = 3.40026504991448e+03, norm = 5.52323395307636e-05, diff = 8.03789062500002e-03
iter = 10, step = 9.77407500000000e-01, func = 3.40026503987907e+03, norm = 2.76161697653813e-05, diff = 2.00947265624996e-03
iter = 11, step = 9.77407500000000e-01, func = 3.40026505062480e+03, norm = 1.38080848826904e-05, diff = 1.90899902343745e-03
iter = 12, step = 9.28537125000000e-01, func = 3.40026505000117e+03, norm = 6.90404244134456e-06, diff = 4.77249755859361e-04
iter = 13, step = 9.28537125000000e-01, func = 3.40026505079351e+03, norm = 3.45202122067343e-06, diff = 4.53387268066413e-04
iter = 14, step = 9.28537125000000e-01, func = 3.40026505160383e+03, norm = 1.72601061033653e-06, diff = 2.26693634033097e-04
iter = 15, step = 9.28537125000000e-01, func = 3.40026505159484e+03, norm = 8.63005305168147e-07, diff = 1.13346817016580e-04
iter = 16, step = 9.28537125000000e-01, func = 3.40026505199507e+03, norm = 7.06938614443863e-03, diff = 5.66734085082042e-05
iter = 17, step = 8.82110268750000e-01, func = 3.40026176991118e+03, norm = 7.06938615095734e-03, diff = 4.64268563161588e-01
iter = 18, step = 1.05853232250000e+00, func = 3.40026365710523e+03, norm = 3.53469307547867e-03, diff = 6.61582702505263e-01
iter = 19, step = 1.05853232250000e+00, func = 3.40026457610133e+03, norm = 1.76734653773933e-03, diff = 2.64633081002105e-01
iter = 20, step = 1.05853232250000e+00, func = 3.40026459250195e+03, norm = 8.83673268869667e-04, diff = 1.32316540501053e-01
iter = 21, step = 1.05853232250000e+00, func = 3.40026504379969e+03, norm = 4.41836634434834e-04, diff = 6.61582702505263e-02
iter = 22, step = 1.00560570637500e+00, func = 3.40026494327572e+03, norm = 2.20918317217417e-04, diff = 1.65395675626316e-02
iter = 23, step = 1.00560570637500e+00, func = 3.40026504964592e+03, norm = 1.10459158608708e-04, diff = 1.57125891845000e-02
iter = 24, step = 9.55325421056250e-01, func = 3.40026502658449e+03, norm = 5.52295793043542e-05, diff = 3.92814729612500e-03
iter = 25, step = 9.55325421056250e-01, func = 3.40026505103440e+03, norm = 2.76147896521771e-05, diff = 3.73173993131875e-03
iter = 26, step = 9.07559150003437e-01, func = 3.40026504637032e+03, norm = 1.38073948260885e-05, diff = 9.32934982829687e-04
iter = 27, step = 9.07559150003437e-01, func = 3.40026505136417e+03, norm = 6.90369741304427e-06, diff = 8.86288233688203e-04
iter = 28, step = 8.62181192503265e-01, func = 3.40026505106945e+03, norm = 3.45184870652214e-06, diff = 2.21572058422051e-04
iter = 29, step = 8.62181192503265e-01, func = 3.40026505144249e+03, norm = 1.72592435326107e-06, diff = 2.10493455500948e-04
iter = 30, step = 8.62181192503265e-01, func = 3.40026505181348e+03, norm = 8.62962176630534e-07, diff = 1.05246727750474e-04
iter = 31, step = 8.62181192503265e-01, func = 3.40026505181450e+03, norm = 4.31481088315267e-07, diff = 5.26233638752370e-05
iter = 32, step = 8.62181192503265e-01, func = 3.40026505199550e+03, norm = 2.41214904866433e-07, diff = 2.63116819376185e-05
iter = 33, step = 8.19072132878102e-01, func = 3.40026505188685e+03, norm = 2.72902147847249e-07, diff = 1.77145631814887e-05
iter = 34, step = 9.82886559453722e-01, func = 3.40026505194550e+03, norm = 1.36451073923625e-07, diff = 2.52432525336215e-05
iter = 35, step = 9.82886559453722e-01, func = 3.40026505198744e+03, norm = 6.82255369618123e-08, diff = 1.00973010134486e-05
iter = 36, step = 9.33742231481036e-01, func = 3.40026505199580e+03, norm = 3.41127684809062e-08, diff = 2.52432525336215e-06
iter = 37, step = 8.87055119906984e-01, func = 3.40026505199624e+03, norm = 1.70563842404531e-08, diff = 1.19905449534702e-06
iter = 38, step = 8.87055119906984e-01, func = 3.40026505199619e+03, norm = 8.52819212022654e-09, diff = 1.13910177057967e-06
iter = 39, step = 8.87055119906984e-01, func = 3.40026505199781e+03, norm = 8.53305874912277e-08, diff = 5.69550885289855e-07
iter = 40, step = 8.42702363911635e-01, func = 3.40026505196432e+03, norm = 8.53637819739562e-08, diff = 5.35574925058797e-06
iter = 41, step = 8.42702363911635e-01, func = 3.40026505199971e+03, norm = 4.26818909869781e-08, diff = 5.08796178805857e-06
iter = 42, step = 8.00567245716053e-01, func = 3.40026505199130e+03, norm = 2.13409454934890e-08, diff = 1.27199044701464e-06
iter = 43, step = 9.60680694859264e-01, func = 3.40026505199588e+03, norm = 1.06704727467445e-08, diff = 1.81258638699587e-06
iter = 44, step = 9.60680694859264e-01, func = 3.40026505199899e+03, norm = 5.33523637337225e-09, diff = 7.25034554798346e-07
iter = 45, step = 9.12646660116300e-01, func = 3.40026505199973e+03, norm = 2.66761818668613e-09, diff = 1.81258638699586e-07
iter = 46, step = 8.67014327110485e-01, func = 3.40026505199967e+03, norm = 1.33380909334306e-09, diff = 8.60978533823035e-08
iter = 47, step = 8.67014327110485e-01, func = 3.40026505199976e+03, norm = 6.66904546671532e-10, diff = 8.17929607131883e-08
iter = 48, step = 8.67014327110485e-01, func = 3.40026505199995e+03, norm = 3.33452273335766e-10, diff = 4.08964803565942e-08
iter = 49, step = 8.23663610754961e-01, func = 3.40026505199998e+03, norm = 1.66726136667883e-10, diff = 1.02241200891485e-08
iter = 50, step = 8.23663610754961e-01, func = 3.40026505199995e+03, norm = 8.33630683339415e-11, diff = 9.71291408469110e-09
iter = 51, step = 8.23663610754961e-01, func = 3.40026505199998e+03, norm = 2.13006318549748e-09, diff = 4.85645704234560e-09
iter = 52, step = 7.82480430217213e-01, func = 3.40026505199914e+03, norm = 2.13026672125424e-09, diff = 1.24099757965500e-07
iter = 53, step = 9.38976516260656e-01, func = 3.40026505199961e+03, norm = 1.06513336062712e-09, diff = 1.76842155100837e-07
iter = 54, step = 9.38976516260656e-01, func = 3.40026505199989e+03, norm = 5.32566680313560e-10, diff = 7.07368620403348e-08
iter = 55, step = 8.92027690447623e-01, func = 3.40026505199998e+03, norm = 2.66283340156780e-10, diff = 1.76842155100837e-08
iter = 56, step = 8.47426305925242e-01, func = 3.40026505199996e+03, norm = 1.33141670078390e-10, diff = 8.40000236728975e-09
iter = 57, step = 8.47426305925242e-01, func = 3.40026505199998e+03, norm = 6.65708350391950e-11, diff = 7.98000224892527e-09
iter = 58, step = 8.47426305925242e-01, func = 3.40026505199999e+03, norm = 3.32854175195975e-11, diff = 3.99000112446263e-09
iter = 59, step = 8.05054990628979e-01, func = 3.40026505199999e+03, norm = 2.24387512186913e-11, diff = 9.97500281115658e-10
iter = 60, step = 8.05054990628979e-01, func = 3.40026505199999e+03, norm = 2.47661456965166e-11, diff = 2.94605224488658e-09
iter = 61, step = 8.05054990628979e-01, func = 3.40026505200000e+03, norm = 1.06308961139037e-11, diff = 1.47302612244329e-09
iter = 62, step = 7.64802241097530e-01, func = 3.40026505200000e+03, norm = 8.18177094223029e-12, diff = 6.13384219824390e-10
iter = 63, step = 7.26562129042654e-01, func = 3.40026505200000e+03, norm = 5.30260603103377e-12, diff = 3.68233182893888e-10
iter = 64, step = 6.90234022590521e-01, func = 3.40026505200000e+03, norm = 4.91737142595222e-12, diff = 2.71270388736095e-10
iter = 65, step = 8.28280827108625e-01, func = 3.40026505200000e+03, norm = 2.45868571297611e-12, diff = 3.86560303948936e-10
B(grad) is 0, break
ralg done, iterations : 66, matrix resets : 0
f_optimal = 3.400265e+03
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 14
  UB from restricted IP = 5304.75 using centers : 4 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 0 of HessHeuristic, objective value of incumbent is = 3400.27
  UB from restricted IP = 5324.78 using centers : 1 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 1 of HessHeuristic, objective value of incumbent is = 3400.27
  UB from restricted IP = 6044.33 using centers : 12 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 2 of HessHeuristic, objective value of incumbent is = 3400.27
  UB from restricted IP = 5324.78 using centers : 1 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 3 of HessHeuristic, objective value of incumbent is = 3400.27
  UB from restricted IP = 6044.33 using centers : 12 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 4 of HessHeuristic, objective value of incumbent is = 3400.27
  UB from restricted IP = 12571.4 using centers : 2 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 5 of HessHeuristic, objective value of incumbent is = 3400.27
  UB from restricted IP = 5324.78 using centers : 1 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 6 of HessHeuristic, objective value of incumbent is = 3400.27
  UB from restricted IP = 10615 using centers : 9 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 7 of HessHeuristic, objective value of incumbent is = 3400.27
  UB from restricted IP = 12571.4 using centers : 2 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 8 of HessHeuristic, objective value of incumbent is = 3400.27
  UB from restricted IP = 7485.64 using centers : 10 
  UB from restricted IP = 3400.27 using centers : 5 
In iteration 9 of HessHeuristic, objective value of incumbent is = 3400.27
UB at end of HessHeuristic = 3400.27
UB of heuristicSolution = 3400.27
Best solution after 10 of HessHeuristic is 3400.27

Beginning LOCAL SEARCH with UB = 3400.27

Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 14
  checking neighbors of node 5
UB at end of local search heuristic = 3400.27
UB of heuristicSolution = 3400.27
Best solution after local search is 3400.27
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 14
Optimize a model with 42 rows, 68 columns and 215 nonzeros
Variable types: 54 continuous, 14 integer (14 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+05]
  Objective range  [3e+01, 9e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]

Loaded MIP start with objective 3400.27

Presolve removed 16 rows and 19 columns
Presolve time: 0.00s
Presolved: 26 rows, 49 columns, 142 nonzeros
Variable types: 49 continuous, 0 integer (0 binary)

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 3400.27 

Optimal solution found (tolerance 1.00e-04)
Best objective 3.400265052000e+03, best bound 3.400265052000e+03, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 3400.27 using centers : 5 
UB at end of ContiguityHeuristic = 3400.27
UB of (contiguous) heuristicSolution = 3400.27

Number of variables fixed to zero = 182
Number of variables fixed to one  = 0
Number of variables not fixed     = 14
Number of centers left            = 1
Percentage of vars fixed = 0.93
Academic license - for non-commercial use only
Build hess : created 14 variables
Optimize a model with 70 rows, 28 columns and 99 nonzeros
Variable types: 14 continuous, 14 integer (14 binary)
Coefficient statistics:
  Matrix range     [1e+00, 6e+05]
  Objective range  [3e+01, 9e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]

Loaded MIP start with objective 3400.27

Presolve removed 70 rows and 28 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 1: 3400.27 

Optimal solution found (tolerance 0.00e+00)
Best objective 3.400265052000e+03, best bound 3.400265052000e+03, gap 0.0000%
IP duration time: 0.000310 seconds
Total time elapsed: 0.009927 seconds
Number of callbacks: 1
Time in callbacks: 0.000003 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running WA'
Running WA
+ /home/lykhovyd/progs/districting/districting myconfig.txt WA /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/WA.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/WA/counties/graph/WA.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/WA/counties/graph/WA_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/WA/counties/graph/WA.population
state[2]        = WA
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/WA.ralg_hot
nr_comp = 1
graph: 39 nodes, 91 edges (read)
Model input: L = 669092, U = 675816, k = 10.
Graph is connected.
Model input: total population = 6724540
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 3.21921997449080e+04, norm = 9.59899451559530e+00, diff = 1.00000000000000e+00
iter = 2, step = 9.02500000000000e-01, func = 3.21922444291762e+04, norm = 6.93744902380744e+00, diff = 8.40309846512280e-01
iter = 3, step = 8.57375000000000e-01, func = 3.21916237096297e+04, norm = 8.60940993837579e+00, diff = 7.59612055432550e-01
iter = 4, step = 8.14506250000000e-01, func = 3.21912781465893e+04, norm = 6.37183509689169e+00, diff = 6.01951973755354e-01
iter = 5, step = 7.73780937500000e-01, func = 3.21916637609706e+04, norm = 4.63977283145123e+00, diff = 6.23358444258670e-01
iter = 6, step = 7.35091890625000e-01, func = 3.21922823052328e+04, norm = 4.89527576037005e+00, diff = 5.76225500771702e-01
iter = 7, step = 6.98337296093750e-01, func = 3.21922496382781e+04, norm = 7.22049740402128e+00, diff = 5.13369038483732e-01
iter = 8, step = 6.63420431289062e-01, func = 3.21930641631290e+04, norm = 6.04707544366015e+00, diff = 4.12397591695362e-01
iter = 9, step = 6.30249409724609e-01, func = 3.21929156732074e+04, norm = 5.37583680978215e+00, diff = 4.79499247306652e-01
iter = 10, step = 5.98736939238379e-01, func = 3.21924942005055e+04, norm = 5.84479522296153e+00, diff = 4.45213616440477e-01
iter = 11, step = 5.68800092276460e-01, func = 3.21924279266121e+04, norm = 6.28454554697633e+00, diff = 3.98175847310034e-01
iter = 12, step = 5.40360087662637e-01, func = 3.21927506830897e+04, norm = 5.60387046022759e+00, diff = 3.51657650091373e-01
iter = 13, step = 5.13342083279505e-01, func = 3.21928600102546e+04, norm = 4.61943153637836e+00, diff = 3.93565255400062e-01
iter = 14, step = 4.87674979115529e-01, func = 3.21927292301880e+04, norm = 5.38313418937227e+00, diff = 3.78330894340953e-01
iter = 15, step = 4.87674979115529e-01, func = 3.21928104831306e+04, norm = 5.39739163508906e+00, diff = 6.05461668329741e-01
iter = 16, step = 4.63291230159753e-01, func = 3.21929623527794e+04, norm = 3.93625700755377e+00, diff = 3.08720053021362e-01
iter = 17, step = 4.40126668651765e-01, func = 3.21929989602555e+04, norm = 5.33429597433848e+00, diff = 3.26512593599738e-01
iter = 18, step = 4.18120335219177e-01, func = 3.21932794111632e+04, norm = 3.45016358389158e+00, diff = 2.50334906880794e-01
iter = 19, step = 3.97214318458218e-01, func = 3.21930779972857e+04, norm = 4.63665746959956e+00, diff = 2.95715778592555e-01
iter = 20, step = 3.77353602535307e-01, func = 3.21933521082206e+04, norm = 3.88832390903563e+00, diff = 2.20653836331360e-01
iter = 21, step = 3.58485922408542e-01, func = 3.21933594889130e+04, norm = 3.63850513361234e+00, diff = 2.53989454077279e-01
iter = 22, step = 3.40561626288115e-01, func = 3.21934624818502e+04, norm = 2.54453906979778e+00, diff = 2.29171651747116e-01
iter = 23, step = 3.23533544973709e-01, func = 3.21933938971334e+04, norm = 2.93058568337745e+00, diff = 2.02995093132703e-01
iter = 24, step = 3.07356867725023e-01, func = 3.21934428477430e+04, norm = 2.93639051649001e+00, diff = 1.63454094214660e-01
iter = 25, step = 2.91989024338772e-01, func = 3.21936399660175e+04, norm = 2.48041264260222e+00, diff = 1.85701592796833e-01
iter = 26, step = 2.77389573121834e-01, func = 3.21935265159196e+04, norm = 3.28483635054029e+00, diff = 1.64005241205055e-01
iter = 27, step = 2.63520094465742e-01, func = 3.21935945868042e+04, norm = 3.15689306212389e+00, diff = 1.36775073087179e-01
iter = 28, step = 2.50344089742455e-01, func = 3.21936216092007e+04, norm = 2.28594466374419e+00, diff = 1.57054796819475e-01
iter = 29, step = 2.37826885255332e-01, func = 3.21936486675156e+04, norm = 2.84194747304933e+00, diff = 1.18672818450309e-01
iter = 30, step = 2.25935540992565e-01, func = 3.21936517119256e+04, norm = 2.05601607033632e+00, diff = 1.37071557543585e-01
iter = 31, step = 2.14638763942937e-01, func = 3.21936577640902e+04, norm = 2.87387758526186e+00, diff = 1.01938508792224e-01
iter = 32, step = 2.03906825745790e-01, func = 3.21937058157086e+04, norm = 2.51191429844359e+00, diff = 1.05490584372198e-01
iter = 33, step = 1.93711484458501e-01, func = 3.21936795202256e+04, norm = 2.15531997783648e+00, diff = 9.28266576347953e-02
iter = 34, step = 1.84025910235576e-01, func = 3.21937178266344e+04, norm = 1.96617165673482e+00, diff = 9.03489083181747e-02
iter = 35, step = 1.74824614723797e-01, func = 3.21936940273143e+04, norm = 1.77272061641065e+00, diff = 8.76042170757472e-02
iter = 36, step = 1.74824614723797e-01, func = 3.21937183739712e+04, norm = 1.77200615081302e+00, diff = 1.54180877614378e-01
iter = 37, step = 1.66083383987607e-01, func = 3.21937041925183e+04, norm = 1.44606241547698e+00, diff = 7.20762476625065e-02
iter = 38, step = 1.66083383987607e-01, func = 3.21937321272111e+04, norm = 1.72888127086707e+00, diff = 9.30678324037046e-02
iter = 39, step = 1.57779214788227e-01, func = 3.21937701552681e+04, norm = 1.53435480104736e+00, diff = 7.96858190892474e-02
iter = 40, step = 1.49890254048815e-01, func = 3.21937722787220e+04, norm = 1.83719274757811e+00, diff = 6.93820807974299e-02
iter = 41, step = 1.42395741346375e-01, func = 3.21937753364112e+04, norm = 1.63095613933962e+00, diff = 6.43474499914792e-02
iter = 42, step = 1.35275954279056e-01, func = 3.21937657371211e+04, norm = 1.72437447008069e+00, diff = 6.22067157294961e-02
iter = 43, step = 1.28512156565103e-01, func = 3.21937972853801e+04, norm = 1.30399620948007e+00, diff = 4.67547973876319e-02
iter = 44, step = 1.22086548736848e-01, func = 3.21938081755777e+04, norm = 1.58696533324735e+00, diff = 5.50946267139255e-02
iter = 45, step = 1.15982221300006e-01, func = 3.21937925731912e+04, norm = 1.92891115958301e+00, diff = 4.22474248153205e-02
iter = 46, step = 1.10183110235005e-01, func = 3.21937945059574e+04, norm = 1.54080960838907e+00, diff = 6.93908969864046e-02
iter = 47, step = 1.04673954723255e-01, func = 3.21937837142256e+04, norm = 1.68881409983910e+00, diff = 5.01129532125781e-02
iter = 48, step = 9.94402569870922e-02, func = 3.21938259678153e+04, norm = 1.22127817071591e+00, diff = 4.81725827210129e-02
iter = 49, step = 9.44682441377376e-02, func = 3.21938267721714e+04, norm = 1.28272072608789e+00, diff = 3.00672566039204e-02
iter = 50, step = 8.97448319308507e-02, func = 3.21938251903079e+04, norm = 1.05034388375334e+00, diff = 3.29539446622379e-02
iter = 51, step = 8.52575903343082e-02, func = 3.21938279679916e+04, norm = 8.40339347631909e-01, diff = 2.71411845201916e-02
iter = 52, step = 8.09947108175928e-02, func = 3.21938182919376e+04, norm = 1.20235807072268e+00, diff = 2.30504861484418e-02
iter = 53, step = 7.69449752767131e-02, func = 3.21938415014148e+04, norm = 8.18379256811358e-01, diff = 2.22546301127060e-02
iter = 54, step = 7.30977265128775e-02, func = 3.21938407126525e+04, norm = 1.16850144425081e+00, diff = 1.83954998768191e-02
iter = 55, step = 6.94428401872336e-02, func = 3.21938445310275e+04, norm = 8.50164455633354e-01, diff = 2.36020581509001e-02
iter = 56, step = 6.59706981778719e-02, func = 3.21938436030992e+04, norm = 8.15631833804327e-01, diff = 1.51897285257628e-02
iter = 57, step = 6.26721632689783e-02, func = 3.21938454898795e+04, norm = 1.08474656550500e+00, diff = 1.86241846140275e-02
iter = 58, step = 5.95385551055294e-02, func = 3.21938471403026e+04, norm = 7.64870152605270e-01, diff = 1.89197940171960e-02
iter = 59, step = 5.65616273502529e-02, func = 3.21938502619856e+04, norm = 6.12496604657266e-01, diff = 1.52341227125348e-02
iter = 60, step = 5.37335459827403e-02, func = 3.21938498080792e+04, norm = 7.81459850600990e-01, diff = 1.43609402565618e-02
iter = 61, step = 5.10468686836033e-02, func = 3.21938565421904e+04, norm = 6.63712169162713e-01, diff = 1.17035755714075e-02
iter = 62, step = 4.84945252494231e-02, func = 3.21938548683691e+04, norm = 7.22822487462731e-01, diff = 1.37406524947818e-02
iter = 63, step = 4.60697989869519e-02, func = 3.21938525364098e+04, norm = 7.98735163855420e-01, diff = 1.68745526909347e-02
iter = 64, step = 4.37663090376043e-02, func = 3.21938588965849e+04, norm = 5.74455679180263e-01, diff = 1.61678004664427e-02
iter = 65, step = 4.15779935857241e-02, func = 3.21938572760666e+04, norm = 7.70017100670204e-01, diff = 1.69750325725952e-02
iter = 66, step = 3.94990939064379e-02, func = 3.21938567711978e+04, norm = 7.00069420322301e-01, diff = 1.08156771639702e-02
iter = 67, step = 3.75241392111160e-02, func = 3.21938623292646e+04, norm = 4.81082426124362e-01, diff = 8.95429541325401e-03
iter = 68, step = 3.56479322505602e-02, func = 3.21938595723754e+04, norm = 5.44512422188533e-01, diff = 1.04890585162456e-02
iter = 69, step = 3.38655356380322e-02, func = 3.21938590336669e+04, norm = 5.99192864952089e-01, diff = 6.57063072196744e-03
iter = 70, step = 3.21722588561306e-02, func = 3.21938610853880e+04, norm = 4.07801676648558e-01, diff = 6.51909856593396e-03
iter = 71, step = 3.05636459133241e-02, func = 3.21938611352496e+04, norm = 3.77878421996136e-01, diff = 7.45993601079753e-03
iter = 72, step = 2.90354636176579e-02, func = 3.21938637645663e+04, norm = 3.39170505024721e-01, diff = 8.62554888926477e-03
iter = 73, step = 2.75836904367750e-02, func = 3.21938633106470e+04, norm = 3.61618444472029e-01, diff = 5.33359621265469e-03
iter = 74, step = 2.62045059149362e-02, func = 3.21938646437670e+04, norm = 3.32289286235783e-01, diff = 4.84080958510416e-03
iter = 75, step = 2.48942806191894e-02, func = 3.21938631758784e+04, norm = 4.09225193246049e-01, diff = 6.40500080891245e-03
iter = 76, step = 2.48942806191894e-02, func = 3.21938637518046e+04, norm = 4.02451162696967e-01, diff = 1.00718403279953e-02
iter = 77, step = 2.36495665882299e-02, func = 3.21938642844916e+04, norm = 3.87817842608373e-01, diff = 9.66223956052154e-03
iter = 78, step = 2.24670882588184e-02, func = 3.21938649895098e+04, norm = 4.14691224549257e-01, diff = 4.82449359974575e-03
iter = 79, step = 2.13437338458775e-02, func = 3.21938660123628e+04, norm = 2.92646664305114e-01, diff = 3.77823010910255e-03
iter = 80, step = 2.02765471535836e-02, func = 3.21938653622124e+04, norm = 3.57072832331845e-01, diff = 4.56681112267865e-03
iter = 81, step = 2.02765471535836e-02, func = 3.21938649360338e+04, norm = 3.21380913025463e-01, diff = 8.65878601712249e-03
iter = 82, step = 1.92627197959044e-02, func = 3.21938664088506e+04, norm = 2.70019992356993e-01, diff = 4.93437461482931e-03
iter = 83, step = 1.82995838061092e-02, func = 3.21938669185306e+04, norm = 2.21804183060570e-01, diff = 3.87493076158150e-03
iter = 84, step = 1.73846046158038e-02, func = 3.21938670493334e+04, norm = 2.30829756671800e-01, diff = 5.16893519449078e-03
iter = 85, step = 1.65153743850136e-02, func = 3.21938677772524e+04, norm = 2.81162339226695e-01, diff = 4.68818322130728e-03
iter = 86, step = 1.56896056657629e-02, func = 3.21938673106556e+04, norm = 3.09194655110400e-01, diff = 3.24538425107856e-03
iter = 87, step = 1.49051253824747e-02, func = 3.21938676710300e+04, norm = 2.40520258081668e-01, diff = 2.96572201761087e-03
iter = 88, step = 1.41598691133510e-02, func = 3.21938673332300e+04, norm = 2.01880069995328e-01, diff = 4.07590724733680e-03
iter = 89, step = 1.41598691133510e-02, func = 3.21938671673000e+04, norm = 2.58817647746946e-01, diff = 7.64903210795627e-03
iter = 90, step = 1.41598691133510e-02, func = 3.21938673088294e+04, norm = 2.17622397710079e-01, diff = 1.06341053367101e-02
iter = 91, step = 1.34518756576835e-02, func = 3.21938679403913e+04, norm = 1.65649990715809e-01, diff = 4.36753206830860e-03
iter = 92, step = 1.27792818747993e-02, func = 3.21938682737337e+04, norm = 1.35977681059961e-01, diff = 3.72302627647247e-03
iter = 93, step = 1.21403177810593e-02, func = 3.21938683230394e+04, norm = 2.30492455681191e-01, diff = 4.45057567745886e-03
iter = 94, step = 1.15333018920064e-02, func = 3.21938686424050e+04, norm = 1.56457981863936e-01, diff = 2.72602799221134e-03
iter = 95, step = 1.09566367974060e-02, func = 3.21938685718546e+04, norm = 1.70404854921772e-01, diff = 3.65504009940119e-03
iter = 96, step = 1.04088049575357e-02, func = 3.21938686390890e+04, norm = 1.81371026283051e-01, diff = 2.78526347804548e-03
iter = 97, step = 9.88836470965895e-03, func = 3.21938688053010e+04, norm = 1.61966498679652e-01, diff = 3.10214656622786e-03
iter = 98, step = 9.39394647417600e-03, func = 3.21938691219728e+04, norm = 1.09470805328227e-01, diff = 3.12935327328244e-03
iter = 99, step = 8.92424915046720e-03, func = 3.21938692092589e+04, norm = 1.18844465295480e-01, diff = 3.19193901883987e-03
iter = 100, step = 8.47803669294384e-03, func = 3.21938693417512e+04, norm = 9.75957668985369e-02, diff = 4.14470781266035e-03
iter = 101, step = 8.05413485829665e-03, func = 3.21938694393697e+04, norm = 1.00675361647827e-01, diff = 2.99411896070948e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 3.219388e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 10, while k = 10 and n = 39
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 6.18521e-320
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 1521
Number of centers left            = 39
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 1521 variables
Optimize a model with 1639 rows, 1560 columns and 6240 nonzeros
Variable types: 39 continuous, 1521 integer (1521 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+06]
  Objective range  [2e+00, 3e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+01]
Presolve removed 0 rows and 120 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.001163 seconds
Total time elapsed: 0.027165 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running WI'
Running WI
+ /home/lykhovyd/progs/districting/districting myconfig.txt WI /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/WI.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/WI/counties/graph/WI.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/WI/counties/graph/WI_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/WI/counties/graph/WI.population
state[2]        = WI
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/WI.ralg_hot
nr_comp = 1
graph: 72 nodes, 176 edges (read)
Model input: L = 707319, U = 714427, k = 8.
Graph is connected.
Model input: total population = 5686986
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.81478896301436e+04, norm = 2.20463295560996e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 1.81545102557622e+04, norm = 1.17961376398726e+01, diff = 1.17660348066545e+00
iter = 3, step = 9.02500000000000e-01, func = 1.81570648023326e+04, norm = 7.56802588855685e+00, diff = 7.82685723016861e-01
iter = 4, step = 8.57375000000000e-01, func = 1.81577646471143e+04, norm = 1.01939883810459e+01, diff = 6.30734490886014e-01
iter = 5, step = 8.14506250000000e-01, func = 1.81558570934484e+04, norm = 1.23228972300589e+01, diff = 5.46237481088843e-01
iter = 6, step = 7.73780937500000e-01, func = 1.81571888485374e+04, norm = 8.60184296911260e+00, diff = 5.55515438389689e-01
iter = 7, step = 7.35091890625000e-01, func = 1.81578631622418e+04, norm = 7.33560539905440e+00, diff = 5.22419173737943e-01
iter = 8, step = 6.98337296093750e-01, func = 1.81569252849292e+04, norm = 7.94129179282341e+00, diff = 5.60287567598851e-01
iter = 9, step = 6.98337296093750e-01, func = 1.81569751441874e+04, norm = 7.84832776631015e+00, diff = 9.03105602550301e-01
iter = 10, step = 6.63420431289062e-01, func = 1.81578081012434e+04, norm = 6.25599057500759e+00, diff = 4.69823731671409e-01
iter = 11, step = 6.30249409724609e-01, func = 1.81582238935572e+04, norm = 7.74354229190249e+00, diff = 4.44376288938730e-01
iter = 12, step = 5.98736939238379e-01, func = 1.81583580452215e+04, norm = 6.69147246324418e+00, diff = 4.29959488764108e-01
iter = 13, step = 5.68800092276460e-01, func = 1.81586491772541e+04, norm = 5.84158602500554e+00, diff = 4.36814842575503e-01
iter = 14, step = 5.40360087662637e-01, func = 1.81586611823271e+04, norm = 5.47878342248999e+00, diff = 4.15785251201241e-01
iter = 15, step = 5.13342083279505e-01, func = 1.81585614935855e+04, norm = 5.80527007403701e+00, diff = 3.41599617113313e-01
iter = 16, step = 4.87674979115529e-01, func = 1.81583533333046e+04, norm = 5.88359103023504e+00, diff = 3.22139031572532e-01
iter = 17, step = 4.63291230159753e-01, func = 1.81589296203085e+04, norm = 4.44448703773350e+00, diff = 3.24286793509372e-01
iter = 18, step = 4.40126668651765e-01, func = 1.81586330774636e+04, norm = 5.93265170713480e+00, diff = 3.13968420782535e-01
iter = 19, step = 4.18120335219177e-01, func = 1.81590188927868e+04, norm = 4.48732038146692e+00, diff = 2.62478465924734e-01
iter = 20, step = 3.97214318458218e-01, func = 1.81591494281991e+04, norm = 4.68444476501950e+00, diff = 2.80797275392820e-01
iter = 21, step = 3.77353602535307e-01, func = 1.81590514810523e+04, norm = 4.02996416035716e+00, diff = 2.89444203854477e-01
iter = 22, step = 3.58485922408542e-01, func = 1.81592846711929e+04, norm = 3.73684823896647e+00, diff = 2.28044152427384e-01
iter = 23, step = 3.40561626288115e-01, func = 1.81592072082609e+04, norm = 4.25062376899645e+00, diff = 2.17871451949726e-01
iter = 24, step = 3.23533544973709e-01, func = 1.81590929235561e+04, norm = 4.17827070818807e+00, diff = 2.22597738468205e-01
iter = 25, step = 3.07356867725023e-01, func = 1.81592317588142e+04, norm = 4.74843300237558e+00, diff = 2.19435368503240e-01
iter = 26, step = 2.91989024338772e-01, func = 1.81593091033270e+04, norm = 4.19563546769480e+00, diff = 1.86586991834677e-01
iter = 27, step = 2.77389573121834e-01, func = 1.81592953032421e+04, norm = 4.43213055191296e+00, diff = 1.94987343467021e-01
iter = 28, step = 2.63520094465742e-01, func = 1.81593565872194e+04, norm = 4.12509728331692e+00, diff = 1.87242014434671e-01
iter = 29, step = 2.50344089742455e-01, func = 1.81593706422135e+04, norm = 3.48094497910698e+00, diff = 1.76822201379490e-01
iter = 30, step = 2.37826885255332e-01, func = 1.81593421707652e+04, norm = 4.45686304253317e+00, diff = 1.56998753926788e-01
iter = 31, step = 2.37826885255332e-01, func = 1.81594013250408e+04, norm = 4.24718606462799e+00, diff = 2.98354313568537e-01
iter = 32, step = 2.25935540992565e-01, func = 1.81593679860615e+04, norm = 4.35917868248927e+00, diff = 1.57156139249432e-01
iter = 33, step = 2.25935540992565e-01, func = 1.81594959812306e+04, norm = 3.36706314591318e+00, diff = 2.60879849770357e-01
iter = 34, step = 2.14638763942937e-01, func = 1.81594093742545e+04, norm = 4.03582916360563e+00, diff = 1.47606613723498e-01
iter = 35, step = 2.03906825745790e-01, func = 1.81594488261775e+04, norm = 3.17786341008192e+00, diff = 1.31022259088866e-01
iter = 36, step = 1.93711484458501e-01, func = 1.81594954792315e+04, norm = 3.18570560960190e+00, diff = 1.23605288391680e-01
iter = 37, step = 1.84025910235576e-01, func = 1.81595278131999e+04, norm = 3.01696289798996e+00, diff = 1.15671398752317e-01
iter = 38, step = 1.74824614723797e-01, func = 1.81595139014961e+04, norm = 3.26858123493322e+00, diff = 1.16142098172334e-01
iter = 39, step = 1.66083383987607e-01, func = 1.81595483993344e+04, norm = 2.82796435466092e+00, diff = 9.71205255108158e-02
iter = 40, step = 1.57779214788227e-01, func = 1.81595207944700e+04, norm = 2.73609743388807e+00, diff = 1.01084553716300e-01
iter = 41, step = 1.49890254048815e-01, func = 1.81595787778769e+04, norm = 2.60796069119277e+00, diff = 9.25647386237135e-02
iter = 42, step = 1.42395741346375e-01, func = 1.81595730533299e+04, norm = 2.69167921094740e+00, diff = 8.49380869693094e-02
iter = 43, step = 1.35275954279056e-01, func = 1.81595765549451e+04, norm = 2.79578168211185e+00, diff = 8.50968972499766e-02
iter = 44, step = 1.28512156565103e-01, func = 1.81595863682540e+04, norm = 2.64135591285274e+00, diff = 7.24040775784025e-02
iter = 45, step = 1.22086548736848e-01, func = 1.81596020006710e+04, norm = 2.28898098229099e+00, diff = 8.03062241931041e-02
iter = 46, step = 1.15982221300006e-01, func = 1.81596064119798e+04, norm = 3.00515565907240e+00, diff = 6.55859453386583e-02
iter = 47, step = 1.10183110235005e-01, func = 1.81596202094674e+04, norm = 2.61095110403332e+00, diff = 6.36349157385749e-02
iter = 48, step = 1.04673954723255e-01, func = 1.81596293699348e+04, norm = 2.60452100145528e+00, diff = 5.77545270676043e-02
iter = 49, step = 9.94402569870922e-02, func = 1.81596390812231e+04, norm = 2.42446466270082e+00, diff = 5.53590967536607e-02
iter = 50, step = 9.44682441377376e-02, func = 1.81596322625384e+04, norm = 2.19307814569796e+00, diff = 4.61765659190284e-02
iter = 51, step = 8.97448319308507e-02, func = 1.81596389195183e+04, norm = 2.07199113749852e+00, diff = 5.13798463614325e-02
iter = 52, step = 8.52575903343082e-02, func = 1.81596731094029e+04, norm = 2.05681909411556e+00, diff = 4.44336452857497e-02
iter = 53, step = 8.09947108175928e-02, func = 1.81596806614374e+04, norm = 1.77273881174798e+00, diff = 4.73785444625153e-02
iter = 54, step = 7.69449752767131e-02, func = 1.81596776203934e+04, norm = 2.45767488023866e+00, diff = 4.62130619741429e-02
iter = 55, step = 7.30977265128775e-02, func = 1.81596817490499e+04, norm = 2.06318101444503e+00, diff = 3.73994109157526e-02
iter = 56, step = 6.94428401872336e-02, func = 1.81596818713744e+04, norm = 2.02856706736230e+00, diff = 3.70332030923590e-02
iter = 57, step = 6.59706981778719e-02, func = 1.81596773266996e+04, norm = 2.26893036514811e+00, diff = 3.92274643198403e-02
iter = 58, step = 6.26721632689783e-02, func = 1.81596943386432e+04, norm = 1.82607955683916e+00, diff = 3.51802201507380e-02
iter = 59, step = 5.95385551055294e-02, func = 1.81596863074821e+04, norm = 2.14218068658470e+00, diff = 3.41979016657573e-02
iter = 60, step = 5.65616273502529e-02, func = 1.81596954301954e+04, norm = 1.67366814546166e+00, diff = 3.04071202909002e-02
iter = 61, step = 5.37335459827403e-02, func = 1.81597066965644e+04, norm = 1.33562430979365e+00, diff = 3.13291726856457e-02
iter = 62, step = 5.10468686836033e-02, func = 1.81596982272734e+04, norm = 1.69112579249812e+00, diff = 2.99915714806210e-02
iter = 63, step = 4.84945252494231e-02, func = 1.81597075709705e+04, norm = 1.61074889143081e+00, diff = 2.22624275257390e-02
iter = 64, step = 4.60697989869519e-02, func = 1.81597105268489e+04, norm = 1.66545022573472e+00, diff = 2.16140444487121e-02
iter = 65, step = 4.37663090376043e-02, func = 1.81597106695982e+04, norm = 1.63214238869493e+00, diff = 2.20732651503484e-02
iter = 66, step = 4.15779935857241e-02, func = 1.81597169162965e+04, norm = 1.50943710769899e+00, diff = 1.99668074237826e-02
iter = 67, step = 3.94990939064379e-02, func = 1.81597182016938e+04, norm = 1.45331055090674e+00, diff = 1.57550332440362e-02
iter = 68, step = 3.75241392111160e-02, func = 1.81597242842178e+04, norm = 1.09900992072260e+00, diff = 1.82116877315364e-02
iter = 69, step = 3.56479322505602e-02, func = 1.81597253029825e+04, norm = 1.36011413529264e+00, diff = 1.71909088883455e-02
iter = 70, step = 3.38655356380322e-02, func = 1.81597266418670e+04, norm = 1.36089474409827e+00, diff = 1.49842995711541e-02
iter = 71, step = 3.21722588561306e-02, func = 1.81597244596332e+04, norm = 1.56952464792720e+00, diff = 1.34385727279732e-02
iter = 72, step = 3.05636459133241e-02, func = 1.81597291905877e+04, norm = 1.41665644136030e+00, diff = 1.52455882118257e-02
iter = 73, step = 2.90354636176579e-02, func = 1.81597280880633e+04, norm = 1.45734231761690e+00, diff = 1.28844470912243e-02
iter = 74, step = 2.75836904367750e-02, func = 1.81597302611768e+04, norm = 1.29742245923012e+00, diff = 1.37366562261148e-02
iter = 75, step = 2.62045059149362e-02, func = 1.81597287677520e+04, norm = 1.32067763375990e+00, diff = 1.11700420196641e-02
iter = 76, step = 2.48942806191894e-02, func = 1.81597326823124e+04, norm = 1.06522878295472e+00, diff = 1.15986795632583e-02
iter = 77, step = 2.36495665882299e-02, func = 1.81597340672375e+04, norm = 9.39865348774966e-01, diff = 1.06934632318604e-02
iter = 78, step = 2.24670882588184e-02, func = 1.81597350762302e+04, norm = 1.14577857205635e+00, diff = 9.35142273253423e-03
iter = 79, step = 2.13437338458775e-02, func = 1.81597330944816e+04, norm = 1.29951115594739e+00, diff = 9.14557022495950e-03
iter = 80, step = 2.02765471535836e-02, func = 1.81597360633283e+04, norm = 1.13228320134681e+00, diff = 7.49199582586918e-03
iter = 81, step = 1.92627197959044e-02, func = 1.81597375681051e+04, norm = 1.17708678114326e+00, diff = 7.17172094922621e-03
iter = 82, step = 1.82995838061092e-02, func = 1.81597360490672e+04, norm = 1.05837546669638e+00, diff = 8.35823128176410e-03
iter = 83, step = 1.73846046158038e-02, func = 1.81597392099015e+04, norm = 9.32492125245768e-01, diff = 7.31094067597983e-03
iter = 84, step = 1.65153743850136e-02, func = 1.81597382851721e+04, norm = 9.63309880637484e-01, diff = 7.26059687772620e-03
iter = 85, step = 1.56896056657629e-02, func = 1.81597409064513e+04, norm = 9.23795934762754e-01, diff = 6.40973216118629e-03
iter = 86, step = 1.49051253824747e-02, func = 1.81597414756940e+04, norm = 7.78734577803652e-01, diff = 6.20916206200540e-03
iter = 87, step = 1.41598691133510e-02, func = 1.81597429739605e+04, norm = 6.75684225899213e-01, diff = 5.11869619555735e-03
iter = 88, step = 1.34518756576835e-02, func = 1.81597435292839e+04, norm = 7.56540805716341e-01, diff = 4.79231705343915e-03
iter = 89, step = 1.27792818747993e-02, func = 1.81597423564186e+04, norm = 9.61482968365734e-01, diff = 4.96716332236001e-03
iter = 90, step = 1.27792818747993e-02, func = 1.81597441423226e+04, norm = 8.11869320444480e-01, diff = 8.74331259083441e-03
iter = 91, step = 1.21403177810593e-02, func = 1.81597425474470e+04, norm = 8.72367618536422e-01, diff = 5.10173595729223e-03
iter = 92, step = 1.21403177810593e-02, func = 1.81597432392013e+04, norm = 7.33751634691207e-01, diff = 8.50331145774936e-03
iter = 93, step = 1.15333018920064e-02, func = 1.81597441175068e+04, norm = 9.75244167696209e-01, diff = 4.51776570678654e-03
iter = 94, step = 1.09566367974060e-02, func = 1.81597445779414e+04, norm = 7.20536979048182e-01, diff = 4.29111540960920e-03
iter = 95, step = 1.04088049575357e-02, func = 1.81597463309905e+04, norm = 6.01942349961245e-01, diff = 3.96193037088897e-03
iter = 96, step = 9.88836470965895e-03, func = 1.81597459199917e+04, norm = 6.15042418133587e-01, diff = 3.92717440582041e-03
iter = 97, step = 9.39394647417600e-03, func = 1.81597463298676e+04, norm = 7.00985038721821e-01, diff = 3.78130886092620e-03
iter = 98, step = 8.92424915046720e-03, func = 1.81597469871416e+04, norm = 5.82513291562674e-01, diff = 3.23282826666154e-03
iter = 99, step = 8.47803669294384e-03, func = 1.81597477633371e+04, norm = 6.24742047972490e-01, diff = 3.13849872193615e-03
iter = 100, step = 8.05413485829665e-03, func = 1.81597480275938e+04, norm = 5.83125924038724e-01, diff = 3.11748415996278e-03
iter = 101, step = 7.65142811538181e-03, func = 1.81597480401202e+04, norm = 5.86053264714073e-01, diff = 3.69972502689074e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.815978e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 8, while k = 8 and n = 72
In iteration 0 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 1 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 2 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 3 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 4 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 5 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 6 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 7 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 8 of HessHeuristic, objective value of incumbent is = 1e+20
In iteration 9 of HessHeuristic, objective value of incumbent is = 1e+20
UB at end of HessHeuristic = 1e+20
UB of heuristicSolution = 2.10946e-319
Best solution after 10 of HessHeuristic is 100000000000000000000.00

Local search input from Heuristic is malicious, bailing out...
Beginning LOCAL SEARCH with UB = 1e+20

Best solution after local search is 100000000000000000000.00

Number of variables fixed to zero = 0
Number of variables fixed to one  = 0
Number of variables not fixed     = 5184
Number of centers left            = 72
Percentage of vars fixed = 0.00
Academic license - for non-commercial use only
Build hess : created 5184 variables
Optimize a model with 5401 rows, 5256 columns and 21024 nonzeros
Variable types: 72 continuous, 5184 integer (5184 binary)
Coefficient statistics:
  Matrix range     [1e+00, 9e+05]
  Objective range  [2e+00, 3e+05]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+00]
Presolve removed 0 rows and 73 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -
IP duration time: 0.003363 seconds
Total time elapsed: 0.073181 seconds
Number of callbacks: 0
Time in callbacks: 0.000000 seconds
Number of lazy constraints generated: 0
+ for state in $states
+ echo 'Running WV'
Running WV
+ /home/lykhovyd/progs/districting/districting myconfig.txt WV /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/WV.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/WV/counties/graph/WV.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/WV/counties/graph/WV_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/WV/counties/graph/WV.population
state[2]        = WV
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/WV.ralg_hot
nr_comp = 1
graph: 55 nodes, 125 edges (read)
Model input: L = 614577, U = 620753, k = 3.
Graph is connected.
Model input: total population = 1852994
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 1.08141550055238e+04, norm = 1.11100957560036e+01, diff = 1.00000000000000e+00
iter = 2, step = 9.50000000000000e-01, func = 1.08156520726734e+04, norm = 6.56498005637902e+00, diff = 1.25377185169943e+00
iter = 3, step = 9.50000000000000e-01, func = 1.08170678140239e+04, norm = 5.52843315154167e+00, diff = 1.42401644308922e+00
iter = 4, step = 9.02500000000000e-01, func = 1.08181145558572e+04, norm = 3.45211990008002e+00, diff = 5.24668654900962e-01
iter = 5, step = 8.57375000000000e-01, func = 1.08174569563206e+04, norm = 7.09248268893403e+00, diff = 7.02101386914159e-01
iter = 6, step = 8.14506250000000e-01, func = 1.08168748152030e+04, norm = 6.91496437311298e+00, diff = 5.25405391075714e-01
iter = 7, step = 8.14506250000000e-01, func = 1.08178526631402e+04, norm = 3.58859589955884e+00, diff = 1.08528768217734e+00
iter = 8, step = 7.73780937500000e-01, func = 1.08184727295713e+04, norm = 3.14829983990921e+00, diff = 5.65116840048220e-01
iter = 9, step = 7.35091890625000e-01, func = 1.08180176338959e+04, norm = 3.78724712249141e+00, diff = 5.16649194254242e-01
iter = 10, step = 7.35091890625000e-01, func = 1.08178952725581e+04, norm = 4.14828949588976e+00, diff = 9.30133314096661e-01
iter = 11, step = 6.98337296093750e-01, func = 1.08176386574100e+04, norm = 4.57289174884821e+00, diff = 4.36263852720018e-01
iter = 12, step = 6.98337296093750e-01, func = 1.08180274321189e+04, norm = 4.07244604290356e+00, diff = 8.97894415654419e-01
iter = 13, step = 6.63420431289062e-01, func = 1.08178941811658e+04, norm = 2.87394578264020e+00, diff = 4.62035922124122e-01
iter = 14, step = 6.63420431289062e-01, func = 1.08182364017422e+04, norm = 3.07879037252838e+00, diff = 8.03602082716674e-01
iter = 15, step = 6.30249409724609e-01, func = 1.08183379580432e+04, norm = 2.70094128385980e+00, diff = 4.44453418141661e-01
iter = 16, step = 6.30249409724609e-01, func = 1.08181651173696e+04, norm = 3.23367867090951e+00, diff = 7.06132543610656e-01
iter = 17, step = 5.98736939238379e-01, func = 1.08186620453019e+04, norm = 2.36562867023594e+00, diff = 4.02743042215844e-01
iter = 18, step = 5.68800092276460e-01, func = 1.08187656205758e+04, norm = 2.76073568755786e+00, diff = 3.29668741536114e-01
iter = 19, step = 5.68800092276460e-01, func = 1.08185635491479e+04, norm = 2.85040453246562e+00, diff = 7.39087412921022e-01
iter = 20, step = 5.40360087662637e-01, func = 1.08186943651392e+04, norm = 2.29797289597491e+00, diff = 2.69056504215631e-01
iter = 21, step = 5.13342083279505e-01, func = 1.08188531006747e+04, norm = 2.27781747041807e+00, diff = 3.36027995534108e-01
iter = 22, step = 4.87674979115529e-01, func = 1.08189818871426e+04, norm = 2.09092377388742e+00, diff = 2.43103786461876e-01
iter = 23, step = 4.63291230159753e-01, func = 1.08189592949514e+04, norm = 2.35726831018806e+00, diff = 2.65091569846248e-01
iter = 24, step = 4.40126668651765e-01, func = 1.08189315776612e+04, norm = 2.44088521808910e+00, diff = 2.82917921219644e-01
iter = 25, step = 4.18120335219177e-01, func = 1.08191170749344e+04, norm = 2.00644527575692e+00, diff = 2.11439666532297e-01
iter = 26, step = 3.97214318458218e-01, func = 1.08191007716250e+04, norm = 1.84271327938873e+00, diff = 2.19819019712819e-01
iter = 27, step = 3.77353602535307e-01, func = 1.08191584507636e+04, norm = 2.06249498047754e+00, diff = 2.34566313857369e-01
iter = 28, step = 3.58485922408542e-01, func = 1.08190832248800e+04, norm = 2.06628015734753e+00, diff = 2.28058598058134e-01
iter = 29, step = 3.40561626288115e-01, func = 1.08190269639048e+04, norm = 1.91413340290967e+00, diff = 2.11279771096879e-01
iter = 30, step = 3.40561626288115e-01, func = 1.08190799683034e+04, norm = 1.95070899829200e+00, diff = 3.75064625049133e-01
iter = 31, step = 3.23533544973709e-01, func = 1.08190880062083e+04, norm = 1.47665445346427e+00, diff = 1.65745149615318e-01
iter = 32, step = 3.07356867725023e-01, func = 1.08191619511263e+04, norm = 1.29236729655357e+00, diff = 1.82251240695626e-01
iter = 33, step = 2.91989024338772e-01, func = 1.08191410463844e+04, norm = 1.90762610026500e+00, diff = 1.27298723766073e-01
iter = 34, step = 2.77389573121834e-01, func = 1.08192317780560e+04, norm = 1.30406445446028e+00, diff = 1.48473801015990e-01
iter = 35, step = 2.63520094465742e-01, func = 1.08192950021463e+04, norm = 1.16123764874196e+00, diff = 1.54087560272616e-01
iter = 36, step = 2.50344089742455e-01, func = 1.08192440727515e+04, norm = 1.23770136200792e+00, diff = 1.25241957600649e-01
iter = 37, step = 2.37826885255332e-01, func = 1.08192585326255e+04, norm = 1.54743666657916e+00, diff = 1.08908172101434e-01
iter = 38, step = 2.25935540992565e-01, func = 1.08193087065632e+04, norm = 1.04365854553844e+00, diff = 1.05381131676733e-01
iter = 39, step = 2.14638763942937e-01, func = 1.08192892116039e+04, norm = 1.22991879989612e+00, diff = 1.06895739917724e-01
iter = 40, step = 2.03906825745790e-01, func = 1.08192738367357e+04, norm = 1.29977983257975e+00, diff = 1.17557415820964e-01
iter = 41, step = 1.93711484458501e-01, func = 1.08192886798008e+04, norm = 1.33284086246432e+00, diff = 1.03293400652001e-01
iter = 42, step = 1.84025910235576e-01, func = 1.08193063528933e+04, norm = 9.86138885947788e-01, diff = 9.45677314627019e-02
iter = 43, step = 1.74824614723797e-01, func = 1.08193198503695e+04, norm = 9.25035491721450e-01, diff = 9.18177020890585e-02
iter = 44, step = 1.66083383987607e-01, func = 1.08193377354870e+04, norm = 8.91049862546004e-01, diff = 6.72695817999495e-02
iter = 45, step = 1.57779214788227e-01, func = 1.08193326652509e+04, norm = 8.70916373320002e-01, diff = 5.75980273077055e-02
iter = 46, step = 1.49890254048815e-01, func = 1.08193248956338e+04, norm = 1.02711684158974e+00, diff = 6.03158806255593e-02
iter = 47, step = 1.42395741346375e-01, func = 1.08193326018978e+04, norm = 7.04103832143355e-01, diff = 5.83778396154749e-02
iter = 48, step = 1.42395741346375e-01, func = 1.08193411020539e+04, norm = 9.79544465575736e-01, diff = 1.00709742382468e-01
iter = 49, step = 1.35275954279056e-01, func = 1.08193563352136e+04, norm = 8.88462936421164e-01, diff = 5.68537774418737e-02
iter = 50, step = 1.28512156565103e-01, func = 1.08193445975758e+04, norm = 8.65233709020302e-01, diff = 6.34929977340747e-02
iter = 51, step = 1.22086548736848e-01, func = 1.08193593138287e+04, norm = 6.32668810141729e-01, diff = 4.08522093617704e-02
iter = 52, step = 1.15982221300006e-01, func = 1.08193623561849e+04, norm = 4.68606236327154e-01, diff = 3.31107375263778e-02
iter = 53, step = 1.10183110235005e-01, func = 1.08193689972324e+04, norm = 4.40172949289326e-01, diff = 5.68065847658179e-02
iter = 54, step = 1.04673954723255e-01, func = 1.08193720706102e+04, norm = 5.21859647051906e-01, diff = 5.93200044012698e-02
iter = 55, step = 9.94402569870922e-02, func = 1.08193762234221e+04, norm = 6.48922498259678e-01, diff = 3.75370447554139e-02
iter = 56, step = 9.44682441377376e-02, func = 1.08193698233578e+04, norm = 6.21894679673778e-01, diff = 2.56944180344866e-02
iter = 57, step = 8.97448319308507e-02, func = 1.08193815058033e+04, norm = 4.72622708459136e-01, diff = 2.59180154397688e-02
iter = 58, step = 8.52575903343082e-02, func = 1.08193798325103e+04, norm = 6.93688967839570e-01, diff = 3.42029657340606e-02
iter = 59, step = 8.09947108175928e-02, func = 1.08193847465099e+04, norm = 4.39010158726271e-01, diff = 2.24375243371757e-02
iter = 60, step = 7.69449752767131e-02, func = 1.08193867306375e+04, norm = 5.36042843416552e-01, diff = 3.29411782378542e-02
iter = 61, step = 7.69449752767131e-02, func = 1.08193906118600e+04, norm = 3.73635977758954e-01, diff = 5.67229226863139e-02
iter = 62, step = 7.30977265128775e-02, func = 1.08193856780163e+04, norm = 6.68974014236622e-01, diff = 3.01217491526755e-02
iter = 63, step = 7.30977265128775e-02, func = 1.08193879627755e+04, norm = 5.00826577763064e-01, diff = 3.99663642396933e-02
iter = 64, step = 7.30977265128775e-02, func = 1.08193852544865e+04, norm = 4.86503305810201e-01, diff = 4.99144359152042e-02
iter = 65, step = 6.94428401872336e-02, func = 1.08193883010326e+04, norm = 3.34195303184848e-01, diff = 2.38417896823959e-02
iter = 66, step = 6.59706981778719e-02, func = 1.08193913793441e+04, norm = 2.30760684322976e-01, diff = 2.74469407323411e-02
iter = 67, step = 6.26721632689783e-02, func = 1.08193944107420e+04, norm = 5.04632905174545e-01, diff = 2.83238723743602e-02
iter = 68, step = 6.26721632689783e-02, func = 1.08193959974059e+04, norm = 3.94367336217662e-01, diff = 3.72599529304069e-02
iter = 69, step = 5.95385551055294e-02, func = 1.08193998554321e+04, norm = 5.43538434577567e-01, diff = 1.83436836049578e-02
iter = 70, step = 5.65616273502529e-02, func = 1.08194018607226e+04, norm = 5.24999604733705e-01, diff = 1.68628602004361e-02
iter = 71, step = 5.37335459827403e-02, func = 1.08194015509307e+04, norm = 3.66268680276960e-01, diff = 2.01476841279622e-02
iter = 72, step = 5.10468686836033e-02, func = 1.08193947741863e+04, norm = 5.97941593819299e-01, diff = 2.17264725554829e-02
iter = 73, step = 4.84945252494231e-02, func = 1.08194000208363e+04, norm = 4.07876817665708e-01, diff = 1.53502391740765e-02
iter = 74, step = 4.60697989869519e-02, func = 1.08194018206048e+04, norm = 4.43312521765887e-01, diff = 1.89372034458455e-02
iter = 75, step = 4.37663090376043e-02, func = 1.08194024399465e+04, norm = 3.48611520042019e-01, diff = 1.33485644882338e-02
iter = 76, step = 4.15779935857241e-02, func = 1.08194033938286e+04, norm = 3.43942055711256e-01, diff = 2.18105089833501e-02
iter = 77, step = 3.94990939064379e-02, func = 1.08194047969605e+04, norm = 1.91835231570376e-01, diff = 1.08490032034496e-02
iter = 78, step = 3.75241392111160e-02, func = 1.08194065355209e+04, norm = 2.29473937979853e-01, diff = 1.67957506860755e-02
iter = 79, step = 3.56479322505602e-02, func = 1.08194064034089e+04, norm = 2.01380409064876e-01, diff = 1.35852944195956e-02
iter = 80, step = 3.38655356380322e-02, func = 1.08194075725124e+04, norm = 1.64715232763128e-01, diff = 1.34550089987054e-02
iter = 81, step = 3.21722588561306e-02, func = 1.08194071704406e+04, norm = 2.67124978413875e-01, diff = 1.63317117875162e-02
iter = 82, step = 3.05636459133241e-02, func = 1.08194079990169e+04, norm = 2.62683561160679e-01, diff = 1.26708881999268e-02
iter = 83, step = 2.90354636176579e-02, func = 1.08194072195259e+04, norm = 5.94304228711680e-01, diff = 8.36919005538720e-03
iter = 84, step = 2.75836904367750e-02, func = 1.08194084094780e+04, norm = 3.54945652546329e-01, diff = 1.28428488831035e-02
iter = 85, step = 2.62045059149362e-02, func = 1.08194094040902e+04, norm = 2.42939226039346e-01, diff = 1.27399715398134e-02
iter = 86, step = 2.48942806191894e-02, func = 1.08194099261696e+04, norm = 1.69029911515746e-01, diff = 9.94005825211283e-03
iter = 87, step = 2.36495665882299e-02, func = 1.08194091578508e+04, norm = 3.52563719286098e-01, diff = 1.10732302569566e-02
iter = 88, step = 2.36495665882299e-02, func = 1.08194093484110e+04, norm = 2.68429560956541e-01, diff = 1.17644535915248e-02
iter = 89, step = 2.24670882588184e-02, func = 1.08194101310977e+04, norm = 3.68998943154623e-01, diff = 8.17365715192836e-03
iter = 90, step = 2.13437338458775e-02, func = 1.08194103584584e+04, norm = 2.41843416164466e-01, diff = 6.11646393744108e-03
iter = 91, step = 2.02765471535836e-02, func = 1.08194105669579e+04, norm = 1.82672105094702e-01, diff = 1.10191601304927e-02
iter = 92, step = 1.92627197959044e-02, func = 1.08194100212153e+04, norm = 2.08639816265258e-01, diff = 7.03814380181812e-03
iter = 93, step = 1.92627197959044e-02, func = 1.08194111389799e+04, norm = 1.53733396572964e-01, diff = 1.06373263765157e-02
iter = 94, step = 1.92627197959044e-02, func = 1.08194115973340e+04, norm = 3.16440394976600e-01, diff = 2.28610501421473e-02
iter = 95, step = 1.92627197959044e-02, func = 1.08194121335193e+04, norm = 2.01971142012865e-01, diff = 1.35535250264819e-02
iter = 96, step = 1.82995838061092e-02, func = 1.08194125145608e+04, norm = 1.48183183797482e-01, diff = 8.52378538076773e-03
iter = 97, step = 1.73846046158038e-02, func = 1.08194128716003e+04, norm = 1.03379268966476e-01, diff = 7.77912564834962e-03
iter = 98, step = 1.65153743850136e-02, func = 1.08194131002972e+04, norm = 1.43590076963284e-01, diff = 8.98226680130479e-03
iter = 99, step = 1.65153743850136e-02, func = 1.08194133494886e+04, norm = 1.57413879006532e-01, diff = 1.37395881260973e-02
iter = 100, step = 1.98184492620163e-02, func = 1.08194137441145e+04, norm = 1.13488430936179e-01, diff = 2.00403451724039e-02
iter = 101, step = 1.88275267989155e-02, func = 1.08194137650027e+04, norm = 1.36411748218822e-01, diff = 8.33617369493975e-03
max_iter reached
ralg done, iterations : 101, matrix resets : 0
f_optimal = 1.081943e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 3, while k = 3 and n = 55
  UB from restricted IP = 16471.3 using centers : 4 51 11 
  UB from restricted IP = 12289.5 using centers : 32 27 21 
  UB from restricted IP = 11844.8 using centers : 32 6 21 
In iteration 0 of HessHeuristic, objective value of incumbent is = 11844.8
  UB from restricted IP = 28185.5 using centers : 8 49 12 
  UB from restricted IP = 12519.7 using centers : 21 26 12 
  UB from restricted IP = 12429.6 using centers : 21 26 10 
  UB from restricted IP = 11844.8 using centers : 21 6 32 
In iteration 1 of HessHeuristic, objective value of incumbent is = 11844.8
  UB from restricted IP = 26957.6 using centers : 5 15 26 
  UB from restricted IP = 11844.8 using centers : 6 21 32 
In iteration 2 of HessHeuristic, objective value of incumbent is = 11844.8
  UB from restricted IP = 23899.2 using centers : 28 32 10 
  UB from restricted IP = 13137.6 using centers : 21 4 43 
  UB from restricted IP = 12635.5 using centers : 21 20 43 
In iteration 3 of HessHeuristic, objective value of incumbent is = 11844.8
  UB from restricted IP = 22142.7 using centers : 10 20 5 
  UB from restricted IP = 12519.7 using centers : 12 26 21 
  UB from restricted IP = 12429.6 using centers : 10 26 21 
  UB from restricted IP = 11844.8 using centers : 32 6 21 
In iteration 4 of HessHeuristic, objective value of incumbent is = 11844.8
  UB from restricted IP = 26420.6 using centers : 8 10 43 
  UB from restricted IP = 16166.8 using centers : 25 32 13 
  UB from restricted IP = 15935.1 using centers : 35 32 13 
  UB from restricted IP = 14400.8 using centers : 35 32 0 
  UB from restricted IP = 12867.4 using centers : 24 32 44 
  UB from restricted IP = 12762.6 using centers : 37 32 44 
In iteration 5 of HessHeuristic, objective value of incumbent is = 11844.8
  UB from restricted IP = 36195 using centers : 47 37 3 
  UB from restricted IP = 15935.1 using centers : 35 32 13 
  UB from restricted IP = 14400.8 using centers : 35 32 0 
  UB from restricted IP = 12867.4 using centers : 24 32 44 
  UB from restricted IP = 12762.6 using centers : 37 32 44 
In iteration 6 of HessHeuristic, objective value of incumbent is = 11844.8
  UB from restricted IP = 26045.1 using centers : 39 20 42 
  UB from restricted IP = 11844.8 using centers : 32 6 21 
In iteration 7 of HessHeuristic, objective value of incumbent is = 11844.8
  UB from restricted IP = 46286.2 using centers : 4 19 12 
  UB from restricted IP = 15915.3 using centers : 41 32 0 
  UB from restricted IP = 12867.4 using centers : 24 32 44 
  UB from restricted IP = 12762.6 using centers : 37 32 44 
In iteration 8 of HessHeuristic, objective value of incumbent is = 11844.8
  UB from restricted IP = 19181.1 using centers : 37 13 30 
  UB from restricted IP = 12558.3 using centers : 37 21 12 
  UB from restricted IP = 12429.6 using centers : 26 21 10 
  UB from restricted IP = 11844.8 using centers : 6 21 32 
In iteration 9 of HessHeuristic, objective value of incumbent is = 11844.8
UB at end of HessHeuristic = 11844.8
UB of heuristicSolution = 11844.8
Best solution after 10 of HessHeuristic is 11844.76

Beginning LOCAL SEARCH with UB = 11844.8

Academic license - for non-commercial use only
# centers = 3, while k = 3 and n = 55
  checking neighbors of node 6
  checking neighbors of node 21
  checking neighbors of node 32
UB at end of local search heuristic = 11844.8
UB of heuristicSolution = 11844.8
Best solution after local search is 11844.76
Academic license - for non-commercial use only
# centers = 3, while k = 3 and n = 55
Optimize a model with 385 rows, 915 columns and 3021 nonzeros
Variable types: 750 continuous, 165 integer (165 binary)
Coefficient statistics:
  Matrix range     [1e+00, 2e+05]
  Objective range  [5e+00, 1e+04]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]

MIP start did not produce a new incumbent solution

Presolve removed 64 rows and 152 columns
Presolve time: 0.01s
Presolved: 321 rows, 763 columns, 2543 nonzeros
Variable types: 628 continuous, 135 integer (135 binary)

Root relaxation: objective 1.171419e+04, 75 iterations, 0.00 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 11714.1898    0    4          - 11714.1898      -     -    0s
Another try with MIP start
H    0     0                    12259.315052 11714.1898  4.45%     -    0s
     0     0 11858.6977    0    8 12259.3151 11858.6977  3.27%     -    0s
     0     0 11858.6977    0    2 12259.3151 11858.6977  3.27%     -    0s
H    0     0                    12000.624084 11858.6977  1.18%     -    0s
     0     0 11875.9482    0    2 12000.6241 11875.9482  1.04%     -    0s
     0     0 infeasible    0      12000.6241 12000.6241  0.00%     -    0s

Explored 1 nodes (169 simplex iterations) in 0.03 seconds
Thread count was 8 (of 8 available processors)

Solution count 2: 12000.6 12259.3 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.200062408400e+04, best bound 1.200062408400e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 12000.6 using centers : 6 21 32 
UB at end of ContiguityHeuristic = 12000.6
UB of (contiguous) heuristicSolution = 12000.6

Number of variables fixed to zero = 1724
Number of variables fixed to one  = 0
Number of variables not fixed     = 1301
Number of centers left            = 33
Percentage of vars fixed = 0.57
Academic license - for non-commercial use only
Build hess : created 1301 variables
Optimize a model with 1489 rows, 1356 columns and 5402 nonzeros
Variable types: 55 continuous, 1301 integer (1301 binary)
Coefficient statistics:
  Matrix range     [1e+00, 6e+05]
  Objective range  [4e+00, 4e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 3e+00]

Loaded MIP start with objective 12000.6

Presolve removed 66 rows and 22 columns
Presolve time: 0.01s
Presolved: 1423 rows, 1334 columns, 5336 nonzeros
Variable types: 0 continuous, 1334 integer (1301 binary)

Concurrent LP optimizer: dual simplex and barrier
Showing barrier log only...

Root barrier log...

Ordering time: 0.00s

Barrier statistics:
 AA' NZ     : 3.322e+04
 Factor NZ  : 8.649e+04 (roughly 2 MBytes of memory)
 Factor Ops : 5.569e+06 (less than 1 second per iteration)
 Threads    : 3

                  Objective                Residual
Iter       Primal          Dual         Primal    Dual     Compl     Time
   0   1.24537834e+06 -8.64957777e+04  2.28e+04 0.00e+00  8.27e+02     0s
   1   1.45727892e+05 -4.12037515e+04  2.39e+03 1.78e-15  9.74e+01     0s
   2   4.28123746e+04 -1.82060469e+04  4.83e+02 1.78e-15  2.31e+01     0s
   3   2.85973324e+04 -2.88074002e+03  2.31e+02 1.78e-15  9.94e+00     0s
   4   1.54553470e+04  8.05351082e+03  2.60e+01 8.88e-16  1.88e+00     0s
   5   1.27529755e+04  9.99550653e+03  6.43e+00 1.78e-15  6.78e-01     0s
   6   1.16340788e+04  1.05302201e+04  1.99e+00 8.88e-16  2.71e-01     0s
   7   1.13471662e+04  1.07010528e+04  1.17e+00 8.88e-16  1.58e-01     0s
   8   1.11322540e+04  1.07605931e+04  6.58e-01 8.88e-16  9.10e-02     0s
   9   1.10674168e+04  1.07680691e+04  5.26e-01 8.88e-16  7.34e-02     0s

Barrier performed 9 iterations in 0.03 seconds
Barrier solve interrupted - model solved by another algorithm


Solved with dual simplex

Root relaxation: objective 1.081943e+04, 755 iterations, 0.02 seconds

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0 10819.4251    0  146 12000.6241 10819.4251  9.84%     -    0s
     0     0 10874.9721    0  176 12000.6241 10874.9721  9.38%     -    0s
     0     0 10880.9315    0  177 12000.6241 10880.9315  9.33%     -    0s
     0     0 10883.3847    0  178 12000.6241 10883.3847  9.31%     -    0s
     0     0 10920.1978    0  205 12000.6241 10920.1978  9.00%     -    0s
     0     0 10921.2776    0  204 12000.6241 10921.2776  8.99%     -    0s
     0     0 10937.9288    0  224 12000.6241 10937.9288  8.86%     -    0s
     0     0 10948.4941    0  198 12000.6241 10948.4941  8.77%     -    0s
     0     0 10949.0300    0  199 12000.6241 10949.0300  8.76%     -    0s
     0     0 10956.9996    0  247 12000.6241 10956.9996  8.70%     -    0s
     0     0 10958.3851    0  251 12000.6241 10958.3851  8.68%     -    0s
     0     0 10958.4266    0  251 12000.6241 10958.4266  8.68%     -    0s
     0     0 10964.8763    0  181 12000.6241 10964.8763  8.63%     -    0s
     0     0 10965.0907    0  148 12000.6241 10965.0907  8.63%     -    0s
     0     0 10967.6216    0  151 12000.6241 10967.6216  8.61%     -    0s
     0     0 10967.7673    0  208 12000.6241 10967.7673  8.61%     -    0s
     0     0 10968.4814    0  206 12000.6241 10968.4814  8.60%     -    0s
     0     0 10968.4814    0  206 12000.6241 10968.4814  8.60%     -    0s
     0     2 10968.4814    0  206 12000.6241 10968.4814  8.60%     -    0s

Cutting planes:
  Gomory: 1
  Cover: 23
  GUB cover: 5
  Zero half: 8
  Lazy constraints: 5

Explored 117 nodes (7658 simplex iterations) in 0.51 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 12000.6 

Optimal solution found (tolerance 0.00e+00)
Best objective 1.200062408400e+04, best bound 1.200062408400e+04, gap 0.0000%
IP duration time: 0.514224 seconds
Total time elapsed: 0.863434 seconds
Number of callbacks: 3
Time in callbacks: 0.000177 seconds
Number of lazy constraints generated: 5
+ for state in $states
+ echo 'Running WY'
Running WY
+ /home/lykhovyd/progs/districting/districting myconfig.txt WY /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/WY.ralg_hot
Districting, build bbdc677
dimacs_file     = /home/lykhovyd/progs/districting/src/data/districting/WY/counties/graph/WY.dimacs
distance_file   = /home/lykhovyd/progs/districting/src/data/districting/WY/counties/graph/WY_distances.csv
population_file = /home/lykhovyd/progs/districting/src/data/districting/WY/counties/graph/WY.population
state[2]        = WY
L               = 0
U               = 0
k               = 0
model           = cut
ralg_hot_start  = /home/lykhovyd/progs/districting/computational_results/ralg_warm/counties/WY.ralg_hot
nr_comp = 1
graph: 23 nodes, 51 edges (read)
Model input: L = 560808, U = 566444, k = 1.
Graph is connected.
Model input: total population = 563626
Running ralg_blas v2 with matrix renewal, copyright Eugene Lykhovyd, 2014-2018.
init done
iter = 1, step = 9.50000000000000e-01, func = 2.56158688859932e+04, norm = 1.41420135175533e-02, diff = 1.00000000000000e+00
iter = 2, step = 1.14000000000000e+00, func = 2.56158729518221e+04, norm = 7.07100675877664e-03, diff = 1.42500000000000e+00
iter = 3, step = 1.14000000000000e+00, func = 2.56158749317040e+04, norm = 3.53550337938832e-03, diff = 5.70000000000000e-01
iter = 4, step = 1.14000000000000e+00, func = 2.56158749670590e+04, norm = 1.76775168969416e-03, diff = 2.85000000000000e-01
iter = 5, step = 1.14000000000000e+00, func = 2.56158759393225e+04, norm = 8.83875844847080e-04, diff = 1.42500000000000e-01
iter = 6, step = 1.08300000000000e+00, func = 2.56158757227729e+04, norm = 4.41937922423540e-04, diff = 3.56250000000000e-02
iter = 7, step = 1.08300000000000e+00, func = 2.56158759519177e+04, norm = 2.20968961211770e-04, diff = 3.38437500000001e-02
iter = 8, step = 1.02885000000000e+00, func = 2.56158759022549e+04, norm = 1.10484480605885e-04, diff = 8.46093750000005e-03
iter = 9, step = 1.02885000000000e+00, func = 2.56158759549091e+04, norm = 5.52422403029430e-05, diff = 8.03789062500003e-03
iter = 10, step = 9.77407500000000e-01, func = 2.56158759448819e+04, norm = 2.76211201514712e-05, diff = 2.00947265625000e-03
iter = 11, step = 9.77407500000000e-01, func = 2.56158759556195e+04, norm = 1.38105600757359e-05, diff = 1.90899902343752e-03
iter = 12, step = 9.28537125000000e-01, func = 2.56158759550058e+04, norm = 6.90528003786748e-06, diff = 4.77249755859404e-04
iter = 13, step = 9.28537125000000e-01, func = 2.56158759557882e+04, norm = 3.45264001893475e-06, diff = 4.53387268066511e-04
iter = 14, step = 9.28537125000000e-01, func = 2.56158759566088e+04, norm = 1.72632000946683e-06, diff = 2.26693634033151e-04
iter = 15, step = 8.82110268750000e-01, func = 2.56158759569905e+04, norm = 8.63160004733804e-07, diff = 5.66734085082701e-05
iter = 16, step = 8.38004755312500e-01, func = 2.56158759568192e+04, norm = 4.31580002366037e-07, diff = 2.69198690414044e-05
iter = 17, step = 8.38004755312500e-01, func = 2.56158759570000e+04, norm = 2.15790001183411e-07, diff = 2.55738755893551e-05
iter = 18, step = 7.96104517546875e-01, func = 2.56158759569548e+04, norm = 1.07895000592569e-07, diff = 6.39346889737337e-06
iter = 19, step = 9.55325421056250e-01, func = 2.56158759569808e+04, norm = 5.39475002967420e-08, diff = 9.11069317878168e-06
iter = 20, step = 9.55325421056250e-01, func = 2.56158759569935e+04, norm = 2.69737501481167e-08, diff = 3.64427727257904e-06
iter = 21, step = 9.55325421056250e-01, func = 2.56158759569937e+04, norm = 1.34868750733765e-08, diff = 1.82213863942788e-06
iter = 22, step = 9.55325421056250e-01, func = 2.56158759569999e+04, norm = 6.74343753688722e-09, diff = 9.11069320776001e-07
iter = 23, step = 9.07559150003437e-01, func = 2.56158759569985e+04, norm = 3.37171876824844e-09, diff = 2.27767410585803e-07
iter = 24, step = 9.07559150003437e-01, func = 2.56158759570000e+04, norm = 1.68585938439575e-09, diff = 2.16379534071454e-07
iter = 25, step = 8.62181192503265e-01, func = 2.56158759569996e+04, norm = 8.42929692843203e-10, diff = 5.40949022926660e-08
iter = 26, step = 1.03461743100392e+00, func = 2.56158759569998e+04, norm = 4.21464845668070e-10, diff = 7.70852209245598e-08
iter = 27, step = 1.03461743100392e+00, func = 2.56158759570000e+04, norm = 2.10732423653218e-10, diff = 3.08650649428045e-08
iter = 28, step = 9.82886559453722e-01, func = 2.56158759570000e+04, norm = 7.07065324989333e-03, diff = 1.11113281673357e-08
iter = 29, step = 9.33742231481036e-01, func = 2.56158724821750e+04, norm = 7.07065324989333e-03, diff = 4.91443279726861e-01
iter = 30, step = 1.12049067777724e+00, func = 2.56158744801993e+04, norm = 3.53532662494666e-03, diff = 7.00306673610777e-01
iter = 31, step = 1.12049067777724e+00, func = 2.56158754531504e+04, norm = 1.76766331247333e-03, diff = 2.80122669444311e-01
iter = 32, step = 1.12049067777724e+00, func = 2.56158754705245e+04, norm = 8.83831656236666e-04, diff = 1.40061334722155e-01
iter = 33, step = 1.12049067777724e+00, func = 2.56158759483130e+04, norm = 4.41915828118333e-04, diff = 7.00306673610777e-02
iter = 34, step = 1.06446614388838e+00, func = 2.56158758418964e+04, norm = 2.20957914059167e-04, diff = 1.75076668402694e-02
iter = 35, step = 1.06446614388838e+00, func = 2.56158759545025e+04, norm = 1.10478957029583e-04, diff = 1.66322834982560e-02
iter = 36, step = 1.01124283669396e+00, func = 2.56158759300972e+04, norm = 5.52394785147916e-05, diff = 4.15807087456399e-03
iter = 37, step = 1.01124283669396e+00, func = 2.56158759559725e+04, norm = 2.76197392573958e-05, diff = 3.95016733083579e-03
iter = 38, step = 9.60680694859264e-01, func = 2.56158759510449e+04, norm = 1.38098696286979e-05, diff = 9.87541832708947e-04
iter = 39, step = 9.60680694859264e-01, func = 2.56158759563217e+04, norm = 6.90493481434895e-06, diff = 9.38164741073500e-04
iter = 40, step = 9.12646660116301e-01, func = 2.56158759560200e+04, norm = 3.45246740717448e-06, diff = 2.34541185268375e-04
iter = 41, step = 9.12646660116301e-01, func = 2.56158759564046e+04, norm = 1.72623370358724e-06, diff = 2.22814126004956e-04
iter = 42, step = 9.12646660116301e-01, func = 2.56158759568077e+04, norm = 8.63116851793619e-07, diff = 1.11407063002478e-04
iter = 43, step = 8.67014327110486e-01, func = 2.56158759569954e+04, norm = 4.31558425896810e-07, diff = 2.78517657506195e-05
iter = 44, step = 8.23663610754961e-01, func = 2.56158759569111e+04, norm = 2.15779212948405e-07, diff = 1.32295887315443e-05
iter = 45, step = 9.88396332905953e-01, func = 2.56158759569556e+04, norm = 1.07889606474202e-07, diff = 1.88521639424506e-05
iter = 46, step = 9.88396332905953e-01, func = 2.56158759569911e+04, norm = 5.39448032371012e-08, diff = 7.54086557698024e-06
iter = 47, step = 9.38976516260656e-01, func = 2.56158759569956e+04, norm = 2.69724016185506e-08, diff = 1.88521639424506e-06
iter = 48, step = 8.92027690447623e-01, func = 2.56158759569981e+04, norm = 1.34862008092753e-08, diff = 8.95477787266403e-07
iter = 49, step = 8.47426305925242e-01, func = 2.56158759569989e+04, norm = 6.74310040463765e-09, diff = 4.25351948951541e-07
iter = 50, step = 8.05054990628980e-01, func = 2.56158759569996e+04, norm = 3.37155020231883e-09, diff = 2.02042175751982e-07
iter = 51, step = 7.64802241097531e-01, func = 2.56158759569997e+04, norm = 1.68577510115941e-09, diff = 9.59700334821915e-08
iter = 52, step = 7.64802241097531e-01, func = 2.56158759569997e+04, norm = 8.42887550579706e-10, diff = 9.11715318080819e-08
iter = 53, step = 7.64802241097531e-01, func = 2.56158759570000e+04, norm = 2.17207788906213e-10, diff = 4.55857659040410e-08
iter = 54, step = 7.26562129042654e-01, func = 2.56158759570000e+04, norm = 1.40112429372008e-10, diff = 6.89265937294127e-09
iter = 55, step = 6.90234022590521e-01, func = 2.56158759570000e+04, norm = 1.33298400536503e-10, diff = 6.94065504318832e-09
iter = 56, step = 6.90234022590521e-01, func = 2.56158759570000e+04, norm = 6.66492002682516e-11, diff = 6.59362229102890e-09
iter = 57, step = 6.55722321460995e-01, func = 2.56158759570000e+04, norm = 4.58715931274315e-11, diff = 1.64840557275722e-09
iter = 58, step = 6.55722321460995e-01, func = 2.56158759570000e+04, norm = 4.92648397930270e-11, diff = 4.71484837566863e-09
iter = 59, step = 6.55722321460995e-01, func = 2.56158759570000e+04, norm = 2.10031666790121e-11, diff = 2.35742418783432e-09
iter = 60, step = 6.22936205387945e-01, func = 2.56158759570000e+04, norm = 2.03381526152702e-11, diff = 1.01830615558652e-09
iter = 61, step = 6.22936205387945e-01, func = 2.56158759570000e+04, norm = 1.01690763076351e-11, diff = 9.67390847807194e-10
iter = 62, step = 6.22936205387945e-01, func = 2.56158759570000e+04, norm = 5.08453815381756e-12, diff = 4.83695423903597e-10
iter = 63, step = 6.22936205387945e-01, func = 2.56158759570000e+04, norm = 2.54226907690878e-12, diff = 2.41847711951799e-10
B(grad) is 0, break
ralg done, iterations : 64, matrix resets : 0
f_optimal = 2.561588e+04
Time stats : init 0.0, compute 0.0, total 0.0
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 23
  UB from restricted IP = 38438.1 using centers : 4 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 0 of HessHeuristic, objective value of incumbent is = 25615.9
  UB from restricted IP = 70170.1 using centers : 14 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 1 of HessHeuristic, objective value of incumbent is = 25615.9
  UB from restricted IP = 44645.7 using centers : 12 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 2 of HessHeuristic, objective value of incumbent is = 25615.9
  UB from restricted IP = 69789.4 using centers : 17 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 3 of HessHeuristic, objective value of incumbent is = 25615.9
  UB from restricted IP = 76716.7 using centers : 18 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 4 of HessHeuristic, objective value of incumbent is = 25615.9
  UB from restricted IP = 49531.8 using centers : 6 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 5 of HessHeuristic, objective value of incumbent is = 25615.9
  UB from restricted IP = 33546.9 using centers : 22 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 6 of HessHeuristic, objective value of incumbent is = 25615.9
  UB from restricted IP = 53164.1 using centers : 8 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 7 of HessHeuristic, objective value of incumbent is = 25615.9
  UB from restricted IP = 38438.1 using centers : 4 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 8 of HessHeuristic, objective value of incumbent is = 25615.9
  UB from restricted IP = 50522.8 using centers : 7 
  UB from restricted IP = 25615.9 using centers : 11 
In iteration 9 of HessHeuristic, objective value of incumbent is = 25615.9
UB at end of HessHeuristic = 25615.9
UB of heuristicSolution = 25615.9
Best solution after 10 of HessHeuristic is 25615.88

Beginning LOCAL SEARCH with UB = 25615.9

Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 23
  checking neighbors of node 11
UB at end of local search heuristic = 25615.9
UB of heuristicSolution = 25615.9
Best solution after local search is 25615.88
Academic license - for non-commercial use only
# centers = 1, while k = 1 and n = 23
Optimize a model with 69 rows, 125 columns and 404 nonzeros
Variable types: 102 continuous, 23 integer (23 binary)
Coefficient statistics:
  Matrix range     [1e+00, 9e+04]
  Objective range  [9e+01, 6e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 6e+05]

Loaded MIP start with objective 25615.9

Presolve removed 25 rows and 28 columns
Presolve time: 0.00s
Presolved: 44 rows, 97 columns, 286 nonzeros
Variable types: 97 continuous, 0 integer (0 binary)

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 8 (of 8 available processors)

Solution count 1: 25615.9 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.561587595700e+04, best bound 2.561587595700e+04, gap 0.0000%
  UB from ContiguityHeuristic restricted IP = 25615.9 using centers : 11 
UB at end of ContiguityHeuristic = 25615.9
UB of (contiguous) heuristicSolution = 25615.9

Number of variables fixed to zero = 506
Number of variables fixed to one  = 0
Number of variables not fixed     = 23
Number of centers left            = 1
Percentage of vars fixed = 0.96
Academic license - for non-commercial use only
Build hess : created 23 variables
Optimize a model with 115 rows, 46 columns and 162 nonzeros
Variable types: 23 continuous, 23 integer (23 binary)
Coefficient statistics:
  Matrix range     [1e+00, 6e+05]
  Objective range  [9e+01, 6e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]

Loaded MIP start with objective 25615.9

Presolve removed 115 rows and 46 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 8 available processors)

Solution count 1: 25615.9 

Optimal solution found (tolerance 0.00e+00)
Best objective 2.561587595700e+04, best bound 2.561587595700e+04, gap 0.0000%
IP duration time: 0.000267 seconds
Total time elapsed: 0.010747 seconds
Number of callbacks: 1
Time in callbacks: 0.000003 seconds
Number of lazy constraints generated: 0
